
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o dsp_mult_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui dsp_mult_impl_1.udb 
// Netlist created on Mon Feb 17 15:33:52 2025
// Netlist written on Mon Feb 17 15:33:59 2025
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( C );
  output [31:0] C;
  wire   VCC_net, GND_net, C_c_13, C_c_21, C_c_29, C_0_17, C_0_1, C_0_25, 
         C_0_9, C_c_5;

  SLICE_0 SLICE_0( .F0(VCC_net));
  SLICE_1 SLICE_1( .F0(GND_net));
  mult_lut_test9_mult_29 \mult_lut_test9.mult_29 ( .A4(VCC_net), .A1(VCC_net), 
    .A0(VCC_net), .B2(VCC_net), .B0(VCC_net), .O0(C_c_13));
  mult_lut_test5_mult_33 \mult_lut_test5.mult_33 ( .A3(VCC_net), .A2(VCC_net), 
    .A1(VCC_net), .A0(VCC_net), .B2(VCC_net), .B0(VCC_net), .O0(C_c_21));
  mult_lut_test1_mult_21 \mult_lut_test1.mult_21 ( .A3(VCC_net), .A1(VCC_net), 
    .A0(VCC_net), .B2(VCC_net), .B0(VCC_net), .O0(C_c_29));
  mult_lut_test7_mult_31 \mult_lut_test7.mult_31 ( .A4(VCC_net), .A0(VCC_net), 
    .B2(VCC_net), .B0(VCC_net), .O0(C_0_17));
  mult_lut_test15_mult_23 \mult_lut_test15.mult_23 ( .A6(VCC_net), 
    .A5(VCC_net), .A4(VCC_net), .A1(VCC_net), .A0(VCC_net), .B2(VCC_net), 
    .B0(VCC_net), .O0(C_0_1));
  mult_lut_test3_mult_35 \mult_lut_test3.mult_35 ( .A3(VCC_net), .A2(VCC_net), 
    .A0(VCC_net), .B2(VCC_net), .B0(VCC_net), .O0(C_0_25));
  mult_lut_test11_mult_27 \mult_lut_test11.mult_27 ( .A6(VCC_net), 
    .A5(VCC_net), .A3(VCC_net), .A2(VCC_net), .A1(VCC_net), .A0(VCC_net), 
    .B2(VCC_net), .B0(VCC_net), .O0(C_0_9));
  mult_lut_test13_mult_25 \mult_lut_test13.mult_25 ( .A6(VCC_net), 
    .A5(VCC_net), .A4(VCC_net), .A0(VCC_net), .B2(VCC_net), .B0(VCC_net), 
    .O0(C_c_5));
  C_23_ \C[23]_I ( .PADDO(GND_net), .C23(C[23]));
  C_24_ \C[24]_I ( .PADDO(GND_net), .C24(C[24]));
  C_25_ \C[25]_I ( .PADDO(C_0_25), .C25(C[25]));
  C_26_ \C[26]_I ( .PADDO(GND_net), .C26(C[26]));
  C_27_ \C[27]_I ( .PADDO(GND_net), .C27(C[27]));
  C_28_ \C[28]_I ( .PADDO(GND_net), .C28(C[28]));
  C_29_ \C[29]_I ( .PADDO(C_c_29), .C29(C[29]));
  C_30_ \C[30]_I ( .PADDO(GND_net), .C30(C[30]));
  C_0_ \C[0]_I ( .PADDO(GND_net), .C0(C[0]));
  C_1_ \C[1]_I ( .PADDO(C_0_1), .C1(C[1]));
  C_2_ \C[2]_I ( .PADDO(GND_net), .C2(C[2]));
  C_3_ \C[3]_I ( .PADDO(GND_net), .C3(C[3]));
  C_4_ \C[4]_I ( .PADDO(GND_net), .C4(C[4]));
  C_5_ \C[5]_I ( .PADDO(C_c_5), .C5(C[5]));
  C_6_ \C[6]_I ( .PADDO(GND_net), .C6(C[6]));
  C_7_ \C[7]_I ( .PADDO(GND_net), .C7(C[7]));
  C_8_ \C[8]_I ( .PADDO(GND_net), .C8(C[8]));
  C_9_ \C[9]_I ( .PADDO(C_0_9), .C9(C[9]));
  C_10_ \C[10]_I ( .PADDO(GND_net), .C10(C[10]));
  C_11_ \C[11]_I ( .PADDO(GND_net), .C11(C[11]));
  C_12_ \C[12]_I ( .PADDO(GND_net), .C12(C[12]));
  C_13_ \C[13]_I ( .PADDO(C_c_13), .C13(C[13]));
  C_14_ \C[14]_I ( .PADDO(GND_net), .C14(C[14]));
  C_15_ \C[15]_I ( .PADDO(GND_net), .C15(C[15]));
  C_16_ \C[16]_I ( .PADDO(GND_net), .C16(C[16]));
  C_17_ \C[17]_I ( .PADDO(C_0_17), .C17(C[17]));
  C_18_ \C[18]_I ( .PADDO(GND_net), .C18(C[18]));
  C_19_ \C[19]_I ( .PADDO(GND_net), .C19(C[19]));
  C_20_ \C[20]_I ( .PADDO(GND_net), .C20(C[20]));
  C_21_ \C[21]_I ( .PADDO(C_c_21), .C21(C[21]));
  C_22_ \C[22]_I ( .PADDO(GND_net), .C22(C[22]));
  C_31_ \C[31]_I ( .PADDO(GND_net), .C31(C[31]));
endmodule

module SLICE_0 ( output F0 );
  wire   GNDI;

  lut4 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module SLICE_1 ( output F0 );
  wire   GNDI;

  lut40001 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mult_lut_test9_mult_29 ( input A4, A1, A0, B2, B0, output O0 );
  wire   GNDI;

  MAC16_B \mult_lut_test9/mult_29 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(GNDI), 
    .A6(GNDI), .A5(GNDI), .A4(A4), .A3(GNDI), .A2(GNDI), .A1(A1), .A0(A0), 
    .B15(GNDI), .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), 
    .B9(GNDI), .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), 
    .B3(GNDI), .B2(B2), .B1(GNDI), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), 
    .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), 
    .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), 
    .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), 
    .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), 
    .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), 
    .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), 
    .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), 
    .O24(), .O23(), .O22(), .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), 
    .O15(), .O14(), .O13(), .O12(), .O11(), .O10(), .O9(), .O8(), .O7(), .O6(), 
    .O5(), .O4(), .O3(), .O2(), .O1(), .O0(O0), .CO(), .ACCUMCO(), 
    .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => O0) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module MAC16_B ( input CLK, CE, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, 
    C5, C4, C3, C2, C1, C0, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, 
    A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, B6, B5, B4, 
    B3, B2, B1, B0, D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, 
    D2, D1, D0, AHOLD, BHOLD, CHOLD, DHOLD, IRSTTOP, IRSTBOT, ORSTTOP, ORSTBOT, 
    OLOADTOP, OLOADBOT, ADDSUBTOP, ADDSUBBOT, OHOLDTOP, OHOLDBOT, CI, ACCUMCI, 
    SIGNEXTIN, output O31, O30, O29, O28, O27, O26, O25, O24, O23, O22, O21, 
    O20, O19, O18, O17, O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0, CO, ACCUMCO, SIGNEXTOUT );

  MAC16 INST10( .CLK(CLK), .CE(CE), .C15(C15), .C14(C14), .C13(C13), .C12(C12), 
    .C11(C11), .C10(C10), .C9(C9), .C8(C8), .C7(C7), .C6(C6), .C5(C5), .C4(C4), 
    .C3(C3), .C2(C2), .C1(C1), .C0(C0), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(D15), 
    .D14(D14), .D13(D13), .D12(D12), .D11(D11), .D10(D10), .D9(D9), .D8(D8), 
    .D7(D7), .D6(D6), .D5(D5), .D4(D4), .D3(D3), .D2(D2), .D1(D1), .D0(D0), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(CHOLD), .DHOLD(DHOLD), 
    .IRSTTOP(IRSTTOP), .IRSTBOT(IRSTBOT), .ORSTTOP(ORSTTOP), .ORSTBOT(ORSTBOT), 
    .OLOADTOP(OLOADTOP), .OLOADBOT(OLOADBOT), .ADDSUBTOP(ADDSUBTOP), 
    .ADDSUBBOT(ADDSUBBOT), .OHOLDTOP(OHOLDTOP), .OHOLDBOT(OHOLDBOT), .CI(CI), 
    .ACCUMCI(ACCUMCI), .SIGNEXTIN(SIGNEXTIN), .O31(O31), .O30(O30), .O29(O29), 
    .O28(O28), .O27(O27), .O26(O26), .O25(O25), .O24(O24), .O23(O23), 
    .O22(O22), .O21(O21), .O20(O20), .O19(O19), .O18(O18), .O17(O17), 
    .O16(O16), .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), 
    .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(O0), .CO(CO), .ACCUMCO(ACCUMCO), 
    .SIGNEXTOUT(SIGNEXTOUT));
  defparam INST10.NEG_TRIGGER = "0b0";
  defparam INST10.A_REG = "0b0";
  defparam INST10.B_REG = "0b0";
  defparam INST10.C_REG = "0b0";
  defparam INST10.D_REG = "0b0";
  defparam INST10.TOP_8x8_MULT_REG = "0b0";
  defparam INST10.BOT_8x8_MULT_REG = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG1 = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG2 = "0b0";
  defparam INST10.TOPOUTPUT_SELECT = "0b10";
  defparam INST10.TOPADDSUB_LOWERINPUT = "0b00";
  defparam INST10.TOPADDSUB_UPPERINPUT = "0b0";
  defparam INST10.TOPADDSUB_CARRYSELECT = "0b00";
  defparam INST10.BOTOUTPUT_SELECT = "0b10";
  defparam INST10.BOTADDSUB_LOWERINPUT = "0b00";
  defparam INST10.BOTADDSUB_UPPERINPUT = "0b0";
  defparam INST10.BOTADDSUB_CARRYSELECT = "0b00";
  defparam INST10.MODE_8x8 = "0b1";
  defparam INST10.A_SIGNED = "0b0";
  defparam INST10.B_SIGNED = "0b0";
endmodule

module mult_lut_test5_mult_33 ( input A3, A2, A1, A0, B2, B0, output O0 );
  wire   GNDI;

  MAC16_B \mult_lut_test5/mult_33 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(GNDI), 
    .A6(GNDI), .A5(GNDI), .A4(GNDI), .A3(A3), .A2(A2), .A1(A1), .A0(A0), 
    .B15(GNDI), .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), 
    .B9(GNDI), .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), 
    .B3(GNDI), .B2(B2), .B1(GNDI), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), 
    .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), 
    .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), 
    .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), 
    .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), 
    .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), 
    .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), 
    .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), 
    .O24(), .O23(), .O22(), .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), 
    .O15(), .O14(), .O13(), .O12(), .O11(), .O10(), .O9(), .O8(), .O7(), .O6(), 
    .O5(), .O4(), .O3(), .O2(), .O1(), .O0(O0), .CO(), .ACCUMCO(), 
    .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => O0) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_lut_test1_mult_21 ( input A3, A1, A0, B2, B0, output O0 );
  wire   GNDI;

  MAC16_B \mult_lut_test1/mult_21 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(GNDI), 
    .A6(GNDI), .A5(GNDI), .A4(GNDI), .A3(A3), .A2(GNDI), .A1(A1), .A0(A0), 
    .B15(GNDI), .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), 
    .B9(GNDI), .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), 
    .B3(GNDI), .B2(B2), .B1(GNDI), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), 
    .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), 
    .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), 
    .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), 
    .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), 
    .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), 
    .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), 
    .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), 
    .O24(), .O23(), .O22(), .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), 
    .O15(), .O14(), .O13(), .O12(), .O11(), .O10(), .O9(), .O8(), .O7(), .O6(), 
    .O5(), .O4(), .O3(), .O2(), .O1(), .O0(O0), .CO(), .ACCUMCO(), 
    .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => O0) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_lut_test7_mult_31 ( input A4, A0, B2, B0, output O0 );
  wire   GNDI;

  MAC16_B \mult_lut_test7/mult_31 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(GNDI), 
    .A6(GNDI), .A5(GNDI), .A4(A4), .A3(GNDI), .A2(GNDI), .A1(GNDI), .A0(A0), 
    .B15(GNDI), .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), 
    .B9(GNDI), .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), 
    .B3(GNDI), .B2(B2), .B1(GNDI), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), 
    .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), 
    .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), 
    .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), 
    .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), 
    .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), 
    .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), 
    .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), 
    .O24(), .O23(), .O22(), .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), 
    .O15(), .O14(), .O13(), .O12(), .O11(), .O10(), .O9(), .O8(), .O7(), .O6(), 
    .O5(), .O4(), .O3(), .O2(), .O1(), .O0(O0), .CO(), .ACCUMCO(), 
    .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => O0) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_lut_test15_mult_23 ( input A6, A5, A4, A1, A0, B2, B0, output O0 );
  wire   GNDI;

  MAC16_B \mult_lut_test15/mult_23 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(GNDI), 
    .A6(A6), .A5(A5), .A4(A4), .A3(GNDI), .A2(GNDI), .A1(A1), .A0(A0), 
    .B15(GNDI), .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), 
    .B9(GNDI), .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), 
    .B3(GNDI), .B2(B2), .B1(GNDI), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), 
    .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), 
    .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), 
    .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), 
    .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), 
    .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), 
    .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), 
    .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), 
    .O24(), .O23(), .O22(), .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), 
    .O15(), .O14(), .O13(), .O12(), .O11(), .O10(), .O9(), .O8(), .O7(), .O6(), 
    .O5(), .O4(), .O3(), .O2(), .O1(), .O0(O0), .CO(), .ACCUMCO(), 
    .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => O0) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_lut_test3_mult_35 ( input A3, A2, A0, B2, B0, output O0 );
  wire   GNDI;

  MAC16_B \mult_lut_test3/mult_35 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(GNDI), 
    .A6(GNDI), .A5(GNDI), .A4(GNDI), .A3(A3), .A2(A2), .A1(GNDI), .A0(A0), 
    .B15(GNDI), .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), 
    .B9(GNDI), .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), 
    .B3(GNDI), .B2(B2), .B1(GNDI), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), 
    .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), 
    .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), 
    .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), 
    .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), 
    .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), 
    .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), 
    .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), 
    .O24(), .O23(), .O22(), .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), 
    .O15(), .O14(), .O13(), .O12(), .O11(), .O10(), .O9(), .O8(), .O7(), .O6(), 
    .O5(), .O4(), .O3(), .O2(), .O1(), .O0(O0), .CO(), .ACCUMCO(), 
    .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => O0) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_lut_test11_mult_27 ( input A6, A5, A3, A2, A1, A0, B2, B0, output 
    O0 );
  wire   GNDI;

  MAC16_B \mult_lut_test11/mult_27 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(GNDI), 
    .A6(A6), .A5(A5), .A4(GNDI), .A3(A3), .A2(A2), .A1(A1), .A0(A0), 
    .B15(GNDI), .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), 
    .B9(GNDI), .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), 
    .B3(GNDI), .B2(B2), .B1(GNDI), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), 
    .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), 
    .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), 
    .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), 
    .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), 
    .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), 
    .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), 
    .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), 
    .O24(), .O23(), .O22(), .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), 
    .O15(), .O14(), .O13(), .O12(), .O11(), .O10(), .O9(), .O8(), .O7(), .O6(), 
    .O5(), .O4(), .O3(), .O2(), .O1(), .O0(O0), .CO(), .ACCUMCO(), 
    .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => O0) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mult_lut_test13_mult_25 ( input A6, A5, A4, A0, B2, B0, output O0 );
  wire   GNDI;

  MAC16_B \mult_lut_test13/mult_25 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(GNDI), 
    .A6(A6), .A5(A5), .A4(A4), .A3(GNDI), .A2(GNDI), .A1(GNDI), .A0(A0), 
    .B15(GNDI), .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), 
    .B9(GNDI), .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), 
    .B3(GNDI), .B2(B2), .B1(GNDI), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), 
    .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), 
    .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), 
    .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), 
    .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), 
    .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), 
    .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), 
    .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), 
    .O24(), .O23(), .O22(), .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), 
    .O15(), .O14(), .O13(), .O12(), .O11(), .O10(), .O9(), .O8(), .O7(), .O6(), 
    .O5(), .O4(), .O3(), .O2(), .O1(), .O0(O0), .CO(), .ACCUMCO(), 
    .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => O0) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_23_ ( input PADDO, output C23 );
  wire   VCCI;

  BB_B_B \C_pad[23].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C23));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C23) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module C_24_ ( input PADDO, output C24 );
  wire   VCCI;

  BB_B_B \C_pad[24].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C24));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C24) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_25_ ( input PADDO, output C25 );
  wire   VCCI;

  BB_B_B \C_pad[25].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C25));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C25) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_26_ ( input PADDO, output C26 );
  wire   VCCI;

  BB_B_B \C_pad[26].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C26));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C26) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_27_ ( input PADDO, output C27 );
  wire   VCCI;

  BB_B_B \C_pad[27].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C27));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C27) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_28_ ( input PADDO, output C28 );
  wire   VCCI;

  BB_B_B \C_pad[28].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C28));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C28) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_29_ ( input PADDO, output C29 );
  wire   VCCI;

  BB_B_B \C_pad[29].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C29));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C29) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_30_ ( input PADDO, output C30 );
  wire   VCCI;

  BB_B_B \C_pad[30].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C30));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C30) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_0_ ( input PADDO, output C0 );
  wire   VCCI;

  BB_B_B \C_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C0) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_1_ ( input PADDO, output C1 );
  wire   VCCI;

  BB_B_B \C_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C1) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_2_ ( input PADDO, output C2 );
  wire   VCCI;

  BB_B_B \C_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C2) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_3_ ( input PADDO, output C3 );
  wire   VCCI;

  BB_B_B \C_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C3) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_4_ ( input PADDO, output C4 );
  wire   VCCI;

  BB_B_B \C_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C4) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_5_ ( input PADDO, output C5 );
  wire   VCCI;

  BB_B_B \C_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C5) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_6_ ( input PADDO, output C6 );
  wire   VCCI;

  BB_B_B \C_pad[6].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C6));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C6) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_7_ ( input PADDO, output C7 );
  wire   VCCI;

  BB_B_B \C_pad[7].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C7));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C7) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_8_ ( input PADDO, output C8 );
  wire   VCCI;

  BB_B_B \C_pad[8].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C8));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C8) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_9_ ( input PADDO, output C9 );
  wire   VCCI;

  BB_B_B \C_pad[9].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C9));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C9) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_10_ ( input PADDO, output C10 );
  wire   VCCI;

  BB_B_B \C_pad[10].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C10));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C10) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_11_ ( input PADDO, output C11 );
  wire   VCCI;

  BB_B_B \C_pad[11].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C11));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C11) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_12_ ( input PADDO, output C12 );
  wire   VCCI;

  BB_B_B \C_pad[12].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C12));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C12) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_13_ ( input PADDO, output C13 );
  wire   VCCI;

  BB_B_B \C_pad[13].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C13));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C13) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_14_ ( input PADDO, output C14 );
  wire   VCCI;

  BB_B_B \C_pad[14].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C14));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C14) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_15_ ( input PADDO, output C15 );
  wire   VCCI;

  BB_B_B \C_pad[15].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C15));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C15) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_16_ ( input PADDO, output C16 );
  wire   VCCI;

  BB_B_B \C_pad[16].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C16));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C16) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_17_ ( input PADDO, output C17 );
  wire   VCCI;

  BB_B_B \C_pad[17].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C17));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C17) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_18_ ( input PADDO, output C18 );
  wire   VCCI;

  BB_B_B \C_pad[18].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C18));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C18) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_19_ ( input PADDO, output C19 );
  wire   VCCI;

  BB_B_B \C_pad[19].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C19));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C19) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_20_ ( input PADDO, output C20 );
  wire   VCCI;

  BB_B_B \C_pad[20].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C20));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C20) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_21_ ( input PADDO, output C21 );
  wire   VCCI;

  BB_B_B \C_pad[21].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C21));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C21) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_22_ ( input PADDO, output C22 );
  wire   VCCI;

  BB_B_B \C_pad[22].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C22));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C22) = (0:0:0,0:0:0);
  endspecify

endmodule

module C_31_ ( input PADDO, output C31 );
  wire   VCCI;

  BB_B_B \C_pad[31].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(C31));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => C31) = (0:0:0,0:0:0);
  endspecify

endmodule
