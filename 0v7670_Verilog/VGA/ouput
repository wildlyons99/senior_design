Building with vga

 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.48+5 (git sha1 4581f75b0, aarch64-apple-darwin22.4-clang++ 18.1.8 -fPIC -O3)

-- Running command `read_verilog my_pll.v top.v vga.v; synth_ice40 -json vga.json' --

1. Executing Verilog-2005 frontend: my_pll.v
Parsing Verilog input from `my_pll.v' to AST representation.
Generating RTLIL representation for module `\my_pll'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: top.v
Parsing Verilog input from `top.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: vga.v
Parsing Verilog input from `vga.v' to AST representation.
Generating RTLIL representation for module `\vga'.
vga.v:10: Warning: Identifier `\clk' is implicitly declared.
Successfully finished Verilog frontend.

4. Executing SYNTH_ICE40 pass.

4.1. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

4.2. Executing HIERARCHY pass (managing design hierarchy).

4.2.1. Finding top of design hierarchy..
root of   0 design levels: vga                 
root of   2 design levels: top                 
root of   1 design levels: my_pll              
Automatically selected top as design top module.

4.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \my_pll

4.2.3. Analyzing design hierarchy..
Top module:  \top
Used module:     \my_pll
Removing unused module `\vga'.
Removed 1 unused modules.
Warning: Resizing cell port top.pll_instance.rst_n_i from 32 bits to 1 bits.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$256 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$249 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$245 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$238 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$235 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$232 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$229 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$226 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$218 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$211 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$207 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$200 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$197 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$194 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$191 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$188 in module SB_DFFSR.
Removed a total of 0 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 22 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$259'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$255'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$248'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$244'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$237'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$234'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$231'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$228'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$225'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$223'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$221'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$217'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$199'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$196'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$193'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$190'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$187'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$185'.
  Set init value: \Q = 1'0

4.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$256'.
Found async reset \R in `\SB_DFFNER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$245'.
Found async reset \S in `\SB_DFFNS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$235'.
Found async reset \R in `\SB_DFFNR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$229'.
Found async reset \S in `\SB_DFFES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$218'.
Found async reset \R in `\SB_DFFER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$207'.
Found async reset \S in `\SB_DFFS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$197'.
Found async reset \R in `\SB_DFFR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$191'.

4.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~18 debug messages>

4.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$259'.
Creating decoders for process `\SB_DFFNES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$256'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$255'.
Creating decoders for process `\SB_DFFNESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$249'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$248'.
Creating decoders for process `\SB_DFFNER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$245'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$244'.
Creating decoders for process `\SB_DFFNESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$238'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$237'.
Creating decoders for process `\SB_DFFNS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$235'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$234'.
Creating decoders for process `\SB_DFFNSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$232'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$231'.
Creating decoders for process `\SB_DFFNR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$229'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$228'.
Creating decoders for process `\SB_DFFNSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$226'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$225'.
Creating decoders for process `\SB_DFFNE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$224'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$223'.
Creating decoders for process `\SB_DFFN.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$222'.
Creating decoders for process `\SB_DFFES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$221'.
Creating decoders for process `\SB_DFFES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$218'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$217'.
Creating decoders for process `\SB_DFFESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$207'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$206'.
Creating decoders for process `\SB_DFFESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$200'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$199'.
Creating decoders for process `\SB_DFFS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$197'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$196'.
Creating decoders for process `\SB_DFFSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$194'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$193'.
Creating decoders for process `\SB_DFFR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$191'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$190'.
Creating decoders for process `\SB_DFFSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$188'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$187'.
Creating decoders for process `\SB_DFFE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$186'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$185'.
Creating decoders for process `\SB_DFF.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$184'.

4.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).

4.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$256'.
  created $adff cell `$procdff$442' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$249'.
  created $dff cell `$procdff$443' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$245'.
  created $adff cell `$procdff$446' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$238'.
  created $dff cell `$procdff$447' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$235'.
  created $adff cell `$procdff$450' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$232'.
  created $dff cell `$procdff$451' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$229'.
  created $adff cell `$procdff$454' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$226'.
  created $dff cell `$procdff$455' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$224'.
  created $dff cell `$procdff$456' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$222'.
  created $dff cell `$procdff$457' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$218'.
  created $adff cell `$procdff$460' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$211'.
  created $dff cell `$procdff$461' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$207'.
  created $adff cell `$procdff$464' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$200'.
  created $dff cell `$procdff$465' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$197'.
  created $adff cell `$procdff$468' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$194'.
  created $dff cell `$procdff$469' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$191'.
  created $adff cell `$procdff$472' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$188'.
  created $dff cell `$procdff$473' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$186'.
  created $dff cell `$procdff$474' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$184'.
  created $dff cell `$procdff$475' with positive edge clock.

4.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$259'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$256'.
Removing empty process `SB_DFFNES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$256'.
Removing empty process `SB_DFFNESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$255'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$249'.
Removing empty process `SB_DFFNESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$249'.
Removing empty process `SB_DFFNER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$248'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$245'.
Removing empty process `SB_DFFNER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$245'.
Removing empty process `SB_DFFNESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$244'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$238'.
Removing empty process `SB_DFFNESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$238'.
Removing empty process `SB_DFFNS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$237'.
Removing empty process `SB_DFFNS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$235'.
Removing empty process `SB_DFFNSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$234'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$232'.
Removing empty process `SB_DFFNSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$232'.
Removing empty process `SB_DFFNR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$231'.
Removing empty process `SB_DFFNR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$229'.
Removing empty process `SB_DFFNSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$228'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$226'.
Removing empty process `SB_DFFNSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$226'.
Removing empty process `SB_DFFNE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$225'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$224'.
Removing empty process `SB_DFFNE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$224'.
Removing empty process `SB_DFFN.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$223'.
Removing empty process `SB_DFFN.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$222'.
Removing empty process `SB_DFFES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$221'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$218'.
Removing empty process `SB_DFFES.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$218'.
Removing empty process `SB_DFFESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$217'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$211'.
Removing empty process `SB_DFFESS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$211'.
Removing empty process `SB_DFFER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$210'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$207'.
Removing empty process `SB_DFFER.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$207'.
Removing empty process `SB_DFFESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$206'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$200'.
Removing empty process `SB_DFFESR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$200'.
Removing empty process `SB_DFFS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$199'.
Removing empty process `SB_DFFS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$197'.
Removing empty process `SB_DFFSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$196'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$194'.
Removing empty process `SB_DFFSS.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$194'.
Removing empty process `SB_DFFR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$193'.
Removing empty process `SB_DFFR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$191'.
Removing empty process `SB_DFFSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$190'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$188'.
Removing empty process `SB_DFFSR.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$188'.
Removing empty process `SB_DFFE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$187'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$186'.
Removing empty process `SB_DFFE.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$186'.
Removing empty process `SB_DFF.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$185'.
Removing empty process `SB_DFF.$proc$/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$184'.
Cleaned up 18 empty switches.

4.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
Optimizing module my_pll.

4.4. Executing FLATTEN pass (flatten design).
Deleting now unused module my_pll.
<suppressed ~1 debug messages>

4.5. Executing TRIBUF pass.

4.6. Executing DEMINOUT pass (demote inout ports to input or output).

4.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.10.6. Executing OPT_DFF pass (perform DFF optimizations).

4.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.10.9. Finished OPT passes. (There is nothing left to do.)

4.11. Executing FSM pass (extract and optimize FSM).

4.11.1. Executing FSM_DETECT pass (finding FSMs in design).

4.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.12. Executing OPT pass (performing simple optimizations).

4.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.12.6. Executing OPT_DFF pass (perform DFF optimizations).

4.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.12.9. Finished OPT passes. (There is nothing left to do.)

4.13. Executing WREDUCE pass (reducing word size of cells).

4.14. Executing PEEPOPT pass (run peephole optimizers).

4.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.16. Executing SHARE pass (SAT-based resource sharing).

4.17. Executing TECHMAP pass (map to technology primitives).

4.17.1. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/cmp2lut.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

4.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

4.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  created 0 $alu and 0 $macc cells.

4.21. Executing OPT pass (performing simple optimizations).

4.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.21.6. Executing OPT_DFF pass (perform DFF optimizations).

4.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.21.9. Finished OPT passes. (There is nothing left to do.)

4.22. Executing MEMORY pass.

4.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

4.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

4.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.25. Executing TECHMAP pass (map to technology primitives).

4.25.1. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

4.25.2. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

4.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.26. Executing ICE40_BRAMINIT pass.

4.27. Executing OPT pass (performing simple optimizations).

4.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.27.3. Executing OPT_DFF pass (perform DFF optimizations).

4.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.27.5. Finished fast OPT passes.

4.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.29. Executing OPT pass (performing simple optimizations).

4.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.29.6. Executing OPT_DFF pass (perform DFF optimizations).

4.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.29.9. Finished OPT passes. (There is nothing left to do.)

4.30. Executing ICE40_WRAPCARRY pass (wrap carries).

4.31. Executing TECHMAP pass (map to technology primitives).

4.31.1. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.31.2. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

4.31.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

4.32. Executing OPT pass (performing simple optimizations).

4.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.32.3. Executing OPT_DFF pass (perform DFF optimizations).

4.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.32.5. Finished fast OPT passes.

4.33. Executing ICE40_OPT pass (performing simple optimizations).

4.33.1. Running ICE40 specific optimizations.

4.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.33.4. Executing OPT_DFF pass (perform DFF optimizations).

4.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.33.6. Finished OPT passes. (There is nothing left to do.)

4.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.35. Executing TECHMAP pass (map to technology primitives).

4.35.1. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

4.35.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>

4.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.38. Executing ICE40_OPT pass (performing simple optimizations).

4.38.1. Running ICE40 specific optimizations.

4.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.38.4. Executing OPT_DFF pass (perform DFF optimizations).

4.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.38.6. Finished OPT passes. (There is nothing left to do.)

4.39. Executing TECHMAP pass (map to technology primitives).

4.39.1. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

4.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.40. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

4.41. Executing ABC9 pass.

4.41.1. Executing ABC9_OPS pass (helper functions for ABC9).

4.41.2. Executing ABC9_OPS pass (helper functions for ABC9).

4.41.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module top.
Found 0 SCCs.

4.41.4. Executing ABC9_OPS pass (helper functions for ABC9).

4.41.5. Executing PROC pass (convert processes to netlists).

4.41.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.41.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.41.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.41.5.4. Executing PROC_INIT pass (extract init attributes).

4.41.5.5. Executing PROC_ARST pass (detect async resets in processes).

4.41.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

4.41.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.41.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

4.41.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

4.41.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.41.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.41.5.12. Executing OPT_EXPR pass (perform const folding).

4.41.6. Executing TECHMAP pass (map to technology primitives).

4.41.6.1. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.41.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~125 debug messages>

4.41.7. Executing OPT pass (performing simple optimizations).

4.41.7.1. Executing OPT_EXPR pass (perform const folding).

4.41.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

4.41.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

4.41.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

4.41.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

4.41.7.6. Executing OPT_DFF pass (perform DFF optimizations).

4.41.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

4.41.7.8. Executing OPT_EXPR pass (perform const folding).

4.41.7.9. Finished OPT passes. (There is nothing left to do.)

4.41.8. Executing TECHMAP pass (map to technology primitives).

4.41.8.1. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/abc9_map.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

4.41.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

4.41.9. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/abc9_model.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

4.41.10. Executing ABC9_OPS pass (helper functions for ABC9).

4.41.11. Executing ABC9_OPS pass (helper functions for ABC9).

4.41.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

4.41.13. Executing AIGMAP pass (map logic to AIG).
Module top: replaced 0 cells with 0 new cells, skipped 2 cells.
  not replaced 2 cell types:
       1 $scopeinfo
       1 SB_PLL40_CORE

4.41.13.1. Executing ABC9_OPS pass (helper functions for ABC9).

4.41.13.2. Executing ABC9_OPS pass (helper functions for ABC9).

4.41.13.3. Executing XAIGER backend.
<suppressed ~5 debug messages>
Extracted 0 AND gates and 5 wires from module `top' to a netlist network with 2 inputs and 1 outputs.

4.41.13.4. Executing ABC9_EXE pass (technology mapping using ABC9).

4.41.13.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =      2/      1  and =       0  lev =    0 (0.00)  mem = 0.00 MB  box = 0  bb = 0
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =      2/      1  and =       0  lev =    0 (0.00)  mem = 0.00 MB  ch =    0  box = 0  bb = 0
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   52. Obj =  136. Set =  564. CutMin = no
ABC: Node =       0.  Ch =     0.  Total mem =    0.00 MB. Peak cut mem =    0.00 MB.
ABC: P:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: P:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: P:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: F:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: A:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: A:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: Total time =     0.00 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: The network is not changed by "&mfs".
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =      2/      1  and =       0  lev =    0 (0.00)  mem = 0.00 MB  box = 0  bb = 0
ABC: Mapping (K=0)  :  lut =      0  edge =       0  lev =    0 (0.00)  mem = 0.00 MB
ABC: LUT = 0 : Ave = 0.00
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.01 seconds, total: 0.01 seconds

4.41.13.6. Executing AIGER frontend.
<suppressed ~14 debug messages>
Removed 0 unused cells and 2 unused wires.

4.41.13.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        1
Removing temp directory.

4.41.14. Executing TECHMAP pass (map to technology primitives).

4.41.14.1. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

4.41.14.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

4.42. Executing ICE40_WRAPCARRY pass (wrap carries).

4.43. Executing TECHMAP pass (map to technology primitives).

4.43.1. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

4.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 0 unused cells and 3 unused wires.

4.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:        0
  with \SB_CARRY    (#0)    0
  with \SB_CARRY    (#1)    0

Eliminating LUTs.
Number of LUTs:        0
  with \SB_CARRY    (#0)    0
  with \SB_CARRY    (#1)    0

Combining LUTs.
Number of LUTs:        0
  with \SB_CARRY    (#0)    0
  with \SB_CARRY    (#1)    0

Eliminated 0 LUTs.
Combined 0 LUTs.

4.45. Executing TECHMAP pass (map to technology primitives).

4.45.1. Executing Verilog-2005 frontend: /Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/Users/tomlyons/Documents/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.45.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

4.46. Executing AUTONAME pass.

4.47. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `top'. Setting top module to top.

4.47.1. Analyzing design hierarchy..
Top module:  \top

4.47.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

4.48. Printing statistics.

=== top ===

   Number of wires:                  8
   Number of wire bits:              8
   Number of public wires:           8
   Number of public wire bits:       8
   Number of ports:                  2
   Number of port bits:              2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $scopeinfo                      1
     SB_PLL40_CORE                   1

4.49. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

4.50. Executing JSON backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: a817688a20, CPU: user 0.45s system 0.02s, MEM: 25.05 MB peak
Yosys 0.48+5 (git sha1 4581f75b0, aarch64-apple-darwin22.4-clang++ 18.1.8 -fPIC -O3)
Time spent: 73% 22x read_verilog (0 sec), 7% 1x abc9_exe (0 sec), ...
