
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o camera_output_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui camera_output_impl_1.udb 
// Netlist created on Tue Apr 15 16:20:53 2025
// Netlist written on Tue Apr 15 16:21:01 2025
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( clk_12MHz, start, CAMERA_VSYNC_IN, CAMERA_HREF_IN, CAMERA_DATA_IN, 
             CAMERA_PCLOCK, sioc, siod, done, frame_done, pixel_valid, 
             debug_state, RGB, VGA_HSYNC, VGA_VSYNC, clk_25MHz, TEST );
  input  clk_12MHz, start, CAMERA_VSYNC_IN, CAMERA_HREF_IN;
  input  [7:0] CAMERA_DATA_IN;
  input  CAMERA_PCLOCK;
  output sioc, siod, done, frame_done, pixel_valid;
  output [1:0] debug_state;
  output [5:0] RGB;
  output VGA_HSYNC, VGA_VSYNC, clk_25MHz, TEST;
  wire   \config_1.timer_5[28] , \config_1.un1_timer_cry_27_0_c_0.CO0 , 
         \config_1.timer_2_sqmuxa , \config_1.un32_FSM_state_0_sqmuxa , 
         \config_1.un1_timer_axb_28 , \config_1.un1_timer_cry_26 , 
         \config_1.un1_timer_cry_27_0_c_0_RNO_0 , \config_1.timer[27] , 
         \config_1.timer_1_sqmuxa , clk_25MHz_c, \config_1.timer[28] , 
         \config_1.un1_timer[27] , \config_1.un1_timer_cry_25_0_c_0.CO0 , 
         \config_1.un1_timer_cry_25_0_c_0_RNO_0 , \config_1.timer[26] , 
         \config_1.un1_timer_cry_24 , \config_1.un1_timer_cry_25_0_c_0_RNO , 
         \config_1.timer[25] , \config_1.un1_timer[25] , 
         \config_1.un1_timer[26] , \config_1.un1_timer_cry_23_0_c_0.CO0 , 
         \config_1.un1_timer_cry_23_0_c_0_RNO_0 , \config_1.timer[24] , 
         \config_1.un1_timer_cry_22 , \config_1.un1_timer_cry_23_0_c_0_RNO , 
         \config_1.timer[23] , \config_1.un1_timer[23] , 
         \config_1.un1_timer[24] , \config_1.un1_timer_cry_21_0_c_0.CO0 , 
         \config_1.un1_timer_cry_21_0_c_0_RNO_0 , \config_1.timer[22] , 
         \config_1.un1_timer_cry_20 , \config_1.un1_timer_cry_21_0_c_0_RNO , 
         \config_1.timer[21] , \config_1.un1_timer[21] , 
         \config_1.un1_timer[22] , \config_1.un1_timer_cry_19_0_c_0.CO0 , 
         \config_1.un1_timer_cry_19_0_c_0_RNO_0 , \config_1.timer[20] , 
         \config_1.un1_timer_cry_18 , \config_1.un1_timer_cry_19_0_c_0_RNO , 
         \config_1.timer[19] , \config_1.un1_timer[19] , 
         \config_1.un1_timer[20] , \config_1.un1_timer_cry_17_0_c_0.CO0 , 
         \config_1.un1_timer_cry_17_0_c_0_RNO_0 , \config_1.timer[18] , 
         \config_1.un1_timer_cry_16 , \config_1.un1_timer_cry_17_0_c_0_RNO , 
         \config_1.timer[17] , \config_1.un1_timer[17] , 
         \config_1.un1_timer[18] , \config_1.un1_timer_cry_15_0_c_0.CO0 , 
         \config_1.un1_timer_cry_15_0_c_0_RNO_0 , \config_1.timer[16] , 
         \config_1.un1_timer_cry_14 , \config_1.un1_timer_cry_15_0_c_0_RNO , 
         \config_1.timer[15] , \config_1.un1_timer[15] , 
         \config_1.un1_timer[16] , \config_1.un1_timer_cry_13_0_c_0.CO0 , 
         \config_1.un1_timer_cry_13_0_c_0_RNO_0 , \config_1.timer[14] , 
         \config_1.un1_timer_cry_12 , \config_1.un1_timer_cry_13_0_c_0_RNO , 
         \config_1.timer[13] , \config_1.un1_timer[13] , 
         \config_1.un1_timer[14] , \config_1.un1_timer_cry_11_0_c_0.CO0 , 
         \config_1.un1_timer_cry_11_0_c_0_RNO_0 , \config_1.timer[12] , 
         \config_1.un1_timer_cry_10 , \config_1.un1_timer_cry_11_0_c_0_RNO , 
         \config_1.timer[11] , \config_1.un1_timer[11] , 
         \config_1.un1_timer[12] , \config_1.un1_timer_cry_9_0_c_0.CO0 , 
         \config_1.un1_timer_cry_9_0_c_0_RNO_0 , \config_1.timer[10] , 
         \config_1.un1_timer_cry_8 , \config_1.un1_timer_cry_9_0_c_0_RNO , 
         \config_1.timer[9] , \config_1.un1_timer[9] , 
         \config_1.un1_timer[10] , \config_1.un1_timer_cry_7_0_c_0.CO0 , 
         \config_1.un1_timer_cry_7_0_c_0_RNO_0 , \config_1.timer[8] , 
         \config_1.un1_timer_cry_6 , \config_1.un1_timer_cry_7_0_c_0_RNO , 
         \config_1.timer[7] , \config_1.un1_timer[7] , \config_1.un1_timer[8] , 
         \config_1.un1_timer_cry_5_0_c_0.CO0 , 
         \config_1.un1_timer_cry_5_0_c_0_RNO_0 , \config_1.timer[6] , 
         \config_1.un1_timer_cry_4 , \config_1.un1_timer_cry_5_0_c_0_RNO , 
         \config_1.timer[5] , \config_1.un1_timer[5] , \config_1.un1_timer[6] , 
         \config_1.un1_timer_cry_3_0_c_0.CO0 , 
         \config_1.un1_timer_cry_3_0_c_0_RNO_0 , \config_1.timer[4] , 
         \config_1.un1_timer_cry_2 , \config_1.un1_timer_cry_3_0_c_0_RNO , 
         \config_1.timer[3] , \config_1.un1_timer[3] , \config_1.un1_timer[4] , 
         \config_1.un1_timer_cry_1_0_c_0.CO0 , 
         \config_1.un1_timer_cry_1_0_c_0_RNO_0 , \config_1.timer[2] , 
         \config_1.un1_timer_cry_0 , \config_1.un1_timer_cry_1_0_c_0_RNO , 
         \config_1.timer[1] , \config_1.un1_timer[1] , \config_1.un1_timer[2] , 
         \config_1.un1_timer_cry_0_0_c_0.CO0 , 
         \config_1.un1_timer_cry_0_0_c_0_RNO , \config_1.timer[0] , 
         \config_1.un1_timer[0] , \SCCB1.timer_cry_c_0[25].CO0 , VCC, 
         \SCCB1.timer[26] , \SCCB1.timer_cry[24] , \SCCB1.timer[25] , 
         \SCCB1.timer_s[25] , \SCCB1.timer_s[26] , \SCCB1.timer_cry[26] , 
         \SCCB1.timer_cry_c_0[23].CO0 , \SCCB1.timer[24] , 
         \SCCB1.timer_cry[22] , \SCCB1.timer[23] , \SCCB1.timer_s[23] , 
         \SCCB1.timer_s[24] , \SCCB1.timer_cry_c_0[21].CO0 , \SCCB1.timer[22] , 
         \SCCB1.timer_cry[20] , \SCCB1.timer[21] , \SCCB1.timer_s[21] , 
         \SCCB1.timer_s[22] , \SCCB1.timer_cry_c_0[19].CO0 , \SCCB1.timer[20] , 
         \SCCB1.timer_cry[18] , \SCCB1.timer[19] , \SCCB1.timer_s[19] , 
         \SCCB1.timer_s[20] , \SCCB1.timer_cry_c_0[17].CO0 , \SCCB1.timer[18] , 
         \SCCB1.timer_cry[16] , \SCCB1.timer[17] , \SCCB1.timer_s[17] , 
         \SCCB1.timer_s[18] , \SCCB1.timer_cry_c_0[15].CO0 , \SCCB1.timer[16] , 
         \SCCB1.timer_cry[14] , \SCCB1.timer[15] , \SCCB1.timer_s[15] , 
         \SCCB1.timer_s[16] , \SCCB1.timer_cry_c_0[13].CO0 , \SCCB1.timer[14] , 
         \SCCB1.timer_cry[12] , \SCCB1.timer[13] , \SCCB1.timer_s[13] , 
         \SCCB1.timer_s[14] , \SCCB1.timer_cry_c_0[11].CO0 , \SCCB1.timer[12] , 
         \SCCB1.timer_cry[10] , \SCCB1.timer[11] , \SCCB1.timer_s[11] , 
         \SCCB1.timer_s[12] , \SCCB1.timer_cry_c_0[9].CO0 , \SCCB1.timer[10] , 
         \SCCB1.timer_cry[8] , \SCCB1.timer[9] , \SCCB1.timer_s[9] , 
         \SCCB1.timer_s[10] , \SCCB1.timer_cry_c_0[7].CO0 , \SCCB1.timer[8] , 
         \SCCB1.timer_cry[6] , \SCCB1.timer[7] , \SCCB1.timer_s[7] , 
         \SCCB1.timer_s[8] , \SCCB1.timer_cry_c_0[5].CO0 , \SCCB1.timer[6] , 
         \SCCB1.timer_cry[4] , \SCCB1.timer[5] , \SCCB1.timer_s[5] , 
         \SCCB1.timer_s[6] , \SCCB1.timer_cry_c_0[3].CO0 , \SCCB1.timer[4] , 
         \SCCB1.timer_cry[2] , \SCCB1.timer[3] , \SCCB1.timer_s[3] , 
         \SCCB1.timer_s[4] , \SCCB1.timer_cry_c_0[1].CO0 , \SCCB1.timer[2] , 
         \SCCB1.timer_cry[0] , \SCCB1.timer[1] , \SCCB1.timer_s[1] , 
         \SCCB1.timer_s[2] , \SCCB1.timer_cry_c_0[0].CO0 , \SCCB1.timer[0] , 
         \SCCB1.timer_s[0] , \vga_inst.un3_row_1_cry_8_c_0_S0 , 
         \vga_inst.un3_row_1_cry_8_c_0.CO0 , \row[9] , 
         \vga_inst.un3_row_1_cry_7 , \row[8] , \vga_inst.col11 , 
         \vga_inst.N_745 , \vga_inst.un3_row_1_cry_6_c_0_S1 , 
         \vga_inst.un3_row_1_cry_6_c_0_S0 , \vga_inst.un3_row_1_cry_6_c_0.CO0 , 
         \row[7] , \vga_inst.un3_row_1_cry_5 , \row[6] , 
         \vga_inst.un3_row_1_cry_4_c_0_S1 , \vga_inst.un3_row_1_cry_4_c_0_S0 , 
         \vga_inst.un3_row_1_cry_4_c_0.CO0 , \row[5] , 
         \vga_inst.un3_row_1_cry_3 , \row[4] , 
         \vga_inst.un3_row_1_cry_2_c_0.CO0 , \row[3] , 
         \vga_inst.un3_row_1_cry_1 , \row[2] , \vga_inst.N_738 , 
         \vga_inst.N_739 , \vga_inst.un3_row_1_cry_1_c_0_S1 , 
         \vga_inst.un3_row_1_cry_1_c_0.CO0 , \row[1] , \row[0] , 
         \vga_inst.col_3[9] , \vga_inst.col_3[8] , 
         \vga_inst.un2_col_cry_8_c_0.CO0 , \col[9] , \vga_inst.un2_col_cry_7 , 
         \col[8] , \vga_inst.un2_col_cry_6_c_0_S1 , 
         \vga_inst.un2_col_cry_6_c_0_S0 , \vga_inst.un2_col_cry_6_c_0.CO0 , 
         \col[7] , \vga_inst.un2_col_cry_5 , \col[6] , \vga_inst.col_3[5] , 
         \vga_inst.un2_col_cry_4_c_0_S0 , \vga_inst.un2_col_cry_4_c_0.CO0 , 
         \vga_inst.col_Z[5] , \vga_inst.un2_col_cry_3 , \vga_inst.col_Z[4] , 
         \vga_inst.un2_col_cry_2_c_0_S1 , \vga_inst.un2_col_cry_2_c_0_S0 , 
         \vga_inst.un2_col_cry_2_c_0.CO0 , \vga_inst.col_Z[3] , 
         \vga_inst.un2_col_cry_1 , \vga_inst.col_Z[2] , 
         \vga_inst.un2_col_cry_1_c_0_S1 , \vga_inst.un2_col_cry_1_c_0.CO0 , 
         \vga_inst.col_Z[1] , \vga_inst.col_Z[0] , 
         \vga_read_address_cry_7_c_0.CO0 , O8, vga_read_address_cry_6, O7, 
         \vga_read_address[13] , \vga_read_address[14] , 
         vga_read_address_cry_8, \vga_read_address_cry_5_c_0.CO0 , O6, 
         vga_read_address_cry_4, O5, \vga_read_address[11] , 
         \vga_read_address[12] , \vga_read_address_cry_3_c_0.CO0 , O4, 
         vga_read_address_cry_2, O3, \vga_read_address[9] , 
         \vga_read_address[10] , \vga_read_address_cry_1_c_0.CO0 , O2, 
         vga_read_address_cry_0, \vga_read_address[7] , \vga_read_address[8] , 
         \vga_read_address_cry_0_c_0.CO0 , \vga_read_address[6] , 
         \address_counter_RNO_S0[15] , \address_counter_RNO[15].CO0 , 
         \carry_pack.un1_address_counter_4_cry_14 , \address_counter[15] , 
         un1_fsm_state_2, un1_address_counter_4_cry_13_c_0_S1, 
         un1_address_counter_4_cry_13_c_0_S0, 
         \un1_address_counter_4_cry_13_c_0.CO0 , \address_counter[14] , 
         \carry_pack.un1_address_counter_4_cry_12 , \address_counter[13] , 
         un1_address_counter_4_cry_11_c_0_S1, 
         un1_address_counter_4_cry_11_c_0_S0, 
         \un1_address_counter_4_cry_11_c_0.CO0 , \address_counter[12] , 
         \carry_pack.un1_address_counter_4_cry_10 , \address_counter[11] , 
         un1_address_counter_4_cry_9_c_0_S1, 
         un1_address_counter_4_cry_9_c_0_S0, 
         \un1_address_counter_4_cry_9_c_0.CO0 , \address_counter[10] , 
         \carry_pack.un1_address_counter_4_cry_8 , \address_counter[9] , 
         un1_address_counter_4_cry_7_c_0_S1, 
         un1_address_counter_4_cry_7_c_0_S0, 
         \un1_address_counter_4_cry_7_c_0.CO0 , \address_counter[8] , 
         \carry_pack.un1_address_counter_4_cry_6 , \address_counter[7] , 
         un1_address_counter_4_cry_5_c_0_S1, 
         un1_address_counter_4_cry_5_c_0_S0, 
         \un1_address_counter_4_cry_5_c_0.CO0 , \address_counter[6] , 
         \carry_pack.un1_address_counter_4_cry_4 , \address_counter[5] , 
         un1_address_counter_4_cry_3_c_0_S1, 
         un1_address_counter_4_cry_3_c_0_S0, 
         \un1_address_counter_4_cry_3_c_0.CO0 , \address_counter[4] , 
         \carry_pack.un1_address_counter_4_cry_2 , \address_counter[3] , 
         un1_address_counter_4_cry_1_c_0_S1, 
         un1_address_counter_4_cry_1_c_0_S0, 
         \un1_address_counter_4_cry_1_c_0.CO0 , \address_counter[2] , 
         \carry_pack.un1_address_counter_4_cry_0 , \address_counter[1] , 
         un1_address_counter_4_cry_0_c_0_S1, 
         \un1_address_counter_4_cry_0_c_0.CO0 , \address_counter[0] , 
         un1_start_config8_2_0, \rom1.dout_2_0_i[7] , \rom1.dout_2_0_i[6] , 
         \rom1.dout_2_7dflt_0 , \rom1.dout_RNO_0[7] , \rom1.N_938_0 , 
         \rom1.dout_2_7dflt_1 , \rom1.dout_2_6dflt_0 , 
         \rom1.dout_2_0_i_0_a7[9] , \rom1.N_965_0 , \rom_dout[6] , 
         \rom_dout[7] , \rom1.dout_2_0_i[4] , \rom1.dout_2_0_i[5] , 
         \rom1.dout_2_4dflt_2 , \rom1.dout_2_4dflt_1 , \rom1.dout_2_0_i_1[4] , 
         \rom1.dout_2_0_i_0_a7_2[5] , \rom1.dout_RNO_0[5] , 
         \rom1.dout_2_adflt , \rom_dout[5] , \rom_dout[4] , 
         \rom1.dout_2_0_i[2] , \rom1.dout_2_0_i[3] , \rom1.dout_2_2dflt_3 , 
         \rom1.dout_2_2dflt_4 , \rom1.dout_2_0_i_0_a7_1[13] , 
         \rom1.dout_2_2dflt_0 , \rom1.N_951_0 , \rom1.dout_2_3dflt_4 , 
         \rom1.dout_2_0_i_0_a2[3] , \rom_addr[2] , \rom_dout[3] , 
         \rom_dout[2] , \rom1.dout_2_0_i[0] , \rom1.dout_2_0_i[1] , 
         \rom1.dout_2_0dflt_2 , \rom1.dout_2_0dflt_3 , \rom_addr[1] , 
         \rom1.N_937_0 , \rom1.dout_2_1dflt_0 , \rom1.dout_RNO_0[1] , 
         \rom_dout[1] , \rom_dout[0] , \rom1.dout_2_0_i[14] , 
         \rom1.dout_2_0_i[15] , \rom1.dout_2_14dflt_1 , \rom1.N_939_0 , 
         \rom1.dout_2_0_i_0_a7[1] , \rom1.dout_2_14dflt_3 , \rom1.N_964_0 , 
         \rom1.dout_2_15dflt_0 , \rom_dout[15] , \rom_dout[14] , 
         \rom1.dout_2_0_i[12] , \rom1.dout_2_0_i[13] , \rom1.dout_2_12dflt_0 , 
         \rom1.dout_RNO_0[12] , \rom1.dout_2_13dflt_1 , \rom_dout[13] , 
         \rom_dout[12] , \rom1.dout_2_0_i[10] , \rom1.dout_2_0_i[11] , 
         \rom1.dout_2_10dflt_2 , \rom1.dout_2_0_i_1[10] , 
         \rom1.dout_RNO_0[10] , \rom1.N_953_0 , \rom1.dout_2_11dflt_1 , 
         \rom1.dout_RNO_0[11] , \rom1.dout_2_0_i_1_0[11] , \rom_dout[11] , 
         \rom_dout[10] , \rom1.dout_2_0_i[8] , \rom1.dout_2_0_i[9] , 
         \rom1.dout_2_8dflt_2 , \rom1.dout_2_8dflt_0 , \rom1.dout_2_0_i_1[8] , 
         \rom1.dout_2_9dflt_4 , \rom_addr[4] , \rom1.N_949_0 , \rom_dout[9] , 
         \rom_dout[8] , start_config_0, \config_1.done_0 , \vga_inst.m7_0 , 
         start_config, \fsm_state[2] , SCCB_ready, done_c, 
         \config_1.FSM_state[0] , TEST_c, \config_1.N_4_i , 
         \config_1.FSM_state_cnst_m , \config_1.N_96 , 
         \config_1.FSM_state_2_sqmuxa , \config_1.timer_5[12] , 
         \config_1.timer_5[13] , \config_1.timer_5[10] , 
         \config_1.timer_5[11] , \config_1.timer_5[8] , \config_1.timer_5[9] , 
         \config_1.timer_5[6] , \config_1.timer_5[7] , \config_1.timer_5[4] , 
         \config_1.timer_5[5] , \config_1.timer_5[2] , \config_1.timer_5[3] , 
         \config_1.timer_5[0] , \config_1.timer_5[1] , \config_1.timer_5[26] , 
         \config_1.timer_5[27] , \config_1.timer_5[24] , 
         \config_1.timer_5[25] , \config_1.timer_5[22] , 
         \config_1.timer_5[23] , \config_1.timer_5[20] , 
         \config_1.timer_5[21] , \config_1.timer_5[18] , 
         \config_1.timer_5[19] , \config_1.timer_5[16] , 
         \config_1.timer_5[17] , \config_1.timer_5[14] , 
         \config_1.timer_5[15] , \config_1.rom_addr_RNO[0] , 
         \config_1.rom_addr_RNO[1] , \config_1.timer_0_sqmuxa , \rom_addr[0] , 
         \config_1.FSM_state_RNI5NH1_0[0] , \rom_dout[14].sig_001.FeedThruLUT , 
         \rom_dout[15].sig_000.FeedThruLUT , \SCCB_addr[7] , \SCCB_addr[6] , 
         \rom_dout[12].sig_003.FeedThruLUT , 
         \rom_dout[13].sig_002.FeedThruLUT , \SCCB_addr[5] , \SCCB_addr[4] , 
         \rom_dout[10].sig_005.FeedThruLUT , 
         \rom_dout[11].sig_004.FeedThruLUT , \SCCB_addr[3] , \SCCB_addr[2] , 
         \rom_dout[8].sig_007.FeedThruLUT , \rom_dout[9].sig_006.FeedThruLUT , 
         \SCCB_addr[1] , \SCCB_addr[0] , \rom_dout[6].sig_009.FeedThruLUT , 
         \rom_dout[7].sig_008.FeedThruLUT , \SCCB_data[7] , \SCCB_data[6] , 
         \rom_dout[4].sig_011.FeedThruLUT , \rom_dout[5].sig_010.FeedThruLUT , 
         \SCCB_data[5] , \SCCB_data[4] , \rom_dout[2].sig_013.FeedThruLUT , 
         \rom_dout[3].sig_012.FeedThruLUT , \SCCB_data[3] , \SCCB_data[2] , 
         \rom_dout[0].sig_015.FeedThruLUT , \rom_dout[1].sig_014.FeedThruLUT , 
         \SCCB_data[1] , \SCCB_data[0] , \config_1.rom_addr_esr_RNO[4] , 
         \config_1.rom_addr_esr_RNO[5] , \config_1.timer_0_sqmuxa_0_0 , 
         \config_1.un1_rom_addr_c5_1 , \rom_addr[5] , 
         \config_1.timer_0_sqmuxa_d_0_0_0 , \SCCB1.FSM_state_2_fast , 
         \SCCB1.FSM_state_1_fast , \SCCB1.N_9 , \SCCB1.g0_i_m2_1_a5_2_13 , 
         \SCCB1.g0_i_m2_1_0 , \SCCB1.g0_i_m2_1_a5_2_14 , \SCCB1.g0_10 , 
         \SCCB1.g0_9 , \SCCB1.FSM_return_state[1] , \SCCB1.FSM_state_e_1_0[1] , 
         \SCCB1.FSM_state_fast[1] , \SCCB1.FSM_state_fast[0] , 
         \SCCB1.byte_counter_scalar , \SCCB1.byte_counter_0 , \SCCB1.CO0 , 
         \SCCB1.FSM_state_RNI6J0D_2[0] , \SCCB1.FSM_state_1_rep1_RNI4J0M , 
         \SCCB1.byte_counter[1] , \SCCB1.byte_counter[0] , 
         \SCCB1.un1_FSM_state_5 , \SCCB1.byte_index_0 , \SCCB1.byte_index_1 , 
         \SCCB1.FSM_state_cnst_1 , \SCCB1.byte_index[1] , 
         \SCCB1.byte_index[0] , \SCCB1.un1_FSM_state_9 , 
         \SCCB1.byte_index_scalar , \SCCB1.un1_byte_index_c2 , 
         \SCCB1.byte_index[2] , \SCCB1.timer_lm[27] , \SCCB1.timer[27] , 
         \SCCB1.N_198_i , \SCCB1.timere_0_i , \SCCB1.timer_lm[26] , 
         \SCCB1.timer_lm[24] , \SCCB1.timer_lm[25] , \SCCB1.timer_lm[22] , 
         \SCCB1.timer_lm[23] , \SCCB1.timer_lm[20] , \SCCB1.timer_lm[21] , 
         \SCCB1.timer_lm[18] , \SCCB1.timer_lm[19] , \SCCB1.timer_lm[16] , 
         \SCCB1.timer_lm[17] , \SCCB1.timer_lm[14] , \SCCB1.timer_lm[15] , 
         \SCCB1.timer_lm[12] , \SCCB1.timer_lm[13] , \SCCB1.timer_lm[10] , 
         \SCCB1.timer_lm[11] , \SCCB1.timer_lm[8] , \SCCB1.timer_lm[9] , 
         \SCCB1.timer_lm[6] , \SCCB1.timer_lm[7] , 
         \SCCB1.un1_FSM_state_29_0_1 , \SCCB1.timer_lm[4] , 
         \SCCB1.timer_lm[5] , \SCCB1.un73_FSM_state_0_sqmuxacf1 , 
         \SCCB1.timer_RNIM5CP3_0[16] , \SCCB1.timer_lm[2] , 
         \SCCB1.timer_lm[3] , \SCCB1.N_5_i , \SCCB1.timer_lm[0] , 
         \SCCB1.timer_lm[1] , \SCCB1.timer_RNO_0[0] , 
         \SCCB_addr[6].sig_017.FeedThruLUT , 
         \SCCB_addr[7].sig_016.FeedThruLUT , \SCCB1.latched_address_0_sqmuxa , 
         \SCCB1.latched_address[7] , \SCCB1.latched_address[6] , 
         \SCCB_addr[4].sig_019.FeedThruLUT , 
         \SCCB_addr[5].sig_018.FeedThruLUT , \SCCB1.latched_address[5] , 
         \SCCB1.latched_address[4] , \SCCB_addr[2].sig_021.FeedThruLUT , 
         \SCCB_addr[3].sig_020.FeedThruLUT , \SCCB1.latched_address[3] , 
         \SCCB1.latched_address[2] , \SCCB_addr[0].sig_023.FeedThruLUT , 
         \SCCB_addr[1].sig_022.FeedThruLUT , \SCCB1.latched_address[1] , 
         \SCCB1.latched_address[0] , \SCCB_data[6].sig_025.FeedThruLUT , 
         \SCCB_data[7].sig_024.FeedThruLUT , \SCCB1.latched_data[7] , 
         \SCCB1.latched_data[6] , \SCCB_data[4].sig_027.FeedThruLUT , 
         \SCCB_data[5].sig_026.FeedThruLUT , \SCCB1.latched_data[5] , 
         \SCCB1.latched_data[4] , \SCCB_data[2].sig_029.FeedThruLUT , 
         \SCCB_data[3].sig_028.FeedThruLUT , \SCCB1.latched_data[3] , 
         \SCCB1.latched_data[2] , \SCCB_data[0].sig_031.FeedThruLUT , 
         \SCCB_data[1].sig_030.FeedThruLUT , \SCCB1.latched_data[1] , 
         \SCCB1.latched_data[0] , \SCCB1.FSM_return_state_2 , 
         \SCCB1.FSM_return_state_1 , \SCCB1.un1_FSM_state_26_0 , 
         \SCCB1.FSM_return_state[0] , \SCCB1.FSM_state[0] , 
         \SCCB1.FSM_state[1] , \SCCB1.N_174_0 , \SCCB1.N_178_0_i , 
         \SCCB1.tx_byte_7_iv_0_157_i_0 , \SCCB1.N_97_1 , 
         \SCCB1.tx_byte_7_iv_176_0 , \SCCB1.un1_FSM_state_18_0_i , 
         \SCCB1.tx_byte[7] , \SCCB1.tx_byte[6] , \SCCB1.N_138_0_i , 
         \SCCB1.N_151_0_i , \SCCB1.tx_byte_7_iv_2_125_0 , 
         \SCCB1.tx_byte_7_iv_1_141_0 , \SCCB1.tx_byte[5] , \SCCB1.tx_byte[4] , 
         \SCCB1.N_112_0_i , \SCCB1.N_125_0_i , \SCCB1.tx_byte_7_iv_4_93_0 , 
         \SCCB1.tx_byte_7_iv_3_109_0 , \SCCB1.tx_byte[3] , \SCCB1.tx_byte[2] , 
         \SCCB1.N_87_0_i , \SCCB1.N_108_0 , \SCCB1.N_96_1 , 
         \SCCB1.tx_byte_7_iv_0_0_74_i_0 , \SCCB1.tx_byte[1] , 
         \SCCB1.tx_byte[0] , \SCCB1.FSM_state_0 , \SCCB1.FSM_state_scalar , 
         \SCCB1.FSM_return_state[2] , \SCCB1.N_20 , 
         \SCCB1.FSM_state_cnst_1_0_0[2] , \SCCB1.timer_RNIHQQO6[0] , 
         \SCCB1.g0_i_a3_0_16 , \SCCB1.g0_i_a3_0_15 , \SCCB1.g0_i_a3_0_14 , 
         \SCCB1.N_6_0 , \SCCB1.FSM_state[3] , \SCCB1.FSM_state[2] , 
         \SCCB1.FSM_state_2 , \SCCB1.FSM_state_1 , 
         \reader.CAMERA_VSYNC_IN_c_i , \reader.frame_done , CAMERA_VSYNC_IN_c, 
         \reader.FSM_state[0] , CAMERA_PCLOCK_c, frame_done_c, 
         \reader.pixel_datace_0[0] , \reader.pixel_half , CAMERA_HREF_IN_c, 
         pixel_valid_c, \CAMERA_DATA_IN_c[6].sig_033.FeedThruLUT , 
         \CAMERA_DATA_IN_c[7].sig_032.FeedThruLUT , \CAMERA_DATA_IN_c[6] , 
         \CAMERA_DATA_IN_c[7] , \reader.pixel_half_RNIKJ0O , \pixel_data[7] , 
         \pixel_data[6] , \CAMERA_DATA_IN_c[4].sig_035.FeedThruLUT , 
         \CAMERA_DATA_IN_c[5].sig_034.FeedThruLUT , \CAMERA_DATA_IN_c[4] , 
         \CAMERA_DATA_IN_c[5] , \pixel_data[5] , \pixel_data[4] , 
         \CAMERA_DATA_IN_c[2].sig_037.FeedThruLUT , 
         \CAMERA_DATA_IN_c[3].sig_036.FeedThruLUT , \CAMERA_DATA_IN_c[2] , 
         \CAMERA_DATA_IN_c[3] , \pixel_data[3] , \pixel_data[2] , 
         \CAMERA_DATA_IN_c[0].sig_039.FeedThruLUT , 
         \CAMERA_DATA_IN_c[1].sig_038.FeedThruLUT , \CAMERA_DATA_IN_c[0] , 
         \CAMERA_DATA_IN_c[1] , \pixel_data[1] , \pixel_data[0] , 
         \vga_inst.row_3[2] , \vga_inst.row_3[3] , \vga_inst.m16_5 , 
         \vga_inst.m16_4 , spram_maskwe_0, spram_maskwe_scalar, 
         \spram_maskwe[2] , start_config11, pixel_toggle, WR9, 
         \spram_maskwe[0] , start_prev_0, start_prev, un1_start_config9_1_0, 
         \debug_state_c[1] , start_c, \m39$n0 , un1_start_config9_3_0, 
         N_195_0_i, N_203_0_i, \spram_data_in[15] , \spram_data_in[14] , 
         N_179_0_i, N_187_0_i, \spram_data_in[13] , \spram_data_in[12] , 
         N_163_0_i, N_171_0_i, \spram_data_in[11] , \spram_data_in[10] , 
         N_147_0_i, N_155_0_i, \spram_data_in[9] , \spram_data_in[8] , 
         N_131_0_i, N_139_0_i, \spram_data_in[7] , \spram_data_in[6] , 
         N_115_0_i, N_123_0_i, \spram_data_in[5] , \spram_data_in[4] , 
         N_99_0_i, N_107_0_i, \spram_data_in[3] , \spram_data_in[2] , N_83_0_i, 
         N_91_0_i, \spram_data_in[1] , \spram_data_in[0] , fsm_state_1, 
         fsm_state_0, \fsm_state_e_1_0[0] , \debug_state_c[0] , 
         \fsm_state_e_1[0] , \fsm_state_e_1_1[0] , \fsm_state_RNO_0[1] , 
         \rom_addr[3] , \rom1.dout_RNO_3[7] , \rom1.N_944_0 , 
         \rom1.dout_2_0_i_1[11] , \rom1.dout_2_0_i_0_a2_1[1] , 
         \rom1.dout_RNO_3[8] , \rom1.N_942_0 , \rom1.N_945_0 , \rom1.N_935_0 , 
         \rom1.dout_2_0_i_0_o7_x0[9] , \config_1.rom_addr_esr_RNO[6] , 
         \config_1.un1_rom_addr_ac0_9_out_0 , \rom_addr[6] , \rom_addr[7] , 
         \rom1.dout_2_9dflt_0 , \rom1.dout_2_9dflt_1 , \rom1.dout_2_0dflt_0 , 
         \rom1.N_936_0 , \config_1.timer_0_sqmuxa_d_0 , \config_1.N_119 , 
         \vga_inst.grayscale_value[1] , \vga_inst.un9_RGB , \vga_inst.valid , 
         \vga_inst.un2_spram_addr , \RGB_c[3] , O9, \vga_read_address[15] , 
         \vga_inst.N_266 , \vga_inst.N_45 , \data_out1[15] , \data_out1[7] , 
         \vga_inst.fsm_state19_8 , fsm_state19_x, fsm_state19, 
         \vga_inst.fsm_state19_sx , \vga_inst.fsm_state19_9 , 
         \vga_inst.fsm_state19_11 , \vga_inst.fsm_state19_10 , 
         \rom1.dout_RNO_3[2] , \rom1.dout_2_3dflt_4_1 , \rom1.dout_RNO_1[3] , 
         \rom1.dout_RNO_4[2] , \rom1.N_940_0 , \rom1.dout_RNO_3[11] , 
         \rom1.dout_2_4dflt_0 , \rom1.dout_RNO_2[0] , \rom1.dout_RNO_3[10] , 
         \config_1.FSM_state20_2 , \config_1.FSM_state_RNO_2[1] , 
         \config_1.FSM_state20_9 , \config_1.FSM_state_RNO_1[1] , 
         \config_1.FSM_state19_4_4 , \config_1.FSM_state19_4_5 , 
         \config_1.un1_rom_addr_ac0_9_s_0_1 , 
         \config_1.un1_rom_addr_ac0_3_out , \config_1.un1_FSM_state_3 , 
         \config_1.un32_FSM_state_0_sqmuxa_20 , 
         \config_1.un32_FSM_state_0_sqmuxa_26 , 
         \config_1.un32_FSM_state_0_sqmuxa_19 , 
         \config_1.un32_FSM_state_0_sqmuxa_27 , 
         \config_1.un32_FSM_state_0_sqmuxa_18 , 
         \config_1.un32_FSM_state_0_sqmuxa_16 , 
         \config_1.un32_FSM_state_0_sqmuxa_15 , 
         \config_1.un32_FSM_state_0_sqmuxa_17 , \config_1.FSM_state19_2 , 
         \config_1.un32_FSM_state_0_sqmuxa_22 , \SCCB1.un68_FSM_state_14 , 
         \SCCB1.un68_FSM_state_20 , \SCCB1.un68_FSM_state_15 , 
         \SCCB1.FSM_state_fast[3] , \SCCB1.timer_RNIFMTA[1] , 
         \SCCB1.N_198_i_1 , \SCCB1.g0_i_a3_0_9 , \SCCB1.un68_FSM_state_18 , 
         \SCCB1.un68_FSM_state_16 , \SCCB1.un68_FSM_state_17 , 
         \SCCB1.un68_FSM_state_19 , \SCCB1.FSM_state_cnst_1_i_1[0] , 
         \SCCB1.g0_i_m2_1_0_1 , \SCCB1.FSM_state_3_rep1 , 
         \SCCB1.FSM_state_0_rep1 , \SCCB1.un68_FSM_state_25 , 
         \SCCB1.g0_i_a3_0_2 , \SCCB1.g0_i_a3_0_10 , 
         \SCCB1.FSM_return_state[3] , \SCCB1.g0_i_a3_0_7 , 
         \SCCB1.FSM_state_1_rep1 , \SCCB1.g0_i_m2_1_a5_2_8 , 
         \SCCB1.g0_i_m2_1_a5_2_6 , \SCCB1.g0_i_m2_1_a5_2_7 , 
         \SCCB1.un13_SIOD_oe , \SCCB1.byte_index_3[3] , \SCCB1.byte_index[3] , 
         \SCCB1.FSM_state_cnst_1_i , \SCCB1.FSM_state_2_rep1 , \SCCB1.g0_4 , 
         \SCCB1.g0_3 , \SCCB1.byte_index27_0 , \SCCB1.FSM_state_1_rep1_0 , 
         SCCB_start, \vga_inst.N_29_0 , prev_pixel_valid, 
         \vga_inst.fsm_state19_9_x , \spram_addr[13] , \vga_inst.N_312 , 
         \vga_inst.N_310 , \data_out2[15] , \data_out0[15] , \vga_inst.N_311 , 
         \vga_inst.N_313 , \data_out2[14] , \data_out0[14] , \vga_inst.N_309 , 
         \vga_inst.grayscale_value[0] , \vga_inst.N_270 , \RGB_c[2] , 
         N_80_mux_i, un1_start_config8_0, \vga_inst.m38_4 , 
         \vga_inst.N_76_mux , \vga_inst.m38_5 , VGA_VSYNC_0_i, 
         \vga_inst.un10_validlt9_0 , \vga_inst.un5_validlt9 , 
         \vga_inst.col11_6 , \vga_inst.un10_HSYNClt8 , \vga_inst.col11_5 , 
         \vga_inst.un5_HSYNClt8_0 , VGA_HSYNC_c, \spram_addr[12] , 
         \config_1.rom_addr_esr_RNO[2] , \config_1.timer_0_sqmuxa_3_0 , 
         \SCCB1.FSM_state_fast_scalar , \SCCB1.un1_FSM_state_21_0_i , 
         \SCCB1.un1_FSM_state_22_0_i , \config_1.rom_addr_RNO[3] , 
         \SCCB1.FSM_return_state_0 , \SCCB1.FSM_return_state_cnst_0[2] , WR, 
         WR1, WR2, fsm_state_scalar, \RGB_c[0] , \RGB_c[4] , \RGB_c[1] , 
         \RGB_c[5] , \vga_inst.row_3[9] , \vga_inst.row_0 , \data_out2[7] , 
         \data_out0[7] , \data_out1[14] , \data_out1[6] , \data_out2[6] , 
         \data_out0[6] , \spram_addr[11] , \spram_addr[2] , \SCCB1.N_78_0 , 
         \SCCB1.SIOD_oe_i , N_1110_i, \SCCB1.FSM_state_i[1] , 
         \SCCB1.SIOC_oe_i , N_1109_i, \config_1.rom_addr_RNO[7] , 
         \config_1.SCCB_interface_start , \config_1.SCCB_interface_start_e_1 , 
         \SCCB1.ready , \SCCB1.FSM_state_rep1 , 
         \SCCB1.FSM_return_state_cnst[3] , \reader.pixel_half_1 , 
         prev_pixel_valid_0, prev_pixel_valid_3, WR_0, WR0, 
         \vga_inst.col_RNO[0] , \spram_addr[0] , \spram_addr[3] , 
         \spram_addr[4] , \spram_addr[5] , \spram_addr[6] , \spram_addr[7] , 
         \spram_addr[8] , \spram_addr[9] , \spram_addr[10] , GND, clk_12MHz_c, 
         \my_pll.lscc_pll_inst.intfbout_w ;

  config_1_SLICE_0 \config_1.SLICE_0 ( .DI1(\config_1.timer_5[28] ), 
    .D1(\config_1.un1_timer_cry_27_0_c_0.CO0 ), .C1(\config_1.timer_2_sqmuxa ), 
    .B1(\config_1.un32_FSM_state_0_sqmuxa ), .A1(\config_1.un1_timer_axb_28 ), 
    .D0(\config_1.un1_timer_cry_26 ), 
    .C0(\config_1.un1_timer_cry_27_0_c_0_RNO_0 ), .B0(\config_1.timer[27] ), 
    .LSR(\config_1.timer_1_sqmuxa ), .CLK(clk_25MHz_c), 
    .CIN0(\config_1.un1_timer_cry_26 ), 
    .CIN1(\config_1.un1_timer_cry_27_0_c_0.CO0 ), .Q1(\config_1.timer[28] ), 
    .F0(\config_1.un1_timer[27] ), .F1(\config_1.timer_5[28] ), 
    .COUT0(\config_1.un1_timer_cry_27_0_c_0.CO0 ));
  config_1_un1_timer_cry_25_0_c_0_SLICE_1 
    \config_1.un1_timer_cry_25_0_c_0.SLICE_1 ( 
    .D1(\config_1.un1_timer_cry_25_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_25_0_c_0_RNO_0 ), .B1(\config_1.timer[26] ), 
    .D0(\config_1.un1_timer_cry_24 ), 
    .C0(\config_1.un1_timer_cry_25_0_c_0_RNO ), .B0(\config_1.timer[25] ), 
    .CIN0(\config_1.un1_timer_cry_24 ), 
    .CIN1(\config_1.un1_timer_cry_25_0_c_0.CO0 ), 
    .F0(\config_1.un1_timer[25] ), .F1(\config_1.un1_timer[26] ), 
    .COUT1(\config_1.un1_timer_cry_26 ), 
    .COUT0(\config_1.un1_timer_cry_25_0_c_0.CO0 ));
  config_1_un1_timer_cry_23_0_c_0_SLICE_2 
    \config_1.un1_timer_cry_23_0_c_0.SLICE_2 ( 
    .D1(\config_1.un1_timer_cry_23_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_23_0_c_0_RNO_0 ), .B1(\config_1.timer[24] ), 
    .D0(\config_1.un1_timer_cry_22 ), 
    .C0(\config_1.un1_timer_cry_23_0_c_0_RNO ), .B0(\config_1.timer[23] ), 
    .CIN0(\config_1.un1_timer_cry_22 ), 
    .CIN1(\config_1.un1_timer_cry_23_0_c_0.CO0 ), 
    .F0(\config_1.un1_timer[23] ), .F1(\config_1.un1_timer[24] ), 
    .COUT1(\config_1.un1_timer_cry_24 ), 
    .COUT0(\config_1.un1_timer_cry_23_0_c_0.CO0 ));
  config_1_un1_timer_cry_21_0_c_0_SLICE_3 
    \config_1.un1_timer_cry_21_0_c_0.SLICE_3 ( 
    .D1(\config_1.un1_timer_cry_21_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_21_0_c_0_RNO_0 ), .B1(\config_1.timer[22] ), 
    .D0(\config_1.un1_timer_cry_20 ), 
    .C0(\config_1.un1_timer_cry_21_0_c_0_RNO ), .B0(\config_1.timer[21] ), 
    .CIN0(\config_1.un1_timer_cry_20 ), 
    .CIN1(\config_1.un1_timer_cry_21_0_c_0.CO0 ), 
    .F0(\config_1.un1_timer[21] ), .F1(\config_1.un1_timer[22] ), 
    .COUT1(\config_1.un1_timer_cry_22 ), 
    .COUT0(\config_1.un1_timer_cry_21_0_c_0.CO0 ));
  config_1_un1_timer_cry_19_0_c_0_SLICE_4 
    \config_1.un1_timer_cry_19_0_c_0.SLICE_4 ( 
    .D1(\config_1.un1_timer_cry_19_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_19_0_c_0_RNO_0 ), .B1(\config_1.timer[20] ), 
    .D0(\config_1.un1_timer_cry_18 ), 
    .C0(\config_1.un1_timer_cry_19_0_c_0_RNO ), .B0(\config_1.timer[19] ), 
    .CIN0(\config_1.un1_timer_cry_18 ), 
    .CIN1(\config_1.un1_timer_cry_19_0_c_0.CO0 ), 
    .F0(\config_1.un1_timer[19] ), .F1(\config_1.un1_timer[20] ), 
    .COUT1(\config_1.un1_timer_cry_20 ), 
    .COUT0(\config_1.un1_timer_cry_19_0_c_0.CO0 ));
  config_1_un1_timer_cry_17_0_c_0_SLICE_5 
    \config_1.un1_timer_cry_17_0_c_0.SLICE_5 ( 
    .D1(\config_1.un1_timer_cry_17_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_17_0_c_0_RNO_0 ), .B1(\config_1.timer[18] ), 
    .D0(\config_1.un1_timer_cry_16 ), 
    .C0(\config_1.un1_timer_cry_17_0_c_0_RNO ), .B0(\config_1.timer[17] ), 
    .CIN0(\config_1.un1_timer_cry_16 ), 
    .CIN1(\config_1.un1_timer_cry_17_0_c_0.CO0 ), 
    .F0(\config_1.un1_timer[17] ), .F1(\config_1.un1_timer[18] ), 
    .COUT1(\config_1.un1_timer_cry_18 ), 
    .COUT0(\config_1.un1_timer_cry_17_0_c_0.CO0 ));
  config_1_un1_timer_cry_15_0_c_0_SLICE_6 
    \config_1.un1_timer_cry_15_0_c_0.SLICE_6 ( 
    .D1(\config_1.un1_timer_cry_15_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_15_0_c_0_RNO_0 ), .B1(\config_1.timer[16] ), 
    .D0(\config_1.un1_timer_cry_14 ), 
    .C0(\config_1.un1_timer_cry_15_0_c_0_RNO ), .B0(\config_1.timer[15] ), 
    .CIN0(\config_1.un1_timer_cry_14 ), 
    .CIN1(\config_1.un1_timer_cry_15_0_c_0.CO0 ), 
    .F0(\config_1.un1_timer[15] ), .F1(\config_1.un1_timer[16] ), 
    .COUT1(\config_1.un1_timer_cry_16 ), 
    .COUT0(\config_1.un1_timer_cry_15_0_c_0.CO0 ));
  config_1_un1_timer_cry_13_0_c_0_SLICE_7 
    \config_1.un1_timer_cry_13_0_c_0.SLICE_7 ( 
    .D1(\config_1.un1_timer_cry_13_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_13_0_c_0_RNO_0 ), .B1(\config_1.timer[14] ), 
    .D0(\config_1.un1_timer_cry_12 ), 
    .C0(\config_1.un1_timer_cry_13_0_c_0_RNO ), .B0(\config_1.timer[13] ), 
    .CIN0(\config_1.un1_timer_cry_12 ), 
    .CIN1(\config_1.un1_timer_cry_13_0_c_0.CO0 ), 
    .F0(\config_1.un1_timer[13] ), .F1(\config_1.un1_timer[14] ), 
    .COUT1(\config_1.un1_timer_cry_14 ), 
    .COUT0(\config_1.un1_timer_cry_13_0_c_0.CO0 ));
  config_1_un1_timer_cry_11_0_c_0_SLICE_8 
    \config_1.un1_timer_cry_11_0_c_0.SLICE_8 ( 
    .D1(\config_1.un1_timer_cry_11_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_11_0_c_0_RNO_0 ), .B1(\config_1.timer[12] ), 
    .D0(\config_1.un1_timer_cry_10 ), 
    .C0(\config_1.un1_timer_cry_11_0_c_0_RNO ), .B0(\config_1.timer[11] ), 
    .CIN0(\config_1.un1_timer_cry_10 ), 
    .CIN1(\config_1.un1_timer_cry_11_0_c_0.CO0 ), 
    .F0(\config_1.un1_timer[11] ), .F1(\config_1.un1_timer[12] ), 
    .COUT1(\config_1.un1_timer_cry_12 ), 
    .COUT0(\config_1.un1_timer_cry_11_0_c_0.CO0 ));
  config_1_un1_timer_cry_9_0_c_0_SLICE_9 
    \config_1.un1_timer_cry_9_0_c_0.SLICE_9 ( 
    .D1(\config_1.un1_timer_cry_9_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_9_0_c_0_RNO_0 ), .B1(\config_1.timer[10] ), 
    .D0(\config_1.un1_timer_cry_8 ), .C0(\config_1.un1_timer_cry_9_0_c_0_RNO ), 
    .B0(\config_1.timer[9] ), .CIN0(\config_1.un1_timer_cry_8 ), 
    .CIN1(\config_1.un1_timer_cry_9_0_c_0.CO0 ), .F0(\config_1.un1_timer[9] ), 
    .F1(\config_1.un1_timer[10] ), .COUT1(\config_1.un1_timer_cry_10 ), 
    .COUT0(\config_1.un1_timer_cry_9_0_c_0.CO0 ));
  config_1_un1_timer_cry_7_0_c_0_SLICE_10 
    \config_1.un1_timer_cry_7_0_c_0.SLICE_10 ( 
    .D1(\config_1.un1_timer_cry_7_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_7_0_c_0_RNO_0 ), .B1(\config_1.timer[8] ), 
    .D0(\config_1.un1_timer_cry_6 ), .C0(\config_1.un1_timer_cry_7_0_c_0_RNO ), 
    .B0(\config_1.timer[7] ), .CIN0(\config_1.un1_timer_cry_6 ), 
    .CIN1(\config_1.un1_timer_cry_7_0_c_0.CO0 ), .F0(\config_1.un1_timer[7] ), 
    .F1(\config_1.un1_timer[8] ), .COUT1(\config_1.un1_timer_cry_8 ), 
    .COUT0(\config_1.un1_timer_cry_7_0_c_0.CO0 ));
  config_1_un1_timer_cry_5_0_c_0_SLICE_11 
    \config_1.un1_timer_cry_5_0_c_0.SLICE_11 ( 
    .D1(\config_1.un1_timer_cry_5_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_5_0_c_0_RNO_0 ), .B1(\config_1.timer[6] ), 
    .D0(\config_1.un1_timer_cry_4 ), .C0(\config_1.un1_timer_cry_5_0_c_0_RNO ), 
    .B0(\config_1.timer[5] ), .CIN0(\config_1.un1_timer_cry_4 ), 
    .CIN1(\config_1.un1_timer_cry_5_0_c_0.CO0 ), .F0(\config_1.un1_timer[5] ), 
    .F1(\config_1.un1_timer[6] ), .COUT1(\config_1.un1_timer_cry_6 ), 
    .COUT0(\config_1.un1_timer_cry_5_0_c_0.CO0 ));
  config_1_un1_timer_cry_3_0_c_0_SLICE_12 
    \config_1.un1_timer_cry_3_0_c_0.SLICE_12 ( 
    .D1(\config_1.un1_timer_cry_3_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_3_0_c_0_RNO_0 ), .B1(\config_1.timer[4] ), 
    .D0(\config_1.un1_timer_cry_2 ), .C0(\config_1.un1_timer_cry_3_0_c_0_RNO ), 
    .B0(\config_1.timer[3] ), .CIN0(\config_1.un1_timer_cry_2 ), 
    .CIN1(\config_1.un1_timer_cry_3_0_c_0.CO0 ), .F0(\config_1.un1_timer[3] ), 
    .F1(\config_1.un1_timer[4] ), .COUT1(\config_1.un1_timer_cry_4 ), 
    .COUT0(\config_1.un1_timer_cry_3_0_c_0.CO0 ));
  config_1_un1_timer_cry_1_0_c_0_SLICE_13 
    \config_1.un1_timer_cry_1_0_c_0.SLICE_13 ( 
    .D1(\config_1.un1_timer_cry_1_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_1_0_c_0_RNO_0 ), .B1(\config_1.timer[2] ), 
    .D0(\config_1.un1_timer_cry_0 ), .C0(\config_1.un1_timer_cry_1_0_c_0_RNO ), 
    .B0(\config_1.timer[1] ), .CIN0(\config_1.un1_timer_cry_0 ), 
    .CIN1(\config_1.un1_timer_cry_1_0_c_0.CO0 ), .F0(\config_1.un1_timer[1] ), 
    .F1(\config_1.un1_timer[2] ), .COUT1(\config_1.un1_timer_cry_2 ), 
    .COUT0(\config_1.un1_timer_cry_1_0_c_0.CO0 ));
  config_1_un1_timer_cry_0_0_c_0_SLICE_14 
    \config_1.un1_timer_cry_0_0_c_0.SLICE_14 ( 
    .D1(\config_1.un1_timer_cry_0_0_c_0.CO0 ), 
    .C1(\config_1.un1_timer_cry_0_0_c_0_RNO ), .B1(\config_1.timer[0] ), 
    .CIN1(\config_1.un1_timer_cry_0_0_c_0.CO0 ), .F1(\config_1.un1_timer[0] ), 
    .COUT1(\config_1.un1_timer_cry_0 ), 
    .COUT0(\config_1.un1_timer_cry_0_0_c_0.CO0 ));
  SCCB1_timer_cry_c_0_25__SLICE_15 \SCCB1.timer_cry_c_0[25].SLICE_15 ( 
    .D1(\SCCB1.timer_cry_c_0[25].CO0 ), .C1(VCC), .B1(\SCCB1.timer[26] ), 
    .D0(\SCCB1.timer_cry[24] ), .C0(VCC), .B0(\SCCB1.timer[25] ), 
    .CIN0(\SCCB1.timer_cry[24] ), .CIN1(\SCCB1.timer_cry_c_0[25].CO0 ), 
    .F0(\SCCB1.timer_s[25] ), .F1(\SCCB1.timer_s[26] ), 
    .COUT1(\SCCB1.timer_cry[26] ), .COUT0(\SCCB1.timer_cry_c_0[25].CO0 ));
  SCCB1_timer_cry_c_0_23__SLICE_16 \SCCB1.timer_cry_c_0[23].SLICE_16 ( 
    .D1(\SCCB1.timer_cry_c_0[23].CO0 ), .C1(VCC), .B1(\SCCB1.timer[24] ), 
    .D0(\SCCB1.timer_cry[22] ), .C0(VCC), .B0(\SCCB1.timer[23] ), 
    .CIN0(\SCCB1.timer_cry[22] ), .CIN1(\SCCB1.timer_cry_c_0[23].CO0 ), 
    .F0(\SCCB1.timer_s[23] ), .F1(\SCCB1.timer_s[24] ), 
    .COUT1(\SCCB1.timer_cry[24] ), .COUT0(\SCCB1.timer_cry_c_0[23].CO0 ));
  SCCB1_timer_cry_c_0_21__SLICE_17 \SCCB1.timer_cry_c_0[21].SLICE_17 ( 
    .D1(\SCCB1.timer_cry_c_0[21].CO0 ), .C1(VCC), .B1(\SCCB1.timer[22] ), 
    .D0(\SCCB1.timer_cry[20] ), .C0(VCC), .B0(\SCCB1.timer[21] ), 
    .CIN0(\SCCB1.timer_cry[20] ), .CIN1(\SCCB1.timer_cry_c_0[21].CO0 ), 
    .F0(\SCCB1.timer_s[21] ), .F1(\SCCB1.timer_s[22] ), 
    .COUT1(\SCCB1.timer_cry[22] ), .COUT0(\SCCB1.timer_cry_c_0[21].CO0 ));
  SCCB1_timer_cry_c_0_19__SLICE_18 \SCCB1.timer_cry_c_0[19].SLICE_18 ( 
    .D1(\SCCB1.timer_cry_c_0[19].CO0 ), .C1(VCC), .B1(\SCCB1.timer[20] ), 
    .D0(\SCCB1.timer_cry[18] ), .C0(VCC), .B0(\SCCB1.timer[19] ), 
    .CIN0(\SCCB1.timer_cry[18] ), .CIN1(\SCCB1.timer_cry_c_0[19].CO0 ), 
    .F0(\SCCB1.timer_s[19] ), .F1(\SCCB1.timer_s[20] ), 
    .COUT1(\SCCB1.timer_cry[20] ), .COUT0(\SCCB1.timer_cry_c_0[19].CO0 ));
  SCCB1_timer_cry_c_0_17__SLICE_19 \SCCB1.timer_cry_c_0[17].SLICE_19 ( 
    .D1(\SCCB1.timer_cry_c_0[17].CO0 ), .C1(VCC), .B1(\SCCB1.timer[18] ), 
    .D0(\SCCB1.timer_cry[16] ), .C0(VCC), .B0(\SCCB1.timer[17] ), 
    .CIN0(\SCCB1.timer_cry[16] ), .CIN1(\SCCB1.timer_cry_c_0[17].CO0 ), 
    .F0(\SCCB1.timer_s[17] ), .F1(\SCCB1.timer_s[18] ), 
    .COUT1(\SCCB1.timer_cry[18] ), .COUT0(\SCCB1.timer_cry_c_0[17].CO0 ));
  SCCB1_timer_cry_c_0_15__SLICE_20 \SCCB1.timer_cry_c_0[15].SLICE_20 ( 
    .D1(\SCCB1.timer_cry_c_0[15].CO0 ), .C1(VCC), .B1(\SCCB1.timer[16] ), 
    .D0(\SCCB1.timer_cry[14] ), .C0(VCC), .B0(\SCCB1.timer[15] ), 
    .CIN0(\SCCB1.timer_cry[14] ), .CIN1(\SCCB1.timer_cry_c_0[15].CO0 ), 
    .F0(\SCCB1.timer_s[15] ), .F1(\SCCB1.timer_s[16] ), 
    .COUT1(\SCCB1.timer_cry[16] ), .COUT0(\SCCB1.timer_cry_c_0[15].CO0 ));
  SCCB1_timer_cry_c_0_13__SLICE_21 \SCCB1.timer_cry_c_0[13].SLICE_21 ( 
    .D1(\SCCB1.timer_cry_c_0[13].CO0 ), .C1(VCC), .B1(\SCCB1.timer[14] ), 
    .D0(\SCCB1.timer_cry[12] ), .C0(VCC), .B0(\SCCB1.timer[13] ), 
    .CIN0(\SCCB1.timer_cry[12] ), .CIN1(\SCCB1.timer_cry_c_0[13].CO0 ), 
    .F0(\SCCB1.timer_s[13] ), .F1(\SCCB1.timer_s[14] ), 
    .COUT1(\SCCB1.timer_cry[14] ), .COUT0(\SCCB1.timer_cry_c_0[13].CO0 ));
  SCCB1_timer_cry_c_0_11__SLICE_22 \SCCB1.timer_cry_c_0[11].SLICE_22 ( 
    .D1(\SCCB1.timer_cry_c_0[11].CO0 ), .C1(VCC), .B1(\SCCB1.timer[12] ), 
    .D0(\SCCB1.timer_cry[10] ), .C0(VCC), .B0(\SCCB1.timer[11] ), 
    .CIN0(\SCCB1.timer_cry[10] ), .CIN1(\SCCB1.timer_cry_c_0[11].CO0 ), 
    .F0(\SCCB1.timer_s[11] ), .F1(\SCCB1.timer_s[12] ), 
    .COUT1(\SCCB1.timer_cry[12] ), .COUT0(\SCCB1.timer_cry_c_0[11].CO0 ));
  SCCB1_timer_cry_c_0_9__SLICE_23 \SCCB1.timer_cry_c_0[9].SLICE_23 ( 
    .D1(\SCCB1.timer_cry_c_0[9].CO0 ), .C1(VCC), .B1(\SCCB1.timer[10] ), 
    .D0(\SCCB1.timer_cry[8] ), .C0(VCC), .B0(\SCCB1.timer[9] ), 
    .CIN0(\SCCB1.timer_cry[8] ), .CIN1(\SCCB1.timer_cry_c_0[9].CO0 ), 
    .F0(\SCCB1.timer_s[9] ), .F1(\SCCB1.timer_s[10] ), 
    .COUT1(\SCCB1.timer_cry[10] ), .COUT0(\SCCB1.timer_cry_c_0[9].CO0 ));
  SCCB1_timer_cry_c_0_7__SLICE_24 \SCCB1.timer_cry_c_0[7].SLICE_24 ( 
    .D1(\SCCB1.timer_cry_c_0[7].CO0 ), .C1(VCC), .B1(\SCCB1.timer[8] ), 
    .D0(\SCCB1.timer_cry[6] ), .C0(VCC), .B0(\SCCB1.timer[7] ), 
    .CIN0(\SCCB1.timer_cry[6] ), .CIN1(\SCCB1.timer_cry_c_0[7].CO0 ), 
    .F0(\SCCB1.timer_s[7] ), .F1(\SCCB1.timer_s[8] ), 
    .COUT1(\SCCB1.timer_cry[8] ), .COUT0(\SCCB1.timer_cry_c_0[7].CO0 ));
  SCCB1_timer_cry_c_0_5__SLICE_25 \SCCB1.timer_cry_c_0[5].SLICE_25 ( 
    .D1(\SCCB1.timer_cry_c_0[5].CO0 ), .C1(VCC), .B1(\SCCB1.timer[6] ), 
    .D0(\SCCB1.timer_cry[4] ), .C0(VCC), .B0(\SCCB1.timer[5] ), 
    .CIN0(\SCCB1.timer_cry[4] ), .CIN1(\SCCB1.timer_cry_c_0[5].CO0 ), 
    .F0(\SCCB1.timer_s[5] ), .F1(\SCCB1.timer_s[6] ), 
    .COUT1(\SCCB1.timer_cry[6] ), .COUT0(\SCCB1.timer_cry_c_0[5].CO0 ));
  SCCB1_timer_cry_c_0_3__SLICE_26 \SCCB1.timer_cry_c_0[3].SLICE_26 ( 
    .D1(\SCCB1.timer_cry_c_0[3].CO0 ), .C1(VCC), .B1(\SCCB1.timer[4] ), 
    .D0(\SCCB1.timer_cry[2] ), .C0(VCC), .B0(\SCCB1.timer[3] ), 
    .CIN0(\SCCB1.timer_cry[2] ), .CIN1(\SCCB1.timer_cry_c_0[3].CO0 ), 
    .F0(\SCCB1.timer_s[3] ), .F1(\SCCB1.timer_s[4] ), 
    .COUT1(\SCCB1.timer_cry[4] ), .COUT0(\SCCB1.timer_cry_c_0[3].CO0 ));
  SCCB1_timer_cry_c_0_1__SLICE_27 \SCCB1.timer_cry_c_0[1].SLICE_27 ( 
    .D1(\SCCB1.timer_cry_c_0[1].CO0 ), .C1(VCC), .B1(\SCCB1.timer[2] ), 
    .D0(\SCCB1.timer_cry[0] ), .C0(VCC), .B0(\SCCB1.timer[1] ), 
    .CIN0(\SCCB1.timer_cry[0] ), .CIN1(\SCCB1.timer_cry_c_0[1].CO0 ), 
    .F0(\SCCB1.timer_s[1] ), .F1(\SCCB1.timer_s[2] ), 
    .COUT1(\SCCB1.timer_cry[2] ), .COUT0(\SCCB1.timer_cry_c_0[1].CO0 ));
  SCCB1_timer_cry_c_0_0__SLICE_28 \SCCB1.timer_cry_c_0[0].SLICE_28 ( 
    .D1(\SCCB1.timer_cry_c_0[0].CO0 ), .C1(VCC), .B1(\SCCB1.timer[0] ), 
    .CIN1(\SCCB1.timer_cry_c_0[0].CO0 ), .F1(\SCCB1.timer_s[0] ), 
    .COUT1(\SCCB1.timer_cry[0] ), .COUT0(\SCCB1.timer_cry_c_0[0].CO0 ));
  vga_inst_SLICE_29 \vga_inst.SLICE_29 ( 
    .DI0(\vga_inst.un3_row_1_cry_8_c_0_S0 ), 
    .D1(\vga_inst.un3_row_1_cry_8_c_0.CO0 ), .A1(\row[9] ), 
    .D0(\vga_inst.un3_row_1_cry_7 ), .B0(\row[8] ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .CIN0(\vga_inst.un3_row_1_cry_7 ), 
    .CIN1(\vga_inst.un3_row_1_cry_8_c_0.CO0 ), .Q0(\row[8] ), 
    .F0(\vga_inst.un3_row_1_cry_8_c_0_S0 ), .F1(\vga_inst.N_745 ), 
    .COUT0(\vga_inst.un3_row_1_cry_8_c_0.CO0 ));
  vga_inst_SLICE_30 \vga_inst.SLICE_30 ( 
    .DI1(\vga_inst.un3_row_1_cry_6_c_0_S1 ), 
    .DI0(\vga_inst.un3_row_1_cry_6_c_0_S0 ), 
    .D1(\vga_inst.un3_row_1_cry_6_c_0.CO0 ), .B1(\row[7] ), 
    .D0(\vga_inst.un3_row_1_cry_5 ), .B0(\row[6] ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .CIN0(\vga_inst.un3_row_1_cry_5 ), 
    .CIN1(\vga_inst.un3_row_1_cry_6_c_0.CO0 ), .Q0(\row[6] ), .Q1(\row[7] ), 
    .F0(\vga_inst.un3_row_1_cry_6_c_0_S0 ), 
    .F1(\vga_inst.un3_row_1_cry_6_c_0_S1 ), .COUT1(\vga_inst.un3_row_1_cry_7 ), 
    .COUT0(\vga_inst.un3_row_1_cry_6_c_0.CO0 ));
  vga_inst_SLICE_31 \vga_inst.SLICE_31 ( 
    .DI1(\vga_inst.un3_row_1_cry_4_c_0_S1 ), 
    .DI0(\vga_inst.un3_row_1_cry_4_c_0_S0 ), 
    .D1(\vga_inst.un3_row_1_cry_4_c_0.CO0 ), .B1(\row[5] ), 
    .D0(\vga_inst.un3_row_1_cry_3 ), .B0(\row[4] ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .CIN0(\vga_inst.un3_row_1_cry_3 ), 
    .CIN1(\vga_inst.un3_row_1_cry_4_c_0.CO0 ), .Q0(\row[4] ), .Q1(\row[5] ), 
    .F0(\vga_inst.un3_row_1_cry_4_c_0_S0 ), 
    .F1(\vga_inst.un3_row_1_cry_4_c_0_S1 ), .COUT1(\vga_inst.un3_row_1_cry_5 ), 
    .COUT0(\vga_inst.un3_row_1_cry_4_c_0.CO0 ));
  vga_inst_un3_row_1_cry_2_c_0_SLICE_32 
    \vga_inst.un3_row_1_cry_2_c_0.SLICE_32 ( 
    .D1(\vga_inst.un3_row_1_cry_2_c_0.CO0 ), .B1(\row[3] ), 
    .D0(\vga_inst.un3_row_1_cry_1 ), .B0(\row[2] ), 
    .CIN0(\vga_inst.un3_row_1_cry_1 ), 
    .CIN1(\vga_inst.un3_row_1_cry_2_c_0.CO0 ), .F0(\vga_inst.N_738 ), 
    .F1(\vga_inst.N_739 ), .COUT1(\vga_inst.un3_row_1_cry_3 ), 
    .COUT0(\vga_inst.un3_row_1_cry_2_c_0.CO0 ));
  vga_inst_SLICE_33 \vga_inst.SLICE_33 ( 
    .DI1(\vga_inst.un3_row_1_cry_1_c_0_S1 ), 
    .D1(\vga_inst.un3_row_1_cry_1_c_0.CO0 ), .B1(\row[1] ), .C0(\row[0] ), 
    .B0(\row[0] ), .CE(\vga_inst.col11 ), .CLK(clk_25MHz_c), 
    .CIN1(\vga_inst.un3_row_1_cry_1_c_0.CO0 ), .Q1(\row[1] ), 
    .F1(\vga_inst.un3_row_1_cry_1_c_0_S1 ), .COUT1(\vga_inst.un3_row_1_cry_1 ), 
    .COUT0(\vga_inst.un3_row_1_cry_1_c_0.CO0 ));
  vga_inst_SLICE_34 \vga_inst.SLICE_34 ( .DI1(\vga_inst.col_3[9] ), 
    .DI0(\vga_inst.col_3[8] ), .D1(\vga_inst.un2_col_cry_8_c_0.CO0 ), 
    .C1(\vga_inst.col11 ), .A1(\col[9] ), .D0(\vga_inst.un2_col_cry_7 ), 
    .B0(\col[8] ), .A0(\vga_inst.col11 ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_7 ), .CIN1(\vga_inst.un2_col_cry_8_c_0.CO0 ), 
    .Q0(\col[8] ), .Q1(\col[9] ), .F0(\vga_inst.col_3[8] ), 
    .F1(\vga_inst.col_3[9] ), .COUT0(\vga_inst.un2_col_cry_8_c_0.CO0 ));
  vga_inst_SLICE_35 \vga_inst.SLICE_35 ( .DI1(\vga_inst.un2_col_cry_6_c_0_S1 ), 
    .DI0(\vga_inst.un2_col_cry_6_c_0_S0 ), 
    .D1(\vga_inst.un2_col_cry_6_c_0.CO0 ), .B1(\col[7] ), 
    .D0(\vga_inst.un2_col_cry_5 ), .B0(\col[6] ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_5 ), .CIN1(\vga_inst.un2_col_cry_6_c_0.CO0 ), 
    .Q0(\col[6] ), .Q1(\col[7] ), .F0(\vga_inst.un2_col_cry_6_c_0_S0 ), 
    .F1(\vga_inst.un2_col_cry_6_c_0_S1 ), .COUT1(\vga_inst.un2_col_cry_7 ), 
    .COUT0(\vga_inst.un2_col_cry_6_c_0.CO0 ));
  vga_inst_SLICE_36 \vga_inst.SLICE_36 ( .DI1(\vga_inst.col_3[5] ), 
    .DI0(\vga_inst.un2_col_cry_4_c_0_S0 ), 
    .D1(\vga_inst.un2_col_cry_4_c_0.CO0 ), .B1(\vga_inst.col_Z[5] ), 
    .A1(\vga_inst.col11 ), .D0(\vga_inst.un2_col_cry_3 ), 
    .B0(\vga_inst.col_Z[4] ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_3 ), .CIN1(\vga_inst.un2_col_cry_4_c_0.CO0 ), 
    .Q0(\vga_inst.col_Z[4] ), .Q1(\vga_inst.col_Z[5] ), 
    .F0(\vga_inst.un2_col_cry_4_c_0_S0 ), .F1(\vga_inst.col_3[5] ), 
    .COUT1(\vga_inst.un2_col_cry_5 ), .COUT0(\vga_inst.un2_col_cry_4_c_0.CO0 ));
  vga_inst_SLICE_37 \vga_inst.SLICE_37 ( .DI1(\vga_inst.un2_col_cry_2_c_0_S1 ), 
    .DI0(\vga_inst.un2_col_cry_2_c_0_S0 ), 
    .D1(\vga_inst.un2_col_cry_2_c_0.CO0 ), .B1(\vga_inst.col_Z[3] ), 
    .D0(\vga_inst.un2_col_cry_1 ), .B0(\vga_inst.col_Z[2] ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_1 ), .CIN1(\vga_inst.un2_col_cry_2_c_0.CO0 ), 
    .Q0(\vga_inst.col_Z[2] ), .Q1(\vga_inst.col_Z[3] ), 
    .F0(\vga_inst.un2_col_cry_2_c_0_S0 ), .F1(\vga_inst.un2_col_cry_2_c_0_S1 ), 
    .COUT1(\vga_inst.un2_col_cry_3 ), .COUT0(\vga_inst.un2_col_cry_2_c_0.CO0 ));
  vga_inst_SLICE_38 \vga_inst.SLICE_38 ( .DI1(\vga_inst.un2_col_cry_1_c_0_S1 ), 
    .D1(\vga_inst.un2_col_cry_1_c_0.CO0 ), .B1(\vga_inst.col_Z[1] ), 
    .C0(\vga_inst.col_Z[0] ), .B0(\vga_inst.col_Z[0] ), .CLK(clk_25MHz_c), 
    .CIN1(\vga_inst.un2_col_cry_1_c_0.CO0 ), .Q1(\vga_inst.col_Z[1] ), 
    .F1(\vga_inst.un2_col_cry_1_c_0_S1 ), .COUT1(\vga_inst.un2_col_cry_1 ), 
    .COUT0(\vga_inst.un2_col_cry_1_c_0.CO0 ));
  vga_read_address_cry_7_c_0_SLICE_39 \vga_read_address_cry_7_c_0.SLICE_39 ( 
    .D1(\vga_read_address_cry_7_c_0.CO0 ), .B1(O8), 
    .D0(vga_read_address_cry_6), .B0(O7), .CIN0(vga_read_address_cry_6), 
    .CIN1(\vga_read_address_cry_7_c_0.CO0 ), .F0(\vga_read_address[13] ), 
    .F1(\vga_read_address[14] ), .COUT1(vga_read_address_cry_8), 
    .COUT0(\vga_read_address_cry_7_c_0.CO0 ));
  vga_read_address_cry_5_c_0_SLICE_40 \vga_read_address_cry_5_c_0.SLICE_40 ( 
    .D1(\vga_read_address_cry_5_c_0.CO0 ), .B1(O6), 
    .D0(vga_read_address_cry_4), .B0(O5), .CIN0(vga_read_address_cry_4), 
    .CIN1(\vga_read_address_cry_5_c_0.CO0 ), .F0(\vga_read_address[11] ), 
    .F1(\vga_read_address[12] ), .COUT1(vga_read_address_cry_6), 
    .COUT0(\vga_read_address_cry_5_c_0.CO0 ));
  vga_read_address_cry_3_c_0_SLICE_41 \vga_read_address_cry_3_c_0.SLICE_41 ( 
    .D1(\vga_read_address_cry_3_c_0.CO0 ), .B1(O4), 
    .D0(vga_read_address_cry_2), .C0(O3), .B0(\col[9] ), 
    .CIN0(vga_read_address_cry_2), .CIN1(\vga_read_address_cry_3_c_0.CO0 ), 
    .F0(\vga_read_address[9] ), .F1(\vga_read_address[10] ), 
    .COUT1(vga_read_address_cry_4), .COUT0(\vga_read_address_cry_3_c_0.CO0 ));
  vga_read_address_cry_1_c_0_SLICE_42 \vga_read_address_cry_1_c_0.SLICE_42 ( 
    .D1(\vga_read_address_cry_1_c_0.CO0 ), .C1(O2), .B1(\col[8] ), 
    .D0(vga_read_address_cry_0), .C0(\row[1] ), .B0(\col[7] ), 
    .CIN0(vga_read_address_cry_0), .CIN1(\vga_read_address_cry_1_c_0.CO0 ), 
    .F0(\vga_read_address[7] ), .F1(\vga_read_address[8] ), 
    .COUT1(vga_read_address_cry_2), .COUT0(\vga_read_address_cry_1_c_0.CO0 ));
  vga_read_address_cry_0_c_0_SLICE_43 \vga_read_address_cry_0_c_0.SLICE_43 ( 
    .D1(\vga_read_address_cry_0_c_0.CO0 ), .C1(\row[0] ), .B1(\col[6] ), 
    .CIN1(\vga_read_address_cry_0_c_0.CO0 ), .F1(\vga_read_address[6] ), 
    .COUT1(vga_read_address_cry_0), .COUT0(\vga_read_address_cry_0_c_0.CO0 ));
  SLICE_44 SLICE_44( .DI0(\address_counter_RNO_S0[15] ), 
    .D1(\address_counter_RNO[15].CO0 ), 
    .D0(\carry_pack.un1_address_counter_4_cry_14 ), .A0(\address_counter[15] ), 
    .LSR(un1_fsm_state_2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_address_counter_4_cry_14 ), 
    .CIN1(\address_counter_RNO[15].CO0 ), .Q0(\address_counter[15] ), 
    .F0(\address_counter_RNO_S0[15] ), .COUT0(\address_counter_RNO[15].CO0 ));
  SLICE_45 SLICE_45( .DI1(un1_address_counter_4_cry_13_c_0_S1), 
    .DI0(un1_address_counter_4_cry_13_c_0_S0), 
    .D1(\un1_address_counter_4_cry_13_c_0.CO0 ), .B1(\address_counter[14] ), 
    .D0(\carry_pack.un1_address_counter_4_cry_12 ), .B0(\address_counter[13] ), 
    .LSR(un1_fsm_state_2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_address_counter_4_cry_12 ), 
    .CIN1(\un1_address_counter_4_cry_13_c_0.CO0 ), .Q0(\address_counter[13] ), 
    .Q1(\address_counter[14] ), .F0(un1_address_counter_4_cry_13_c_0_S0), 
    .F1(un1_address_counter_4_cry_13_c_0_S1), 
    .COUT1(\carry_pack.un1_address_counter_4_cry_14 ), 
    .COUT0(\un1_address_counter_4_cry_13_c_0.CO0 ));
  SLICE_46 SLICE_46( .DI1(un1_address_counter_4_cry_11_c_0_S1), 
    .DI0(un1_address_counter_4_cry_11_c_0_S0), 
    .D1(\un1_address_counter_4_cry_11_c_0.CO0 ), .B1(\address_counter[12] ), 
    .D0(\carry_pack.un1_address_counter_4_cry_10 ), .B0(\address_counter[11] ), 
    .LSR(un1_fsm_state_2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_address_counter_4_cry_10 ), 
    .CIN1(\un1_address_counter_4_cry_11_c_0.CO0 ), .Q0(\address_counter[11] ), 
    .Q1(\address_counter[12] ), .F0(un1_address_counter_4_cry_11_c_0_S0), 
    .F1(un1_address_counter_4_cry_11_c_0_S1), 
    .COUT1(\carry_pack.un1_address_counter_4_cry_12 ), 
    .COUT0(\un1_address_counter_4_cry_11_c_0.CO0 ));
  SLICE_47 SLICE_47( .DI1(un1_address_counter_4_cry_9_c_0_S1), 
    .DI0(un1_address_counter_4_cry_9_c_0_S0), 
    .D1(\un1_address_counter_4_cry_9_c_0.CO0 ), .B1(\address_counter[10] ), 
    .D0(\carry_pack.un1_address_counter_4_cry_8 ), .B0(\address_counter[9] ), 
    .LSR(un1_fsm_state_2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_address_counter_4_cry_8 ), 
    .CIN1(\un1_address_counter_4_cry_9_c_0.CO0 ), .Q0(\address_counter[9] ), 
    .Q1(\address_counter[10] ), .F0(un1_address_counter_4_cry_9_c_0_S0), 
    .F1(un1_address_counter_4_cry_9_c_0_S1), 
    .COUT1(\carry_pack.un1_address_counter_4_cry_10 ), 
    .COUT0(\un1_address_counter_4_cry_9_c_0.CO0 ));
  SLICE_48 SLICE_48( .DI1(un1_address_counter_4_cry_7_c_0_S1), 
    .DI0(un1_address_counter_4_cry_7_c_0_S0), 
    .D1(\un1_address_counter_4_cry_7_c_0.CO0 ), .B1(\address_counter[8] ), 
    .D0(\carry_pack.un1_address_counter_4_cry_6 ), .B0(\address_counter[7] ), 
    .LSR(un1_fsm_state_2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_address_counter_4_cry_6 ), 
    .CIN1(\un1_address_counter_4_cry_7_c_0.CO0 ), .Q0(\address_counter[7] ), 
    .Q1(\address_counter[8] ), .F0(un1_address_counter_4_cry_7_c_0_S0), 
    .F1(un1_address_counter_4_cry_7_c_0_S1), 
    .COUT1(\carry_pack.un1_address_counter_4_cry_8 ), 
    .COUT0(\un1_address_counter_4_cry_7_c_0.CO0 ));
  SLICE_49 SLICE_49( .DI1(un1_address_counter_4_cry_5_c_0_S1), 
    .DI0(un1_address_counter_4_cry_5_c_0_S0), 
    .D1(\un1_address_counter_4_cry_5_c_0.CO0 ), .B1(\address_counter[6] ), 
    .D0(\carry_pack.un1_address_counter_4_cry_4 ), .B0(\address_counter[5] ), 
    .LSR(un1_fsm_state_2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_address_counter_4_cry_4 ), 
    .CIN1(\un1_address_counter_4_cry_5_c_0.CO0 ), .Q0(\address_counter[5] ), 
    .Q1(\address_counter[6] ), .F0(un1_address_counter_4_cry_5_c_0_S0), 
    .F1(un1_address_counter_4_cry_5_c_0_S1), 
    .COUT1(\carry_pack.un1_address_counter_4_cry_6 ), 
    .COUT0(\un1_address_counter_4_cry_5_c_0.CO0 ));
  SLICE_50 SLICE_50( .DI1(un1_address_counter_4_cry_3_c_0_S1), 
    .DI0(un1_address_counter_4_cry_3_c_0_S0), 
    .D1(\un1_address_counter_4_cry_3_c_0.CO0 ), .B1(\address_counter[4] ), 
    .D0(\carry_pack.un1_address_counter_4_cry_2 ), .B0(\address_counter[3] ), 
    .LSR(un1_fsm_state_2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_address_counter_4_cry_2 ), 
    .CIN1(\un1_address_counter_4_cry_3_c_0.CO0 ), .Q0(\address_counter[3] ), 
    .Q1(\address_counter[4] ), .F0(un1_address_counter_4_cry_3_c_0_S0), 
    .F1(un1_address_counter_4_cry_3_c_0_S1), 
    .COUT1(\carry_pack.un1_address_counter_4_cry_4 ), 
    .COUT0(\un1_address_counter_4_cry_3_c_0.CO0 ));
  SLICE_51 SLICE_51( .DI1(un1_address_counter_4_cry_1_c_0_S1), 
    .DI0(un1_address_counter_4_cry_1_c_0_S0), 
    .D1(\un1_address_counter_4_cry_1_c_0.CO0 ), .B1(\address_counter[2] ), 
    .D0(\carry_pack.un1_address_counter_4_cry_0 ), .B0(\address_counter[1] ), 
    .LSR(un1_fsm_state_2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_address_counter_4_cry_0 ), 
    .CIN1(\un1_address_counter_4_cry_1_c_0.CO0 ), .Q0(\address_counter[1] ), 
    .Q1(\address_counter[2] ), .F0(un1_address_counter_4_cry_1_c_0_S0), 
    .F1(un1_address_counter_4_cry_1_c_0_S1), 
    .COUT1(\carry_pack.un1_address_counter_4_cry_2 ), 
    .COUT0(\un1_address_counter_4_cry_1_c_0.CO0 ));
  SLICE_52 SLICE_52( .DI1(un1_address_counter_4_cry_0_c_0_S1), 
    .D1(\un1_address_counter_4_cry_0_c_0.CO0 ), .B1(\address_counter[0] ), 
    .C0(un1_start_config8_2_0), .B0(un1_start_config8_2_0), 
    .LSR(un1_fsm_state_2), .CLK(clk_25MHz_c), 
    .CIN1(\un1_address_counter_4_cry_0_c_0.CO0 ), .Q1(\address_counter[0] ), 
    .F1(un1_address_counter_4_cry_0_c_0_S1), 
    .COUT1(\carry_pack.un1_address_counter_4_cry_0 ), 
    .COUT0(\un1_address_counter_4_cry_0_c_0.CO0 ));
  rom1_SLICE_53 \rom1.SLICE_53 ( .DI1(\rom1.dout_2_0_i[7] ), 
    .DI0(\rom1.dout_2_0_i[6] ), .D1(\rom1.dout_2_7dflt_0 ), 
    .C1(\rom1.dout_RNO_0[7] ), .B1(\rom1.N_938_0 ), .A1(\rom1.dout_2_7dflt_1 ), 
    .D0(\rom1.dout_2_6dflt_0 ), .C0(\rom1.N_938_0 ), 
    .B0(\rom1.dout_2_0_i_0_a7[9] ), .A0(\rom1.N_965_0 ), .CLK(clk_25MHz_c), 
    .Q0(\rom_dout[6] ), .Q1(\rom_dout[7] ), .F0(\rom1.dout_2_0_i[6] ), 
    .F1(\rom1.dout_2_0_i[7] ));
  rom1_SLICE_54 \rom1.SLICE_54 ( .DI1(\rom1.dout_2_0_i[4] ), 
    .DI0(\rom1.dout_2_0_i[5] ), .D1(\rom1.dout_2_4dflt_2 ), 
    .C1(\rom1.dout_2_4dflt_1 ), .B1(\rom1.dout_2_0_i_1[4] ), 
    .A1(\rom1.dout_2_0_i_0_a7_2[5] ), .D0(\rom1.dout_RNO_0[5] ), 
    .C0(\rom1.dout_2_adflt ), .B0(\rom1.N_938_0 ), .A0(\rom1.N_965_0 ), 
    .CLK(clk_25MHz_c), .Q0(\rom_dout[5] ), .Q1(\rom_dout[4] ), 
    .F0(\rom1.dout_2_0_i[5] ), .F1(\rom1.dout_2_0_i[4] ));
  rom1_SLICE_56 \rom1.SLICE_56 ( .DI1(\rom1.dout_2_0_i[2] ), 
    .DI0(\rom1.dout_2_0_i[3] ), .D1(\rom1.dout_2_2dflt_3 ), 
    .C1(\rom1.dout_2_2dflt_4 ), .B1(\rom1.dout_2_0_i_0_a7_1[13] ), 
    .A1(\rom1.dout_2_2dflt_0 ), .D0(\rom1.N_951_0 ), 
    .C0(\rom1.dout_2_3dflt_4 ), .B0(\rom1.dout_2_0_i_0_a2[3] ), 
    .A0(\rom_addr[2] ), .CLK(clk_25MHz_c), .Q0(\rom_dout[3] ), 
    .Q1(\rom_dout[2] ), .F0(\rom1.dout_2_0_i[3] ), .F1(\rom1.dout_2_0_i[2] ));
  rom1_SLICE_58 \rom1.SLICE_58 ( .DI1(\rom1.dout_2_0_i[0] ), 
    .DI0(\rom1.dout_2_0_i[1] ), .D1(\rom1.dout_2_0dflt_2 ), 
    .C1(\rom1.dout_2_0dflt_3 ), .B1(\rom_addr[1] ), .A1(\rom1.N_937_0 ), 
    .D0(\rom1.dout_2_1dflt_0 ), .C0(\rom1.dout_RNO_0[1] ), .B0(\rom1.N_951_0 ), 
    .A0(\rom1.N_938_0 ), .CLK(clk_25MHz_c), .Q0(\rom_dout[1] ), 
    .Q1(\rom_dout[0] ), .F0(\rom1.dout_2_0_i[1] ), .F1(\rom1.dout_2_0_i[0] ));
  rom1_SLICE_60 \rom1.SLICE_60 ( .DI1(\rom1.dout_2_0_i[14] ), 
    .DI0(\rom1.dout_2_0_i[15] ), .D1(\rom1.dout_2_14dflt_1 ), 
    .C1(\rom1.N_939_0 ), .B1(\rom1.dout_2_0_i_0_a7[1] ), 
    .A1(\rom1.dout_2_14dflt_3 ), .D0(\rom1.N_964_0 ), 
    .C0(\rom1.dout_2_15dflt_0 ), .B0(\rom1.N_938_0 ), .A0(\rom_addr[2] ), 
    .CLK(clk_25MHz_c), .Q0(\rom_dout[15] ), .Q1(\rom_dout[14] ), 
    .F0(\rom1.dout_2_0_i[15] ), .F1(\rom1.dout_2_0_i[14] ));
  rom1_SLICE_62 \rom1.SLICE_62 ( .DI1(\rom1.dout_2_0_i[12] ), 
    .DI0(\rom1.dout_2_0_i[13] ), .D1(\rom1.dout_2_12dflt_0 ), 
    .C1(\rom1.dout_RNO_0[12] ), .B1(\rom1.dout_2_0_i_0_a2[3] ), 
    .A1(\rom1.N_937_0 ), .D0(\rom1.N_964_0 ), .C0(\rom1.dout_2_13dflt_1 ), 
    .B0(\rom_addr[2] ), .A0(\rom1.dout_2_0_i_0_a2[3] ), .CLK(clk_25MHz_c), 
    .Q0(\rom_dout[13] ), .Q1(\rom_dout[12] ), .F0(\rom1.dout_2_0_i[13] ), 
    .F1(\rom1.dout_2_0_i[12] ));
  rom1_SLICE_64 \rom1.SLICE_64 ( .DI1(\rom1.dout_2_0_i[10] ), 
    .DI0(\rom1.dout_2_0_i[11] ), .D1(\rom1.dout_2_10dflt_2 ), 
    .C1(\rom1.dout_2_0_i_1[10] ), .B1(\rom1.dout_RNO_0[10] ), 
    .A1(\rom1.N_953_0 ), .D0(\rom1.dout_2_adflt ), .C0(\rom1.dout_2_11dflt_1 ), 
    .B0(\rom1.dout_RNO_0[11] ), .A0(\rom1.dout_2_0_i_1_0[11] ), 
    .CLK(clk_25MHz_c), .Q0(\rom_dout[11] ), .Q1(\rom_dout[10] ), 
    .F0(\rom1.dout_2_0_i[11] ), .F1(\rom1.dout_2_0_i[10] ));
  rom1_SLICE_66 \rom1.SLICE_66 ( .DI1(\rom1.dout_2_0_i[8] ), 
    .DI0(\rom1.dout_2_0_i[9] ), .D1(\rom1.dout_2_8dflt_2 ), 
    .C1(\rom1.dout_2_8dflt_0 ), .B1(\rom1.N_938_0 ), 
    .A1(\rom1.dout_2_0_i_1[8] ), .D0(\rom1.dout_2_9dflt_4 ), 
    .C0(\rom1.N_937_0 ), .B0(\rom_addr[4] ), .A0(\rom1.N_949_0 ), 
    .CLK(clk_25MHz_c), .Q0(\rom_dout[9] ), .Q1(\rom_dout[8] ), 
    .F0(\rom1.dout_2_0_i[9] ), .F1(\rom1.dout_2_0_i[8] ));
  config_1_SLICE_69 \config_1.SLICE_69 ( .DI1(start_config_0), 
    .DI0(\config_1.done_0 ), .D1(\vga_inst.m7_0 ), .C1(start_config), 
    .B1(\fsm_state[2] ), .A1(SCCB_ready), .D0(done_c), 
    .C0(\config_1.FSM_state[0] ), .B0(TEST_c), .A0(start_config), 
    .CLK(clk_25MHz_c), .Q0(done_c), .Q1(start_config), .F0(\config_1.done_0 ), 
    .F1(start_config_0));
  config_1_SLICE_70 \config_1.SLICE_70 ( .DI1(\config_1.N_4_i ), 
    .DI0(\config_1.FSM_state_cnst_m ), .D1(\config_1.N_96 ), 
    .C1(\config_1.FSM_state[0] ), .B1(TEST_c), .A1(start_config), 
    .D0(\config_1.FSM_state[0] ), .C0(\config_1.N_96 ), 
    .B0(\config_1.un32_FSM_state_0_sqmuxa ), 
    .A0(\config_1.FSM_state_2_sqmuxa ), .CLK(clk_25MHz_c), .Q0(TEST_c), 
    .Q1(\config_1.FSM_state[0] ), .F0(\config_1.FSM_state_cnst_m ), 
    .F1(\config_1.N_4_i ));
  config_1_SLICE_72 \config_1.SLICE_72 ( .DI1(\config_1.timer_5[12] ), 
    .DI0(\config_1.timer_5[13] ), .D1(\config_1.un1_timer[12] ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa ), .B1(\config_1.timer_2_sqmuxa ), 
    .D0(\config_1.un1_timer[13] ), .C0(\config_1.timer_2_sqmuxa ), 
    .B0(\config_1.un32_FSM_state_0_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[13] ), .Q1(\config_1.timer[12] ), 
    .F0(\config_1.timer_5[13] ), .F1(\config_1.timer_5[12] ));
  config_1_SLICE_74 \config_1.SLICE_74 ( .DI1(\config_1.timer_5[10] ), 
    .DI0(\config_1.timer_5[11] ), .D1(\config_1.un1_timer[10] ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa ), .B1(\config_1.timer_2_sqmuxa ), 
    .D0(\config_1.un1_timer[11] ), .C0(\config_1.timer_2_sqmuxa ), 
    .B0(\config_1.un32_FSM_state_0_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[11] ), .Q1(\config_1.timer[10] ), 
    .F0(\config_1.timer_5[11] ), .F1(\config_1.timer_5[10] ));
  config_1_SLICE_76 \config_1.SLICE_76 ( .DI1(\config_1.timer_5[8] ), 
    .DI0(\config_1.timer_5[9] ), .D1(\config_1.timer_2_sqmuxa ), 
    .C1(\config_1.un1_timer[8] ), .A1(\config_1.un32_FSM_state_0_sqmuxa ), 
    .D0(\config_1.un1_timer[9] ), .C0(\config_1.timer_2_sqmuxa ), 
    .B0(\config_1.un32_FSM_state_0_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[9] ), .Q1(\config_1.timer[8] ), 
    .F0(\config_1.timer_5[9] ), .F1(\config_1.timer_5[8] ));
  config_1_SLICE_78 \config_1.SLICE_78 ( .DI1(\config_1.timer_5[6] ), 
    .DI0(\config_1.timer_5[7] ), .D1(\config_1.un1_timer[6] ), 
    .C1(\config_1.timer_2_sqmuxa ), .B1(\config_1.un32_FSM_state_0_sqmuxa ), 
    .D0(\config_1.un1_timer[7] ), .C0(\config_1.un32_FSM_state_0_sqmuxa ), 
    .B0(\config_1.timer_2_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[7] ), .Q1(\config_1.timer[6] ), 
    .F0(\config_1.timer_5[7] ), .F1(\config_1.timer_5[6] ));
  config_1_SLICE_80 \config_1.SLICE_80 ( .DI1(\config_1.timer_5[4] ), 
    .DI0(\config_1.timer_5[5] ), .D1(\config_1.un1_timer[4] ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa ), .B1(\config_1.timer_2_sqmuxa ), 
    .D0(\config_1.un1_timer[5] ), .C0(\config_1.timer_2_sqmuxa ), 
    .B0(\config_1.un32_FSM_state_0_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[5] ), .Q1(\config_1.timer[4] ), 
    .F0(\config_1.timer_5[5] ), .F1(\config_1.timer_5[4] ));
  config_1_SLICE_82 \config_1.SLICE_82 ( .DI1(\config_1.timer_5[2] ), 
    .DI0(\config_1.timer_5[3] ), .D1(\config_1.un1_timer[2] ), 
    .C1(\config_1.timer_2_sqmuxa ), .B1(\config_1.un32_FSM_state_0_sqmuxa ), 
    .D0(\config_1.un1_timer[3] ), .C0(\config_1.un32_FSM_state_0_sqmuxa ), 
    .B0(\config_1.timer_2_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[3] ), .Q1(\config_1.timer[2] ), 
    .F0(\config_1.timer_5[3] ), .F1(\config_1.timer_5[2] ));
  config_1_SLICE_84 \config_1.SLICE_84 ( .DI1(\config_1.timer_5[0] ), 
    .DI0(\config_1.timer_5[1] ), .D1(\config_1.un32_FSM_state_0_sqmuxa ), 
    .C1(\config_1.un1_timer[0] ), .A1(\config_1.timer_2_sqmuxa ), 
    .D0(\config_1.un1_timer[1] ), .C0(\config_1.un32_FSM_state_0_sqmuxa ), 
    .B0(\config_1.timer_2_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[1] ), .Q1(\config_1.timer[0] ), 
    .F0(\config_1.timer_5[1] ), .F1(\config_1.timer_5[0] ));
  config_1_SLICE_86 \config_1.SLICE_86 ( .DI1(\config_1.timer_5[26] ), 
    .DI0(\config_1.timer_5[27] ), .D1(\config_1.un1_timer[26] ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa ), .B1(\config_1.timer_2_sqmuxa ), 
    .D0(\config_1.un1_timer[27] ), .C0(\config_1.timer_2_sqmuxa ), 
    .B0(\config_1.un32_FSM_state_0_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[27] ), .Q1(\config_1.timer[26] ), 
    .F0(\config_1.timer_5[27] ), .F1(\config_1.timer_5[26] ));
  config_1_SLICE_88 \config_1.SLICE_88 ( .DI1(\config_1.timer_5[24] ), 
    .DI0(\config_1.timer_5[25] ), .D1(\config_1.un32_FSM_state_0_sqmuxa ), 
    .C1(\config_1.un1_timer[24] ), .B1(\config_1.timer_2_sqmuxa ), 
    .D0(\config_1.un1_timer[25] ), .C0(\config_1.un32_FSM_state_0_sqmuxa ), 
    .A0(\config_1.timer_2_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[25] ), .Q1(\config_1.timer[24] ), 
    .F0(\config_1.timer_5[25] ), .F1(\config_1.timer_5[24] ));
  config_1_SLICE_90 \config_1.SLICE_90 ( .DI1(\config_1.timer_5[22] ), 
    .DI0(\config_1.timer_5[23] ), .D1(\config_1.un1_timer[22] ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa ), .B1(\config_1.timer_2_sqmuxa ), 
    .D0(\config_1.un1_timer[23] ), .C0(\config_1.timer_2_sqmuxa ), 
    .B0(\config_1.un32_FSM_state_0_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[23] ), .Q1(\config_1.timer[22] ), 
    .F0(\config_1.timer_5[23] ), .F1(\config_1.timer_5[22] ));
  config_1_SLICE_92 \config_1.SLICE_92 ( .DI1(\config_1.timer_5[20] ), 
    .DI0(\config_1.timer_5[21] ), .D1(\config_1.un1_timer[20] ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa ), .B1(\config_1.timer_2_sqmuxa ), 
    .D0(\config_1.un1_timer[21] ), .C0(\config_1.timer_2_sqmuxa ), 
    .B0(\config_1.un32_FSM_state_0_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[21] ), .Q1(\config_1.timer[20] ), 
    .F0(\config_1.timer_5[21] ), .F1(\config_1.timer_5[20] ));
  config_1_SLICE_94 \config_1.SLICE_94 ( .DI1(\config_1.timer_5[18] ), 
    .DI0(\config_1.timer_5[19] ), .D1(\config_1.un1_timer[18] ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa ), .A1(\config_1.timer_2_sqmuxa ), 
    .D0(\config_1.timer_2_sqmuxa ), .C0(\config_1.un1_timer[19] ), 
    .B0(\config_1.un32_FSM_state_0_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[19] ), .Q1(\config_1.timer[18] ), 
    .F0(\config_1.timer_5[19] ), .F1(\config_1.timer_5[18] ));
  config_1_SLICE_96 \config_1.SLICE_96 ( .DI1(\config_1.timer_5[16] ), 
    .DI0(\config_1.timer_5[17] ), .D1(\config_1.un1_timer[16] ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa ), .A1(\config_1.timer_2_sqmuxa ), 
    .D0(\config_1.timer_2_sqmuxa ), .C0(\config_1.un1_timer[17] ), 
    .B0(\config_1.un32_FSM_state_0_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[17] ), .Q1(\config_1.timer[16] ), 
    .F0(\config_1.timer_5[17] ), .F1(\config_1.timer_5[16] ));
  config_1_SLICE_98 \config_1.SLICE_98 ( .DI1(\config_1.timer_5[14] ), 
    .DI0(\config_1.timer_5[15] ), .D1(\config_1.un1_timer[14] ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa ), .A1(\config_1.timer_2_sqmuxa ), 
    .D0(\config_1.timer_2_sqmuxa ), .C0(\config_1.un1_timer[15] ), 
    .B0(\config_1.un32_FSM_state_0_sqmuxa ), .LSR(\config_1.timer_1_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\config_1.timer[15] ), .Q1(\config_1.timer[14] ), 
    .F0(\config_1.timer_5[15] ), .F1(\config_1.timer_5[14] ));
  config_1_SLICE_102 \config_1.SLICE_102 ( .DI1(\config_1.rom_addr_RNO[0] ), 
    .DI0(\config_1.rom_addr_RNO[1] ), .D1(\config_1.timer_0_sqmuxa ), 
    .C1(TEST_c), .B1(\rom_addr[0] ), .D0(TEST_c), 
    .C0(\config_1.timer_0_sqmuxa ), .B0(\rom_addr[1] ), .A0(\rom_addr[0] ), 
    .LSR(\config_1.FSM_state_RNI5NH1_0[0] ), .CLK(clk_25MHz_c), 
    .Q0(\rom_addr[1] ), .Q1(\rom_addr[0] ), .F0(\config_1.rom_addr_RNO[1] ), 
    .F1(\config_1.rom_addr_RNO[0] ));
  SLICE_104 SLICE_104( .DI1(\rom_dout[14].sig_001.FeedThruLUT ), 
    .DI0(\rom_dout[15].sig_000.FeedThruLUT ), .D1(\rom_dout[14] ), 
    .D0(\rom_dout[15] ), .CE(\config_1.timer_2_sqmuxa ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB_addr[7] ), .Q1(\SCCB_addr[6] ), 
    .F0(\rom_dout[15].sig_000.FeedThruLUT ), 
    .F1(\rom_dout[14].sig_001.FeedThruLUT ));
  SLICE_106 SLICE_106( .DI1(\rom_dout[12].sig_003.FeedThruLUT ), 
    .DI0(\rom_dout[13].sig_002.FeedThruLUT ), .D1(\rom_dout[12] ), 
    .D0(\rom_dout[13] ), .CE(\config_1.timer_2_sqmuxa ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB_addr[5] ), .Q1(\SCCB_addr[4] ), 
    .F0(\rom_dout[13].sig_002.FeedThruLUT ), 
    .F1(\rom_dout[12].sig_003.FeedThruLUT ));
  SLICE_108 SLICE_108( .DI1(\rom_dout[10].sig_005.FeedThruLUT ), 
    .DI0(\rom_dout[11].sig_004.FeedThruLUT ), .D1(\rom_dout[10] ), 
    .D0(\rom_dout[11] ), .CE(\config_1.timer_2_sqmuxa ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB_addr[3] ), .Q1(\SCCB_addr[2] ), 
    .F0(\rom_dout[11].sig_004.FeedThruLUT ), 
    .F1(\rom_dout[10].sig_005.FeedThruLUT ));
  SLICE_110 SLICE_110( .DI1(\rom_dout[8].sig_007.FeedThruLUT ), 
    .DI0(\rom_dout[9].sig_006.FeedThruLUT ), .D1(\rom_dout[8] ), 
    .D0(\rom_dout[9] ), .CE(\config_1.timer_2_sqmuxa ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB_addr[1] ), .Q1(\SCCB_addr[0] ), 
    .F0(\rom_dout[9].sig_006.FeedThruLUT ), 
    .F1(\rom_dout[8].sig_007.FeedThruLUT ));
  SLICE_112 SLICE_112( .DI1(\rom_dout[6].sig_009.FeedThruLUT ), 
    .DI0(\rom_dout[7].sig_008.FeedThruLUT ), .D1(\rom_dout[6] ), 
    .D0(\rom_dout[7] ), .CE(\config_1.timer_2_sqmuxa ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB_data[7] ), .Q1(\SCCB_data[6] ), 
    .F0(\rom_dout[7].sig_008.FeedThruLUT ), 
    .F1(\rom_dout[6].sig_009.FeedThruLUT ));
  SLICE_114 SLICE_114( .DI1(\rom_dout[4].sig_011.FeedThruLUT ), 
    .DI0(\rom_dout[5].sig_010.FeedThruLUT ), .C1(\rom_dout[4] ), 
    .C0(\rom_dout[5] ), .CE(\config_1.timer_2_sqmuxa ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB_data[5] ), .Q1(\SCCB_data[4] ), 
    .F0(\rom_dout[5].sig_010.FeedThruLUT ), 
    .F1(\rom_dout[4].sig_011.FeedThruLUT ));
  SLICE_116 SLICE_116( .DI1(\rom_dout[2].sig_013.FeedThruLUT ), 
    .DI0(\rom_dout[3].sig_012.FeedThruLUT ), .D1(\rom_dout[2] ), 
    .D0(\rom_dout[3] ), .CE(\config_1.timer_2_sqmuxa ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB_data[3] ), .Q1(\SCCB_data[2] ), 
    .F0(\rom_dout[3].sig_012.FeedThruLUT ), 
    .F1(\rom_dout[2].sig_013.FeedThruLUT ));
  SLICE_118 SLICE_118( .DI1(\rom_dout[0].sig_015.FeedThruLUT ), 
    .DI0(\rom_dout[1].sig_014.FeedThruLUT ), .D1(\rom_dout[0] ), 
    .D0(\rom_dout[1] ), .CE(\config_1.timer_2_sqmuxa ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB_data[1] ), .Q1(\SCCB_data[0] ), 
    .F0(\rom_dout[1].sig_014.FeedThruLUT ), 
    .F1(\rom_dout[0].sig_015.FeedThruLUT ));
  config_1_SLICE_122 \config_1.SLICE_122 ( 
    .DI1(\config_1.rom_addr_esr_RNO[4] ), .DI0(\config_1.rom_addr_esr_RNO[5] ), 
    .D1(\config_1.timer_0_sqmuxa_0_0 ), .C1(\config_1.N_96 ), 
    .B1(\config_1.FSM_state[0] ), .A1(\rom_addr[4] ), .D0(\config_1.N_96 ), 
    .C0(\config_1.un1_rom_addr_c5_1 ), .B0(\rom_addr[5] ), 
    .A0(\config_1.FSM_state[0] ), .CE(\config_1.timer_0_sqmuxa_d_0_0_0 ), 
    .LSR(\config_1.FSM_state_RNI5NH1_0[0] ), .CLK(clk_25MHz_c), 
    .Q0(\rom_addr[5] ), .Q1(\rom_addr[4] ), 
    .F0(\config_1.rom_addr_esr_RNO[5] ), .F1(\config_1.rom_addr_esr_RNO[4] ));
  SCCB1_SLICE_126 \SCCB1.SLICE_126 ( .DI1(\SCCB1.FSM_state_2_fast ), 
    .DI0(\SCCB1.FSM_state_1_fast ), .D1(\SCCB1.N_9 ), 
    .C1(\SCCB1.g0_i_m2_1_a5_2_13 ), .B1(\SCCB1.g0_i_m2_1_0 ), 
    .A1(\SCCB1.g0_i_m2_1_a5_2_14 ), .D0(\SCCB1.g0_10 ), .C0(\SCCB1.g0_9 ), 
    .B0(\SCCB1.FSM_return_state[1] ), .A0(\SCCB1.FSM_state_e_1_0[1] ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.FSM_state_fast[1] ), 
    .Q1(\SCCB1.FSM_state_fast[0] ), .F0(\SCCB1.FSM_state_1_fast ), 
    .F1(\SCCB1.FSM_state_2_fast ));
  SCCB1_SLICE_131 \SCCB1.SLICE_131 ( .DI1(\SCCB1.byte_counter_scalar ), 
    .DI0(\SCCB1.byte_counter_0 ), .D1(\SCCB1.CO0 ), 
    .C1(\SCCB1.FSM_state_RNI6J0D_2[0] ), .B1(\SCCB1.FSM_state_1_rep1_RNI4J0M ), 
    .A1(\SCCB1.byte_counter[1] ), .D0(\SCCB1.FSM_state_RNI6J0D_2[0] ), 
    .C0(\SCCB1.FSM_state_1_rep1_RNI4J0M ), .B0(\SCCB1.byte_counter[0] ), 
    .A0(\SCCB1.un1_FSM_state_5 ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB1.byte_counter[0] ), .Q1(\SCCB1.byte_counter[1] ), 
    .F0(\SCCB1.byte_counter_0 ), .F1(\SCCB1.byte_counter_scalar ));
  SCCB1_SLICE_133 \SCCB1.SLICE_133 ( .DI1(\SCCB1.byte_index_0 ), 
    .DI0(\SCCB1.byte_index_1 ), .D1(\SCCB1.FSM_state_cnst_1 ), 
    .C1(\SCCB1.byte_index[1] ), .B1(\SCCB1.byte_index[0] ), 
    .A1(\SCCB1.un1_FSM_state_9 ), .D0(\SCCB1.FSM_state_1_rep1_RNI4J0M ), 
    .C0(\SCCB1.byte_index[0] ), .B0(\SCCB1.un1_FSM_state_9 ), 
    .A0(\SCCB1.un1_FSM_state_5 ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB1.byte_index[0] ), .Q1(\SCCB1.byte_index[1] ), 
    .F0(\SCCB1.byte_index_1 ), .F1(\SCCB1.byte_index_0 ));
  SCCB1_SLICE_135 \SCCB1.SLICE_135 ( .DI0(\SCCB1.byte_index_scalar ), 
    .D0(\SCCB1.un1_byte_index_c2 ), .C0(\SCCB1.FSM_state_cnst_1 ), 
    .B0(\SCCB1.byte_index[2] ), .CLK(clk_25MHz_c), .Q0(\SCCB1.byte_index[2] ), 
    .F0(\SCCB1.byte_index_scalar ));
  SCCB1_SLICE_138 \SCCB1.SLICE_138 ( .DI0(\SCCB1.timer_lm[27] ), 
    .D0(\SCCB1.timer_cry[26] ), .C0(\SCCB1.timer[27] ), .A0(\SCCB1.N_198_i ), 
    .CE(\SCCB1.timere_0_i ), .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[27] ), 
    .F0(\SCCB1.timer_lm[27] ));
  SCCB1_SLICE_139 \SCCB1.SLICE_139 ( .DI0(\SCCB1.timer_lm[26] ), 
    .D0(\SCCB1.timer_s[26] ), .C0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[26] ), .F0(\SCCB1.timer_lm[26] ));
  SCCB1_SLICE_140 \SCCB1.SLICE_140 ( .DI1(\SCCB1.timer_lm[24] ), 
    .DI0(\SCCB1.timer_lm[25] ), .D1(\SCCB1.timer_s[24] ), .C1(\SCCB1.N_198_i ), 
    .D0(\SCCB1.timer_s[25] ), .B0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[25] ), .Q1(\SCCB1.timer[24] ), 
    .F0(\SCCB1.timer_lm[25] ), .F1(\SCCB1.timer_lm[24] ));
  SCCB1_SLICE_142 \SCCB1.SLICE_142 ( .DI1(\SCCB1.timer_lm[22] ), 
    .DI0(\SCCB1.timer_lm[23] ), .D1(\SCCB1.timer_s[22] ), .C1(\SCCB1.N_198_i ), 
    .D0(\SCCB1.timer_s[23] ), .B0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[23] ), .Q1(\SCCB1.timer[22] ), 
    .F0(\SCCB1.timer_lm[23] ), .F1(\SCCB1.timer_lm[22] ));
  SCCB1_SLICE_144 \SCCB1.SLICE_144 ( .DI1(\SCCB1.timer_lm[20] ), 
    .DI0(\SCCB1.timer_lm[21] ), .D1(\SCCB1.timer_s[20] ), .C1(\SCCB1.N_198_i ), 
    .D0(\SCCB1.timer_s[21] ), .B0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[21] ), .Q1(\SCCB1.timer[20] ), 
    .F0(\SCCB1.timer_lm[21] ), .F1(\SCCB1.timer_lm[20] ));
  SCCB1_SLICE_146 \SCCB1.SLICE_146 ( .DI1(\SCCB1.timer_lm[18] ), 
    .DI0(\SCCB1.timer_lm[19] ), .D1(\SCCB1.timer_s[18] ), .C1(\SCCB1.N_198_i ), 
    .D0(\SCCB1.timer_s[19] ), .B0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[19] ), .Q1(\SCCB1.timer[18] ), 
    .F0(\SCCB1.timer_lm[19] ), .F1(\SCCB1.timer_lm[18] ));
  SCCB1_SLICE_148 \SCCB1.SLICE_148 ( .DI1(\SCCB1.timer_lm[16] ), 
    .DI0(\SCCB1.timer_lm[17] ), .D1(\SCCB1.timer_s[16] ), .C1(\SCCB1.N_198_i ), 
    .D0(\SCCB1.timer_s[17] ), .B0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[17] ), .Q1(\SCCB1.timer[16] ), 
    .F0(\SCCB1.timer_lm[17] ), .F1(\SCCB1.timer_lm[16] ));
  SCCB1_SLICE_150 \SCCB1.SLICE_150 ( .DI1(\SCCB1.timer_lm[14] ), 
    .DI0(\SCCB1.timer_lm[15] ), .D1(\SCCB1.timer_s[14] ), .C1(\SCCB1.N_198_i ), 
    .D0(\SCCB1.timer_s[15] ), .B0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[15] ), .Q1(\SCCB1.timer[14] ), 
    .F0(\SCCB1.timer_lm[15] ), .F1(\SCCB1.timer_lm[14] ));
  SCCB1_SLICE_152 \SCCB1.SLICE_152 ( .DI1(\SCCB1.timer_lm[12] ), 
    .DI0(\SCCB1.timer_lm[13] ), .D1(\SCCB1.timer_s[12] ), .C1(\SCCB1.N_198_i ), 
    .D0(\SCCB1.timer_s[13] ), .B0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[13] ), .Q1(\SCCB1.timer[12] ), 
    .F0(\SCCB1.timer_lm[13] ), .F1(\SCCB1.timer_lm[12] ));
  SCCB1_SLICE_154 \SCCB1.SLICE_154 ( .DI1(\SCCB1.timer_lm[10] ), 
    .DI0(\SCCB1.timer_lm[11] ), .D1(\SCCB1.timer_s[10] ), .C1(\SCCB1.N_198_i ), 
    .D0(\SCCB1.timer_s[11] ), .B0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[11] ), .Q1(\SCCB1.timer[10] ), 
    .F0(\SCCB1.timer_lm[11] ), .F1(\SCCB1.timer_lm[10] ));
  SCCB1_SLICE_156 \SCCB1.SLICE_156 ( .DI1(\SCCB1.timer_lm[8] ), 
    .DI0(\SCCB1.timer_lm[9] ), .D1(\SCCB1.timer_s[8] ), 
    .C1(\SCCB1.FSM_state_RNI6J0D_2[0] ), .A1(\SCCB1.N_198_i ), 
    .D0(\SCCB1.timer_s[9] ), .B0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[9] ), .Q1(\SCCB1.timer[8] ), 
    .F0(\SCCB1.timer_lm[9] ), .F1(\SCCB1.timer_lm[8] ));
  SCCB1_SLICE_158 \SCCB1.SLICE_158 ( .DI1(\SCCB1.timer_lm[6] ), 
    .DI0(\SCCB1.timer_lm[7] ), .D1(\SCCB1.timer_s[6] ), 
    .C1(\SCCB1.un1_FSM_state_29_0_1 ), .B1(\SCCB1.N_198_i ), 
    .D0(\SCCB1.timer_s[7] ), .C0(\SCCB1.FSM_state_RNI6J0D_2[0] ), 
    .A0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB1.timer[7] ), .Q1(\SCCB1.timer[6] ), .F0(\SCCB1.timer_lm[7] ), 
    .F1(\SCCB1.timer_lm[6] ));
  SCCB1_SLICE_160 \SCCB1.SLICE_160 ( .DI1(\SCCB1.timer_lm[4] ), 
    .DI0(\SCCB1.timer_lm[5] ), .D1(\SCCB1.timer_s[4] ), .C1(\SCCB1.N_198_i ), 
    .B1(\SCCB1.un73_FSM_state_0_sqmuxacf1 ), .A1(\SCCB1.timer_RNIM5CP3_0[16] ), 
    .D0(\SCCB1.N_198_i ), .C0(\SCCB1.timer_s[5] ), 
    .B0(\SCCB1.timer_RNIM5CP3_0[16] ), .A0(\SCCB1.un73_FSM_state_0_sqmuxacf1 ), 
    .CE(\SCCB1.timere_0_i ), .CLK(clk_25MHz_c), .Q0(\SCCB1.timer[5] ), 
    .Q1(\SCCB1.timer[4] ), .F0(\SCCB1.timer_lm[5] ), .F1(\SCCB1.timer_lm[4] ));
  SCCB1_SLICE_162 \SCCB1.SLICE_162 ( .DI1(\SCCB1.timer_lm[2] ), 
    .DI0(\SCCB1.timer_lm[3] ), .D1(\SCCB1.un73_FSM_state_0_sqmuxacf1 ), 
    .C1(\SCCB1.timer_RNIM5CP3_0[16] ), .B1(\SCCB1.timer_s[2] ), 
    .A1(\SCCB1.N_198_i ), .D0(\SCCB1.timer_s[3] ), 
    .C0(\SCCB1.FSM_state_RNI6J0D_2[0] ), .B0(\SCCB1.N_198_i ), 
    .A0(\SCCB1.N_5_i ), .CE(\SCCB1.timere_0_i ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB1.timer[3] ), .Q1(\SCCB1.timer[2] ), .F0(\SCCB1.timer_lm[3] ), 
    .F1(\SCCB1.timer_lm[2] ));
  SCCB1_SLICE_164 \SCCB1.SLICE_164 ( .DI1(\SCCB1.timer_lm[0] ), 
    .DI0(\SCCB1.timer_lm[1] ), .D1(\SCCB1.timer_s[0] ), 
    .C1(\SCCB1.timer_RNO_0[0] ), .B1(\SCCB1.N_198_i ), .D0(\SCCB1.timer_s[1] ), 
    .C0(\SCCB1.un1_FSM_state_29_0_1 ), .B0(\SCCB1.N_5_i ), 
    .A0(\SCCB1.N_198_i ), .CE(\SCCB1.timere_0_i ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB1.timer[1] ), .Q1(\SCCB1.timer[0] ), .F0(\SCCB1.timer_lm[1] ), 
    .F1(\SCCB1.timer_lm[0] ));
  SLICE_168 SLICE_168( .DI1(\SCCB_addr[6].sig_017.FeedThruLUT ), 
    .DI0(\SCCB_addr[7].sig_016.FeedThruLUT ), .C1(\SCCB_addr[6] ), 
    .D0(\SCCB_addr[7] ), .CE(\SCCB1.latched_address_0_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.latched_address[7] ), 
    .Q1(\SCCB1.latched_address[6] ), .F0(\SCCB_addr[7].sig_016.FeedThruLUT ), 
    .F1(\SCCB_addr[6].sig_017.FeedThruLUT ));
  SLICE_170 SLICE_170( .DI1(\SCCB_addr[4].sig_019.FeedThruLUT ), 
    .DI0(\SCCB_addr[5].sig_018.FeedThruLUT ), .D1(\SCCB_addr[4] ), 
    .D0(\SCCB_addr[5] ), .CE(\SCCB1.latched_address_0_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.latched_address[5] ), 
    .Q1(\SCCB1.latched_address[4] ), .F0(\SCCB_addr[5].sig_018.FeedThruLUT ), 
    .F1(\SCCB_addr[4].sig_019.FeedThruLUT ));
  SLICE_172 SLICE_172( .DI1(\SCCB_addr[2].sig_021.FeedThruLUT ), 
    .DI0(\SCCB_addr[3].sig_020.FeedThruLUT ), .D1(\SCCB_addr[2] ), 
    .D0(\SCCB_addr[3] ), .CE(\SCCB1.latched_address_0_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.latched_address[3] ), 
    .Q1(\SCCB1.latched_address[2] ), .F0(\SCCB_addr[3].sig_020.FeedThruLUT ), 
    .F1(\SCCB_addr[2].sig_021.FeedThruLUT ));
  SLICE_174 SLICE_174( .DI1(\SCCB_addr[0].sig_023.FeedThruLUT ), 
    .DI0(\SCCB_addr[1].sig_022.FeedThruLUT ), .D1(\SCCB_addr[0] ), 
    .D0(\SCCB_addr[1] ), .CE(\SCCB1.latched_address_0_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.latched_address[1] ), 
    .Q1(\SCCB1.latched_address[0] ), .F0(\SCCB_addr[1].sig_022.FeedThruLUT ), 
    .F1(\SCCB_addr[0].sig_023.FeedThruLUT ));
  SLICE_176 SLICE_176( .DI1(\SCCB_data[6].sig_025.FeedThruLUT ), 
    .DI0(\SCCB_data[7].sig_024.FeedThruLUT ), .D1(\SCCB_data[6] ), 
    .D0(\SCCB_data[7] ), .CE(\SCCB1.latched_address_0_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.latched_data[7] ), 
    .Q1(\SCCB1.latched_data[6] ), .F0(\SCCB_data[7].sig_024.FeedThruLUT ), 
    .F1(\SCCB_data[6].sig_025.FeedThruLUT ));
  SLICE_178 SLICE_178( .DI1(\SCCB_data[4].sig_027.FeedThruLUT ), 
    .DI0(\SCCB_data[5].sig_026.FeedThruLUT ), .C1(\SCCB_data[4] ), 
    .D0(\SCCB_data[5] ), .CE(\SCCB1.latched_address_0_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.latched_data[5] ), 
    .Q1(\SCCB1.latched_data[4] ), .F0(\SCCB_data[5].sig_026.FeedThruLUT ), 
    .F1(\SCCB_data[4].sig_027.FeedThruLUT ));
  SLICE_180 SLICE_180( .DI1(\SCCB_data[2].sig_029.FeedThruLUT ), 
    .DI0(\SCCB_data[3].sig_028.FeedThruLUT ), .D1(\SCCB_data[2] ), 
    .D0(\SCCB_data[3] ), .CE(\SCCB1.latched_address_0_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.latched_data[3] ), 
    .Q1(\SCCB1.latched_data[2] ), .F0(\SCCB_data[3].sig_028.FeedThruLUT ), 
    .F1(\SCCB_data[2].sig_029.FeedThruLUT ));
  SLICE_182 SLICE_182( .DI1(\SCCB_data[0].sig_031.FeedThruLUT ), 
    .DI0(\SCCB_data[1].sig_030.FeedThruLUT ), .D1(\SCCB_data[0] ), 
    .C0(\SCCB_data[1] ), .CE(\SCCB1.latched_address_0_sqmuxa ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.latched_data[1] ), 
    .Q1(\SCCB1.latched_data[0] ), .F0(\SCCB_data[1].sig_030.FeedThruLUT ), 
    .F1(\SCCB_data[0].sig_031.FeedThruLUT ));
  SCCB1_SLICE_185 \SCCB1.SLICE_185 ( .DI1(\SCCB1.FSM_return_state_2 ), 
    .DI0(\SCCB1.FSM_return_state_1 ), .D1(\SCCB1.un1_FSM_state_26_0 ), 
    .C1(\SCCB1.FSM_return_state[0] ), .B1(\SCCB1.FSM_state[0] ), 
    .D0(\SCCB1.FSM_state[1] ), .C0(\SCCB1.un1_FSM_state_26_0 ), 
    .B0(\SCCB1.FSM_return_state[1] ), .A0(\SCCB1.FSM_state[0] ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.FSM_return_state[1] ), 
    .Q1(\SCCB1.FSM_return_state[0] ), .F0(\SCCB1.FSM_return_state_1 ), 
    .F1(\SCCB1.FSM_return_state_2 ));
  SCCB1_SLICE_187 \SCCB1.SLICE_187 ( .DI1(\SCCB1.N_174_0 ), 
    .DI0(\SCCB1.N_178_0_i ), .D1(\SCCB1.latched_address[6] ), 
    .C1(\SCCB1.tx_byte_7_iv_0_157_i_0 ), .B1(\SCCB1.N_97_1 ), 
    .D0(\SCCB1.latched_address[7] ), .C0(\SCCB1.tx_byte_7_iv_176_0 ), 
    .A0(\SCCB1.N_97_1 ), .CE(\SCCB1.un1_FSM_state_18_0_i ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB1.tx_byte[7] ), .Q1(\SCCB1.tx_byte[6] ), .F0(\SCCB1.N_178_0_i ), 
    .F1(\SCCB1.N_174_0 ));
  SCCB1_SLICE_189 \SCCB1.SLICE_189 ( .DI1(\SCCB1.N_138_0_i ), 
    .DI0(\SCCB1.N_151_0_i ), .D1(\SCCB1.latched_address[4] ), 
    .C1(\SCCB1.tx_byte_7_iv_2_125_0 ), .A1(\SCCB1.N_97_1 ), 
    .D0(\SCCB1.latched_address[5] ), .C0(\SCCB1.tx_byte_7_iv_1_141_0 ), 
    .B0(\SCCB1.N_97_1 ), .CE(\SCCB1.un1_FSM_state_18_0_i ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB1.tx_byte[5] ), .Q1(\SCCB1.tx_byte[4] ), .F0(\SCCB1.N_151_0_i ), 
    .F1(\SCCB1.N_138_0_i ));
  SCCB1_SLICE_191 \SCCB1.SLICE_191 ( .DI1(\SCCB1.N_112_0_i ), 
    .DI0(\SCCB1.N_125_0_i ), .D1(\SCCB1.latched_address[2] ), 
    .C1(\SCCB1.tx_byte_7_iv_4_93_0 ), .B1(\SCCB1.N_97_1 ), 
    .D0(\SCCB1.latched_address[3] ), .C0(\SCCB1.tx_byte_7_iv_3_109_0 ), 
    .A0(\SCCB1.N_97_1 ), .CE(\SCCB1.un1_FSM_state_18_0_i ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB1.tx_byte[3] ), .Q1(\SCCB1.tx_byte[2] ), .F0(\SCCB1.N_125_0_i ), 
    .F1(\SCCB1.N_112_0_i ));
  SCCB1_SLICE_193 \SCCB1.SLICE_193 ( .DI1(\SCCB1.N_87_0_i ), 
    .DI0(\SCCB1.N_108_0 ), .D1(\SCCB1.latched_data[0] ), 
    .C1(\SCCB1.latched_address[0] ), .B1(\SCCB1.N_97_1 ), .A1(\SCCB1.N_96_1 ), 
    .D0(\SCCB1.latched_address[1] ), .C0(\SCCB1.tx_byte_7_iv_0_0_74_i_0 ), 
    .A0(\SCCB1.N_97_1 ), .CE(\SCCB1.un1_FSM_state_18_0_i ), .CLK(clk_25MHz_c), 
    .Q0(\SCCB1.tx_byte[1] ), .Q1(\SCCB1.tx_byte[0] ), .F0(\SCCB1.N_108_0 ), 
    .F1(\SCCB1.N_87_0_i ));
  SCCB1_SLICE_195 \SCCB1.SLICE_195 ( .DI1(\SCCB1.FSM_state_0 ), 
    .DI0(\SCCB1.FSM_state_scalar ), .D1(\SCCB1.FSM_return_state[2] ), 
    .C1(\SCCB1.N_20 ), .B1(\SCCB1.FSM_state_cnst_1_0_0[2] ), 
    .A1(\SCCB1.timer_RNIHQQO6[0] ), .D0(\SCCB1.g0_i_a3_0_16 ), 
    .C0(\SCCB1.g0_i_a3_0_15 ), .B0(\SCCB1.g0_i_a3_0_14 ), .A0(\SCCB1.N_6_0 ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.FSM_state[3] ), .Q1(\SCCB1.FSM_state[2] ), 
    .F0(\SCCB1.FSM_state_scalar ), .F1(\SCCB1.FSM_state_0 ));
  SCCB1_SLICE_197 \SCCB1.SLICE_197 ( .DI1(\SCCB1.FSM_state_2 ), 
    .DI0(\SCCB1.FSM_state_1 ), .D1(\SCCB1.N_9 ), 
    .C1(\SCCB1.g0_i_m2_1_a5_2_13 ), .B1(\SCCB1.g0_i_m2_1_0 ), 
    .A1(\SCCB1.g0_i_m2_1_a5_2_14 ), .D0(\SCCB1.g0_10 ), .C0(\SCCB1.g0_9 ), 
    .B0(\SCCB1.FSM_state_e_1_0[1] ), .A0(\SCCB1.FSM_return_state[1] ), 
    .CLK(clk_25MHz_c), .Q0(\SCCB1.FSM_state[1] ), .Q1(\SCCB1.FSM_state[0] ), 
    .F0(\SCCB1.FSM_state_1 ), .F1(\SCCB1.FSM_state_2 ));
  reader_SLICE_201 \reader.SLICE_201 ( .DI1(\reader.CAMERA_VSYNC_IN_c_i ), 
    .DI0(\reader.frame_done ), .D1(CAMERA_VSYNC_IN_c), 
    .D0(\reader.FSM_state[0] ), .C0(CAMERA_VSYNC_IN_c), .CLK(CAMERA_PCLOCK_c), 
    .Q0(frame_done_c), .Q1(\reader.FSM_state[0] ), .F0(\reader.frame_done ), 
    .F1(\reader.CAMERA_VSYNC_IN_c_i ));
  reader_SLICE_203 \reader.SLICE_203 ( .DI0(\reader.pixel_datace_0[0] ), 
    .D0(\reader.pixel_half ), .C0(CAMERA_HREF_IN_c), 
    .CE(\reader.FSM_state[0] ), .CLK(CAMERA_PCLOCK_c), .Q0(pixel_valid_c), 
    .F0(\reader.pixel_datace_0[0] ));
  SLICE_204 SLICE_204( .DI1(\CAMERA_DATA_IN_c[6].sig_033.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[7].sig_032.FeedThruLUT ), 
    .D1(\CAMERA_DATA_IN_c[6] ), .D0(\CAMERA_DATA_IN_c[7] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\pixel_data[7] ), .Q1(\pixel_data[6] ), 
    .F0(\CAMERA_DATA_IN_c[7].sig_032.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[6].sig_033.FeedThruLUT ));
  SLICE_206 SLICE_206( .DI1(\CAMERA_DATA_IN_c[4].sig_035.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[5].sig_034.FeedThruLUT ), 
    .C1(\CAMERA_DATA_IN_c[4] ), .D0(\CAMERA_DATA_IN_c[5] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\pixel_data[5] ), .Q1(\pixel_data[4] ), 
    .F0(\CAMERA_DATA_IN_c[5].sig_034.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[4].sig_035.FeedThruLUT ));
  SLICE_208 SLICE_208( .DI1(\CAMERA_DATA_IN_c[2].sig_037.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[3].sig_036.FeedThruLUT ), 
    .D1(\CAMERA_DATA_IN_c[2] ), .D0(\CAMERA_DATA_IN_c[3] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\pixel_data[3] ), .Q1(\pixel_data[2] ), 
    .F0(\CAMERA_DATA_IN_c[3].sig_036.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[2].sig_037.FeedThruLUT ));
  SLICE_210 SLICE_210( .DI1(\CAMERA_DATA_IN_c[0].sig_039.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[1].sig_038.FeedThruLUT ), 
    .D1(\CAMERA_DATA_IN_c[0] ), .D0(\CAMERA_DATA_IN_c[1] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\pixel_data[1] ), .Q1(\pixel_data[0] ), 
    .F0(\CAMERA_DATA_IN_c[1].sig_038.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[0].sig_039.FeedThruLUT ));
  vga_inst_SLICE_213 \vga_inst.SLICE_213 ( .DI1(\vga_inst.row_3[2] ), 
    .DI0(\vga_inst.row_3[3] ), .D1(\vga_inst.m16_5 ), .C1(\vga_inst.m16_4 ), 
    .B1(\vga_inst.N_738 ), .A1(\row[0] ), .D0(\row[0] ), .C0(\vga_inst.m16_5 ), 
    .B0(\vga_inst.m16_4 ), .A0(\vga_inst.N_739 ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .Q0(\row[3] ), .Q1(\row[2] ), .F0(\vga_inst.row_3[3] ), 
    .F1(\vga_inst.row_3[2] ));
  SLICE_219 SLICE_219( .DI1(spram_maskwe_0), .DI0(spram_maskwe_scalar), 
    .D1(\spram_maskwe[2] ), .C1(start_config11), .B1(pixel_toggle), .A1(WR9), 
    .D0(WR9), .C0(pixel_toggle), .B0(start_config11), .A0(\spram_maskwe[0] ), 
    .CLK(clk_25MHz_c), .Q0(\spram_maskwe[0] ), .Q1(\spram_maskwe[2] ), 
    .F0(spram_maskwe_scalar), .F1(spram_maskwe_0));
  SLICE_221 SLICE_221( .DI0(start_prev_0), .D0(start_prev), 
    .C0(un1_start_config9_1_0), .B0(\debug_state_c[1] ), .A0(start_c), 
    .CLK(clk_25MHz_c), .Q0(start_prev), .F0(start_prev_0));
  SLICE_223 SLICE_223( .DI0(\m39$n0 ), .D0(pixel_toggle), 
    .C0(\debug_state_c[1] ), .CE(un1_start_config9_3_0), .CLK(clk_25MHz_c), 
    .Q0(pixel_toggle), .F0(\m39$n0 ));
  SLICE_224 SLICE_224( .DI1(N_195_0_i), .DI0(N_203_0_i), .D1(\pixel_data[6] ), 
    .C1(pixel_toggle), .B1(\debug_state_c[1] ), .D0(\pixel_data[7] ), 
    .C0(\debug_state_c[1] ), .B0(pixel_toggle), .CE(un1_start_config9_3_0), 
    .CLK(clk_25MHz_c), .Q0(\spram_data_in[15] ), .Q1(\spram_data_in[14] ), 
    .F0(N_203_0_i), .F1(N_195_0_i));
  SLICE_226 SLICE_226( .DI1(N_179_0_i), .DI0(N_187_0_i), .D1(\pixel_data[4] ), 
    .C1(pixel_toggle), .A1(\debug_state_c[1] ), .D0(\pixel_data[5] ), 
    .C0(\debug_state_c[1] ), .B0(pixel_toggle), .CE(un1_start_config9_3_0), 
    .CLK(clk_25MHz_c), .Q0(\spram_data_in[13] ), .Q1(\spram_data_in[12] ), 
    .F0(N_187_0_i), .F1(N_179_0_i));
  SLICE_228 SLICE_228( .DI1(N_163_0_i), .DI0(N_171_0_i), .D1(\pixel_data[2] ), 
    .C1(pixel_toggle), .B1(\debug_state_c[1] ), .D0(\pixel_data[3] ), 
    .C0(\debug_state_c[1] ), .B0(pixel_toggle), .CE(un1_start_config9_3_0), 
    .CLK(clk_25MHz_c), .Q0(\spram_data_in[11] ), .Q1(\spram_data_in[10] ), 
    .F0(N_171_0_i), .F1(N_163_0_i));
  SLICE_230 SLICE_230( .DI1(N_147_0_i), .DI0(N_155_0_i), .D1(\pixel_data[0] ), 
    .C1(pixel_toggle), .B1(\debug_state_c[1] ), .D0(\pixel_data[1] ), 
    .C0(\debug_state_c[1] ), .B0(pixel_toggle), .CE(un1_start_config9_3_0), 
    .CLK(clk_25MHz_c), .Q0(\spram_data_in[9] ), .Q1(\spram_data_in[8] ), 
    .F0(N_155_0_i), .F1(N_147_0_i));
  SLICE_232 SLICE_232( .DI1(N_131_0_i), .DI0(N_139_0_i), .D1(\pixel_data[6] ), 
    .C1(pixel_toggle), .B1(\debug_state_c[1] ), .D0(\pixel_data[7] ), 
    .C0(\debug_state_c[1] ), .B0(pixel_toggle), .CE(un1_start_config9_3_0), 
    .CLK(clk_25MHz_c), .Q0(\spram_data_in[7] ), .Q1(\spram_data_in[6] ), 
    .F0(N_139_0_i), .F1(N_131_0_i));
  SLICE_234 SLICE_234( .DI1(N_115_0_i), .DI0(N_123_0_i), .D1(\pixel_data[4] ), 
    .C1(pixel_toggle), .B1(\debug_state_c[1] ), .D0(\pixel_data[5] ), 
    .C0(\debug_state_c[1] ), .B0(pixel_toggle), .CE(un1_start_config9_3_0), 
    .CLK(clk_25MHz_c), .Q0(\spram_data_in[5] ), .Q1(\spram_data_in[4] ), 
    .F0(N_123_0_i), .F1(N_115_0_i));
  SLICE_236 SLICE_236( .DI1(N_99_0_i), .DI0(N_107_0_i), .D1(\pixel_data[2] ), 
    .C1(pixel_toggle), .B1(\debug_state_c[1] ), .D0(\pixel_data[3] ), 
    .C0(\debug_state_c[1] ), .B0(pixel_toggle), .CE(un1_start_config9_3_0), 
    .CLK(clk_25MHz_c), .Q0(\spram_data_in[3] ), .Q1(\spram_data_in[2] ), 
    .F0(N_107_0_i), .F1(N_99_0_i));
  SLICE_238 SLICE_238( .DI1(N_83_0_i), .DI0(N_91_0_i), .D1(\pixel_data[0] ), 
    .C1(pixel_toggle), .B1(\debug_state_c[1] ), .D0(\pixel_data[1] ), 
    .C0(\debug_state_c[1] ), .B0(pixel_toggle), .CE(un1_start_config9_3_0), 
    .CLK(clk_25MHz_c), .Q0(\spram_data_in[1] ), .Q1(\spram_data_in[0] ), 
    .F0(N_91_0_i), .F1(N_83_0_i));
  SLICE_241 SLICE_241( .DI1(fsm_state_1), .DI0(fsm_state_0), 
    .D1(\fsm_state_e_1_0[0] ), .C1(\debug_state_c[0] ), 
    .B1(\fsm_state_e_1[0] ), .A1(\fsm_state_e_1_1[0] ), 
    .D0(\fsm_state_RNO_0[1] ), .B0(\fsm_state_e_1_1[0] ), .CLK(clk_25MHz_c), 
    .Q0(\debug_state_c[1] ), .Q1(\debug_state_c[0] ), .F0(fsm_state_0), 
    .F1(fsm_state_1));
  rom1_SLICE_243 \rom1.SLICE_243 ( .D1(\rom_addr[3] ), 
    .C1(\rom1.dout_RNO_3[7] ), .B1(\rom_addr[1] ), .A1(\rom1.N_937_0 ), 
    .D0(\rom_addr[0] ), .C0(\rom_addr[3] ), .B0(\rom_addr[2] ), 
    .A0(\rom_addr[1] ), .F0(\rom1.dout_RNO_3[7] ), .F1(\rom1.dout_2_7dflt_1 ));
  rom1_SLICE_245 \rom1.SLICE_245 ( .D1(\rom_addr[4] ), .C1(\rom1.N_944_0 ), 
    .B1(\rom_addr[5] ), .A1(\rom_addr[0] ), .D0(\rom_addr[3] ), 
    .C0(\rom_addr[4] ), .B0(\rom_addr[2] ), .A0(\rom_addr[5] ), 
    .F0(\rom1.N_944_0 ), .F1(\rom1.dout_2_0_i_1[4] ));
  rom1_SLICE_247 \rom1.SLICE_247 ( .D1(\rom_addr[1] ), 
    .C1(\rom1.dout_2_0_i_1[11] ), .B1(\rom1.N_949_0 ), .A1(\rom_addr[2] ), 
    .D0(\rom_addr[3] ), .C0(\rom_addr[5] ), .B0(\rom_addr[0] ), 
    .A0(\rom_addr[1] ), .F0(\rom1.dout_2_0_i_1[11] ), 
    .F1(\rom1.dout_2_0_i_1_0[11] ));
  rom1_SLICE_249 \rom1.SLICE_249 ( .D1(\rom_addr[5] ), 
    .C1(\rom1.dout_2_0_i_0_a2_1[1] ), .B1(\rom_addr[1] ), .A1(\rom_addr[3] ), 
    .D0(\rom_addr[0] ), .C0(\rom_addr[4] ), .B0(\rom_addr[2] ), 
    .A0(\rom_addr[5] ), .F0(\rom1.dout_2_0_i_0_a2_1[1] ), .F1(\rom1.N_939_0 ));
  rom1_SLICE_251 \rom1.SLICE_251 ( .D1(\rom_addr[5] ), 
    .C1(\rom1.dout_RNO_3[8] ), .B1(\rom_addr[0] ), .A1(\rom1.N_942_0 ), 
    .D0(\rom_addr[4] ), .C0(\rom_addr[3] ), .B0(\rom_addr[1] ), 
    .A0(\rom_addr[0] ), .F0(\rom1.dout_RNO_3[8] ), .F1(\rom1.dout_2_0_i_1[8] ));
  rom1_SLICE_253 \rom1.SLICE_253 ( .D1(\rom1.N_945_0 ), .C1(\rom1.N_935_0 ), 
    .B1(\rom_addr[0] ), .A1(\rom_addr[5] ), .D0(\rom_addr[3] ), 
    .C0(\rom_addr[1] ), .F0(\rom1.N_935_0 ), .F1(\rom1.dout_2_0_i_0_o7_x0[9] ));
  rom1_SLICE_254 \rom1.SLICE_254 ( .D1(\rom_addr[0] ), .C1(\rom_addr[5] ), 
    .D0(\rom_addr[5] ), .C0(\rom_addr[1] ), .B0(\rom_addr[3] ), 
    .A0(\rom_addr[2] ), .F0(\rom1.N_945_0 ), .F1(\rom1.dout_RNO_0[7] ));
  rom1_SLICE_255 \rom1.SLICE_255 ( .DI1(\config_1.rom_addr_esr_RNO[6] ), 
    .D1(\config_1.un1_rom_addr_ac0_9_out_0 ), .C1(\config_1.FSM_state[0] ), 
    .B1(\config_1.N_96 ), .A1(\rom_addr[6] ), .D0(\rom_addr[4] ), 
    .C0(\rom_addr[7] ), .B0(\rom_addr[6] ), .A0(\rom_addr[3] ), 
    .CE(\config_1.timer_0_sqmuxa_d_0_0_0 ), 
    .LSR(\config_1.FSM_state_RNI5NH1_0[0] ), .CLK(clk_25MHz_c), 
    .Q1(\rom_addr[6] ), .F0(\rom1.dout_2_9dflt_0 ), 
    .F1(\config_1.rom_addr_esr_RNO[6] ));
  rom1_SLICE_256 \rom1.SLICE_256 ( .D1(\rom1.dout_2_9dflt_1 ), 
    .C1(\rom1.N_942_0 ), .B1(\rom_addr[3] ), .A1(\rom1.dout_2_9dflt_0 ), 
    .D0(\rom_addr[1] ), .B0(\rom_addr[2] ), .F0(\rom1.N_942_0 ), 
    .F1(\rom1.dout_2_9dflt_4 ));
  rom1_SLICE_257 \rom1.SLICE_257 ( .D1(\rom_addr[3] ), 
    .C1(\rom1.dout_2_0dflt_0 ), .B1(\rom_addr[1] ), .A1(\rom_addr[2] ), 
    .D0(\rom_addr[6] ), .C0(\rom_addr[7] ), .B0(\rom_addr[2] ), 
    .A0(\rom_addr[5] ), .F0(\rom1.dout_2_0dflt_0 ), 
    .F1(\rom1.dout_2_14dflt_1 ));
  rom1_SLICE_259 \rom1.SLICE_259 ( .D1(\rom_addr[4] ), .C1(\rom1.N_953_0 ), 
    .B1(\rom_addr[5] ), .A1(\rom_addr[3] ), .D0(\rom_addr[1] ), 
    .C0(\rom_addr[4] ), .B0(\rom_addr[2] ), .F0(\rom1.N_953_0 ), 
    .F1(\rom1.dout_2_11dflt_1 ));
  rom1_SLICE_261 \rom1.SLICE_261 ( .D1(\rom_addr[0] ), 
    .C1(\rom1.dout_2_0_i_0_a7_1[13] ), .B1(\rom1.N_935_0 ), .A1(\rom_addr[4] ), 
    .D0(\rom_addr[5] ), .C0(\rom_addr[0] ), .A0(\rom_addr[2] ), 
    .F0(\rom1.dout_2_0_i_0_a7_1[13] ), .F1(\rom1.N_951_0 ));
  rom1_SLICE_263 \rom1.SLICE_263 ( .C1(\rom1.N_936_0 ), 
    .A1(\rom1.dout_2_0_i_0_a7_2[5] ), .D0(\rom_addr[4] ), .C0(\rom_addr[5] ), 
    .B0(\rom_addr[3] ), .A0(\rom_addr[1] ), .F0(\rom1.N_936_0 ), 
    .F1(\rom1.dout_2_0_i_1[10] ));
  rom1_SLICE_264 \rom1.SLICE_264 ( .D1(\rom_addr[2] ), 
    .C1(\rom1.dout_2_adflt ), .B1(\rom1.N_935_0 ), .A1(\rom_addr[5] ), 
    .D0(\rom_addr[4] ), .C0(\rom1.N_935_0 ), .B0(\rom1.N_936_0 ), 
    .A0(\rom_addr[2] ), .F0(\rom1.N_938_0 ), .F1(\rom1.dout_2_7dflt_0 ));
  config_1_SLICE_265 \config_1.SLICE_265 ( .D1(\config_1.FSM_state[0] ), 
    .C1(\config_1.timer_0_sqmuxa_d_0 ), .A1(TEST_c), .D0(\config_1.N_96 ), 
    .C0(\config_1.N_119 ), .B0(SCCB_ready), .A0(\config_1.FSM_state[0] ), 
    .F0(\config_1.timer_0_sqmuxa_d_0 ), .F1(\config_1.timer_0_sqmuxa_d_0_0_0 ));
  vga_inst_SLICE_267 \vga_inst.SLICE_267 ( .D1(\vga_inst.grayscale_value[1] ), 
    .C1(\vga_inst.un9_RGB ), .B1(\vga_inst.valid ), 
    .A1(\vga_inst.un2_spram_addr ), .D0(\debug_state_c[0] ), 
    .C0(\vga_inst.valid ), .B0(\fsm_state[2] ), .A0(\debug_state_c[1] ), 
    .F0(\vga_inst.un9_RGB ), .F1(\RGB_c[3] ));
  SLICE_269 SLICE_269( .D0(vga_read_address_cry_8), .C0(O9), 
    .F0(\vga_read_address[15] ));
  vga_inst_SLICE_270 \vga_inst.SLICE_270 ( .D1(\vga_read_address[14] ), 
    .C1(\vga_inst.N_266 ), .B1(\vga_inst.N_45 ), .D0(\data_out1[15] ), 
    .C0(\data_out1[7] ), .B0(\vga_inst.col_Z[1] ), .A0(\vga_read_address[15] ), 
    .F0(\vga_inst.N_266 ), .F1(\vga_inst.grayscale_value[1] ));
  fsm_state_cnst_1_0__SLICE_271 \fsm_state_cnst_1_0_.SLICE_271 ( 
    .D1(\debug_state_c[1] ), .C1(\vga_inst.fsm_state19_8 ), .B1(fsm_state19_x), 
    .A1(\fsm_state[2] ), .D0(\address_counter[3] ), .C0(\address_counter[2] ), 
    .B0(\address_counter[1] ), .A0(\address_counter[0] ), 
    .F0(\vga_inst.fsm_state19_8 ), .F1(\fsm_state_e_1[0] ));
  SLICE_273 SLICE_273( .D1(SCCB_ready), .C1(CAMERA_VSYNC_IN_c), 
    .B1(\fsm_state[2] ), .A1(\debug_state_c[1] ), .D0(\debug_state_c[0] ), 
    .C0(fsm_state19), .B0(\debug_state_c[1] ), .A0(\fsm_state[2] ), 
    .F0(\fsm_state_RNO_0[1] ), .F1(\fsm_state_e_1_0[0] ));
  vga_inst_SLICE_274 \vga_inst.SLICE_274 ( .D1(\vga_inst.fsm_state19_sx ), 
    .C1(\vga_inst.fsm_state19_9 ), .B1(\vga_inst.fsm_state19_11 ), 
    .A1(\vga_inst.fsm_state19_10 ), .D0(\address_counter[7] ), 
    .C0(\address_counter[6] ), .B0(\address_counter[5] ), 
    .A0(\address_counter[4] ), .F0(\vga_inst.fsm_state19_9 ), .F1(fsm_state19));
  SLICE_275 SLICE_275( .D1(\debug_state_c[0] ), .C1(\fsm_state[2] ), 
    .D0(\debug_state_c[1] ), .C0(start_c), .B0(start_prev), 
    .A0(un1_start_config9_1_0), .F0(\fsm_state_e_1_1[0] ), 
    .F1(un1_start_config9_1_0));
  rom1_SLICE_277 \rom1.SLICE_277 ( .D1(\rom_addr[0] ), 
    .C1(\rom1.dout_2_0_i_0_a2[3] ), .B1(\rom1.N_936_0 ), .A1(\rom_addr[2] ), 
    .D0(\rom_addr[4] ), .C0(\rom_addr[3] ), .B0(\rom_addr[1] ), 
    .F0(\rom1.dout_2_0_i_0_a2[3] ), .F1(\rom1.dout_2_14dflt_3 ));
  rom1_SLICE_279 \rom1.SLICE_279 ( .D1(\rom_addr[6] ), 
    .C1(\rom1.dout_RNO_3[2] ), .A1(\rom_addr[7] ), .D0(\rom_addr[2] ), 
    .C0(\rom_addr[4] ), .B0(\rom_addr[0] ), .A0(\rom_addr[5] ), 
    .F0(\rom1.dout_RNO_3[2] ), .F1(\rom1.dout_2_2dflt_0 ));
  rom1_SLICE_282 \rom1.SLICE_282 ( .D1(\rom_addr[2] ), .C1(\rom_addr[4] ), 
    .B1(\rom_addr[0] ), .A1(\rom1.dout_2_adflt ), .D0(\rom_addr[4] ), 
    .C0(\rom_addr[3] ), .B0(\rom_addr[2] ), .A0(\rom_addr[0] ), 
    .F0(\rom1.dout_2_0_i_0_a7_2[5] ), .F1(\rom1.dout_2_8dflt_0 ));
  rom1_SLICE_283 \rom1.SLICE_283 ( .D1(\rom1.dout_2_3dflt_4_1 ), 
    .C1(\rom1.dout_RNO_1[3] ), .B1(\rom1.N_944_0 ), .A1(\rom1.dout_2_adflt ), 
    .D0(\rom_addr[0] ), .C0(\rom_addr[4] ), .B0(\rom_addr[2] ), 
    .A0(\rom_addr[5] ), .F0(\rom1.dout_RNO_1[3] ), .F1(\rom1.dout_2_3dflt_4 ));
  rom1_SLICE_285 \rom1.SLICE_285 ( .D1(\rom_addr[1] ), .C1(\rom1.N_949_0 ), 
    .B1(\rom_addr[2] ), .A1(\rom_addr[4] ), .C0(\rom_addr[3] ), 
    .A0(\rom_addr[0] ), .F0(\rom1.N_949_0 ), .F1(\rom1.dout_RNO_0[5] ));
  rom1_SLICE_286 \rom1.SLICE_286 ( .D1(\rom1.N_942_0 ), 
    .C1(\rom1.dout_RNO_4[2] ), .B1(\rom1.N_949_0 ), .A1(\rom1.N_936_0 ), 
    .D0(\rom_addr[4] ), .C0(\rom_addr[3] ), .B0(\rom_addr[1] ), 
    .A0(\rom_addr[2] ), .F0(\rom1.dout_RNO_4[2] ), .F1(\rom1.dout_2_2dflt_3 ));
  rom1_SLICE_288 \rom1.SLICE_288 ( .D1(\rom1.dout_2_adflt ), 
    .C1(\rom1.N_942_0 ), .B1(\rom_addr[3] ), .A1(\rom_addr[0] ), 
    .D0(\rom1.N_942_0 ), .C0(\rom1.dout_2_adflt ), .B0(\rom_addr[0] ), 
    .A0(\rom_addr[3] ), .F0(\rom1.dout_2_1dflt_0 ), .F1(\rom1.dout_2_6dflt_0 ));
  rom1_SLICE_289 \rom1.SLICE_289 ( .D1(\rom_addr[3] ), .C1(\rom_addr[1] ), 
    .B1(\rom1.N_940_0 ), .A1(\rom_addr[4] ), .D0(\rom_addr[2] ), 
    .C0(\rom_addr[0] ), .F0(\rom1.N_940_0 ), .F1(\rom1.dout_RNO_0[1] ));
  rom1_SLICE_292 \rom1.SLICE_292 ( .D1(\rom_addr[0] ), .C1(\rom_addr[4] ), 
    .B1(\rom1.N_935_0 ), .A1(\rom_addr[5] ), .D0(\rom_addr[4] ), 
    .C0(\rom1.N_935_0 ), .B0(\rom_addr[5] ), .A0(\rom_addr[0] ), 
    .F0(\rom1.N_964_0 ), .F1(\rom1.dout_2_2dflt_4 ));
  rom1_SLICE_293 \rom1.SLICE_293 ( .D1(\rom_addr[3] ), 
    .C1(\rom1.dout_2_adflt ), .B1(\rom_addr[1] ), .A1(\rom_addr[2] ), 
    .D0(\rom_addr[6] ), .C0(\rom_addr[7] ), .F0(\rom1.dout_2_adflt ), 
    .F1(\rom1.dout_2_15dflt_0 ));
  rom1_SLICE_295 \rom1.SLICE_295 ( .D1(\rom_addr[5] ), 
    .C1(\rom1.dout_RNO_3[11] ), .B1(\rom_addr[1] ), .D0(\rom_addr[4] ), 
    .C0(\rom_addr[0] ), .A0(\rom_addr[2] ), .F0(\rom1.dout_RNO_3[11] ), 
    .F1(\rom1.dout_RNO_0[11] ));
  rom1_SLICE_297 \rom1.SLICE_297 ( .D1(\rom_addr[5] ), 
    .C1(\rom1.dout_2_4dflt_0 ), .B1(\rom_addr[3] ), .A1(\rom_addr[2] ), 
    .D0(\rom_addr[4] ), .C0(\rom_addr[7] ), .B0(\rom_addr[6] ), 
    .A0(\rom_addr[1] ), .F0(\rom1.dout_2_4dflt_0 ), .F1(\rom1.dout_2_4dflt_1 ));
  rom1_SLICE_299 \rom1.SLICE_299 ( .D1(\rom_addr[3] ), .C1(\rom_addr[0] ), 
    .B1(\rom_addr[1] ), .A1(\rom_addr[2] ), .D0(\rom_addr[0] ), 
    .C0(\rom_addr[3] ), .B0(\rom_addr[2] ), .A0(\rom_addr[1] ), 
    .F0(\rom1.dout_RNO_2[0] ), .F1(\rom1.dout_2_3dflt_4_1 ));
  rom1_SLICE_300 \rom1.SLICE_300 ( .D1(\rom_addr[1] ), .C1(\rom_addr[2] ), 
    .B1(\rom_addr[0] ), .A1(\rom_addr[4] ), .D0(\rom1.dout_2_0_i_0_a7[9] ), 
    .C0(\rom1.dout_RNO_2[0] ), .A0(\rom1.dout_2_0dflt_0 ), 
    .F0(\rom1.dout_2_0dflt_3 ), .F1(\rom1.dout_2_0_i_0_a7[9] ));
  rom1_SLICE_301 \rom1.SLICE_301 ( .D1(\rom1.dout_2_adflt ), 
    .C1(\rom1.dout_RNO_3[10] ), .B1(\rom1.N_935_0 ), .A1(\rom_addr[5] ), 
    .D0(\rom_addr[0] ), .C0(\rom_addr[3] ), .B0(\rom_addr[2] ), 
    .A0(\rom_addr[1] ), .F0(\rom1.dout_RNO_3[10] ), 
    .F1(\rom1.dout_2_10dflt_2 ));
  rom1_SLICE_303 \rom1.SLICE_303 ( .D1(\rom1.N_953_0 ), 
    .C1(\rom1.dout_2_0_i_0_a7[1] ), .B1(\rom_addr[3] ), 
    .A1(\rom1.dout_2_adflt ), .D0(\rom_addr[1] ), .C0(\rom_addr[4] ), 
    .B0(\rom_addr[2] ), .F0(\rom1.dout_2_0_i_0_a7[1] ), 
    .F1(\rom1.dout_2_13dflt_1 ));
  config_1_SLICE_305 \config_1.SLICE_305 ( .D1(\config_1.FSM_state20_2 ), 
    .C1(\config_1.FSM_state_RNO_2[1] ), .B1(\rom_dout[12] ), 
    .A1(\config_1.FSM_state20_9 ), .D0(\rom_dout[14] ), .C0(\rom_dout[13] ), 
    .A0(\rom_dout[15] ), .F0(\config_1.FSM_state_RNO_2[1] ), 
    .F1(\config_1.FSM_state_RNO_1[1] ));
  config_1_SLICE_306 \config_1.SLICE_306 ( .D0(\rom_dout[7] ), 
    .C0(\rom_dout[5] ), .B0(\rom_dout[4] ), .A0(\rom_dout[6] ), 
    .F0(\config_1.FSM_state20_9 ));
  config_1_SLICE_307 \config_1.SLICE_307 ( .D0(\config_1.FSM_state19_4_4 ), 
    .C0(\config_1.FSM_state_RNO_1[1] ), .B0(TEST_c), .A0(SCCB_ready), 
    .F0(\config_1.FSM_state_2_sqmuxa ));
  config_1_SLICE_308 \config_1.SLICE_308 ( .D1(\config_1.FSM_state19_4_5 ), 
    .C1(\config_1.FSM_state19_4_4 ), .B1(\config_1.FSM_state20_9 ), 
    .A1(\config_1.FSM_state20_2 ), .D0(\rom_dout[8] ), .C0(\rom_dout[9] ), 
    .B0(\rom_dout[10] ), .A0(\rom_dout[11] ), .F0(\config_1.FSM_state19_4_4 ), 
    .F1(\config_1.N_119 ));
  config_1_SLICE_309 \config_1.SLICE_309 ( .D1(\rom_addr[0] ), 
    .C1(\rom_addr[1] ), .B1(\rom_addr[2] ), 
    .D0(\config_1.un1_rom_addr_ac0_9_s_0_1 ), 
    .C0(\config_1.un1_rom_addr_ac0_3_out ), .B0(\rom_addr[4] ), 
    .A0(\rom_addr[5] ), .F0(\config_1.un1_rom_addr_ac0_9_out_0 ), 
    .F1(\config_1.un1_rom_addr_ac0_3_out ));
  config_1_SLICE_311 \config_1.SLICE_311 ( .D1(\config_1.N_119 ), 
    .C1(\config_1.un1_FSM_state_3 ), .B1(\config_1.N_96 ), .A1(SCCB_ready), 
    .D0(\config_1.FSM_state[0] ), .C0(TEST_c), .F0(\config_1.un1_FSM_state_3 ), 
    .F1(\config_1.timer_2_sqmuxa ));
  config_1_SLICE_313 \config_1.SLICE_313 ( .D0(\config_1.timer[27] ), 
    .C0(\config_1.timer[23] ), .B0(\config_1.timer[22] ), 
    .A0(\config_1.timer[21] ), .F0(\config_1.un32_FSM_state_0_sqmuxa_20 ));
  config_1_SLICE_314 \config_1.SLICE_314 ( 
    .D1(\config_1.un32_FSM_state_0_sqmuxa_26 ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa_19 ), 
    .B1(\config_1.un32_FSM_state_0_sqmuxa_20 ), 
    .A1(\config_1.un32_FSM_state_0_sqmuxa_27 ), .D0(\config_1.timer[20] ), 
    .C0(\config_1.timer[18] ), .B0(\config_1.timer[19] ), 
    .A0(\config_1.timer[17] ), .F0(\config_1.un32_FSM_state_0_sqmuxa_19 ), 
    .F1(\config_1.un32_FSM_state_0_sqmuxa ));
  config_1_SLICE_315 \config_1.SLICE_315 ( .D0(\config_1.timer[15] ), 
    .C0(\config_1.timer[16] ), .B0(\config_1.timer[14] ), 
    .A0(\config_1.timer[13] ), .F0(\config_1.un32_FSM_state_0_sqmuxa_18 ));
  config_1_SLICE_316 \config_1.SLICE_316 ( 
    .D1(\config_1.un32_FSM_state_0_sqmuxa_16 ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa_15 ), 
    .B1(\config_1.un32_FSM_state_0_sqmuxa_17 ), 
    .A1(\config_1.un32_FSM_state_0_sqmuxa_18 ), .D0(\config_1.timer[6] ), 
    .C0(\config_1.timer[2] ), .B0(\config_1.timer[4] ), 
    .A0(\config_1.timer[1] ), .F0(\config_1.un32_FSM_state_0_sqmuxa_15 ), 
    .F1(\config_1.un32_FSM_state_0_sqmuxa_27 ));
  config_1_SLICE_317 \config_1.SLICE_317 ( .D1(\config_1.FSM_state19_4_5 ), 
    .C1(\config_1.FSM_state19_2 ), .B1(\config_1.FSM_state19_4_4 ), 
    .A1(\config_1.FSM_state20_9 ), .D0(\rom_dout[3] ), .C0(\rom_dout[1] ), 
    .B0(\rom_dout[2] ), .A0(\rom_dout[0] ), .F0(\config_1.FSM_state19_2 ), 
    .F1(\config_1.N_96 ));
  config_1_SLICE_319 \config_1.SLICE_319 ( .D1(\rom_dout[15] ), 
    .C1(\rom_dout[14] ), .B1(\rom_dout[13] ), .A1(\rom_dout[12] ), 
    .D0(\rom_dout[2] ), .C0(\rom_dout[0] ), .B0(\rom_dout[1] ), 
    .A0(\rom_dout[3] ), .F0(\config_1.FSM_state20_2 ), 
    .F1(\config_1.FSM_state19_4_5 ));
  config_1_SLICE_321 \config_1.SLICE_321 ( .D1(\config_1.timer[24] ), 
    .C1(\config_1.un32_FSM_state_0_sqmuxa_22 ), .B1(\config_1.timer[28] ), 
    .A1(TEST_c), .D0(\config_1.FSM_state[0] ), .C0(\config_1.timer[25] ), 
    .B0(\config_1.timer[0] ), .A0(\config_1.timer[26] ), 
    .F0(\config_1.un32_FSM_state_0_sqmuxa_22 ), 
    .F1(\config_1.un32_FSM_state_0_sqmuxa_26 ));
  SCCB1_SLICE_323 \SCCB1.SLICE_323 ( .D0(\SCCB1.un73_FSM_state_0_sqmuxacf1 ), 
    .C0(\SCCB1.timer_RNIM5CP3_0[16] ), .F0(\SCCB1.timer_RNIHQQO6[0] ));
  SCCB1_SLICE_324 \SCCB1.SLICE_324 ( .D1(\SCCB1.un68_FSM_state_14 ), 
    .C1(\SCCB1.N_5_i ), .B1(\SCCB1.un68_FSM_state_20 ), 
    .A1(\SCCB1.un68_FSM_state_15 ), .D0(\SCCB1.FSM_state[2] ), 
    .C0(\SCCB1.FSM_state_fast[1] ), .B0(\SCCB1.FSM_state_fast[0] ), 
    .A0(\SCCB1.FSM_state_fast[3] ), .F0(\SCCB1.N_5_i ), 
    .F1(\SCCB1.un73_FSM_state_0_sqmuxacf1 ));
  SCCB1_SLICE_325 \SCCB1.SLICE_325 ( .D1(\SCCB1.un68_FSM_state_20 ), 
    .C1(\SCCB1.timer_RNIFMTA[1] ), .B1(\SCCB1.timer[0] ), 
    .A1(\SCCB1.un68_FSM_state_15 ), .D0(\SCCB1.timer[3] ), 
    .C0(\SCCB1.timer[1] ), .B0(\SCCB1.timer[2] ), 
    .F0(\SCCB1.timer_RNIFMTA[1] ), .F1(\SCCB1.N_198_i_1 ));
  SCCB1_SLICE_326 \SCCB1.SLICE_326 ( .D1(\SCCB1.timer[23] ), 
    .C1(\SCCB1.timer[22] ), .B1(\SCCB1.timer[0] ), .A1(\SCCB1.timer[1] ), 
    .D0(\SCCB1.timer[22] ), .C0(\SCCB1.timer[23] ), .B0(\SCCB1.timer[21] ), 
    .A0(\SCCB1.timer[20] ), .F0(\SCCB1.un68_FSM_state_15 ), 
    .F1(\SCCB1.g0_i_a3_0_9 ));
  SCCB1_SLICE_327 \SCCB1.SLICE_327 ( .D1(\SCCB1.un68_FSM_state_18 ), 
    .C1(\SCCB1.un68_FSM_state_16 ), .B1(\SCCB1.un68_FSM_state_17 ), 
    .A1(\SCCB1.un68_FSM_state_19 ), .D0(\SCCB1.timer[17] ), 
    .C0(\SCCB1.timer[16] ), .B0(\SCCB1.timer[19] ), .A0(\SCCB1.timer[18] ), 
    .F0(\SCCB1.un68_FSM_state_16 ), .F1(\SCCB1.timer_RNIM5CP3_0[16] ));
  SCCB1_SLICE_329 \SCCB1.SLICE_329 ( .D1(\SCCB1.FSM_state[3] ), 
    .C1(\SCCB1.FSM_state_cnst_1_i_1[0] ), .B1(\SCCB1.FSM_state[2] ), 
    .A1(\SCCB1.g0_i_m2_1_0_1 ), .C0(\SCCB1.FSM_state_3_rep1 ), 
    .A0(\SCCB1.FSM_state_0_rep1 ), .F0(\SCCB1.FSM_state_cnst_1_i_1[0] ), 
    .F1(\SCCB1.g0_i_m2_1_0 ));
  SCCB1_SLICE_331 \SCCB1.SLICE_331 ( .D1(\SCCB1.FSM_state[3] ), 
    .C1(\SCCB1.un68_FSM_state_25 ), .B1(\SCCB1.FSM_state[2] ), 
    .A1(\SCCB1.N_198_i_1 ), .D0(\SCCB1.un68_FSM_state_19 ), 
    .C0(\SCCB1.un68_FSM_state_18 ), .B0(\SCCB1.un68_FSM_state_16 ), 
    .A0(\SCCB1.un68_FSM_state_17 ), .F0(\SCCB1.un68_FSM_state_25 ), 
    .F1(\SCCB1.N_198_i ));
  SCCB1_SLICE_333 \SCCB1.SLICE_333 ( .D1(\SCCB1.timer[17] ), 
    .C1(\SCCB1.g0_i_a3_0_2 ), .B1(\SCCB1.g0_i_a3_0_9 ), .A1(\SCCB1.timer[16] ), 
    .D0(\SCCB1.timer[3] ), .C0(\SCCB1.timer[2] ), .F0(\SCCB1.g0_i_a3_0_2 ), 
    .F1(\SCCB1.g0_i_a3_0_14 ));
  SCCB1_SLICE_335 \SCCB1.SLICE_335 ( .D1(\SCCB1.un68_FSM_state_20 ), 
    .C1(\SCCB1.g0_i_a3_0_10 ), .B1(\SCCB1.FSM_state[1] ), 
    .A1(\SCCB1.FSM_state[2] ), .D0(\SCCB1.timer[21] ), .C0(\SCCB1.timer[20] ), 
    .B0(\SCCB1.FSM_return_state[3] ), .A0(\SCCB1.FSM_state_3_rep1 ), 
    .F0(\SCCB1.g0_i_a3_0_10 ), .F1(\SCCB1.g0_i_a3_0_15 ));
  SCCB1_SLICE_337 \SCCB1.SLICE_337 ( .D1(\SCCB1.un68_FSM_state_18 ), 
    .C1(\SCCB1.g0_i_a3_0_7 ), .B1(\SCCB1.un68_FSM_state_17 ), 
    .A1(\SCCB1.un68_FSM_state_19 ), .D0(\SCCB1.timer[19] ), 
    .C0(\SCCB1.timer[18] ), .B0(\SCCB1.FSM_state_0_rep1 ), 
    .F0(\SCCB1.g0_i_a3_0_7 ), .F1(\SCCB1.g0_i_a3_0_16 ));
  SCCB1_SLICE_339 \SCCB1.SLICE_339 ( .D1(\SCCB1.un68_FSM_state_19 ), 
    .C1(\SCCB1.un68_FSM_state_17 ), .B1(\SCCB1.un68_FSM_state_20 ), 
    .A1(\SCCB1.un68_FSM_state_18 ), .D0(\SCCB1.timer[27] ), 
    .C0(\SCCB1.timer[26] ), .B0(\SCCB1.timer[25] ), .A0(\SCCB1.timer[24] ), 
    .F0(\SCCB1.un68_FSM_state_17 ), .F1(\SCCB1.g0_i_m2_1_a5_2_13 ));
  SCCB1_SLICE_341 \SCCB1.SLICE_341 ( .D0(\SCCB1.FSM_state_3_rep1 ), 
    .C0(\SCCB1.FSM_return_state[0] ), .B0(\SCCB1.FSM_state_1_rep1 ), 
    .A0(\SCCB1.FSM_state[2] ), .F0(\SCCB1.g0_i_m2_1_a5_2_8 ));
  SCCB1_SLICE_342 \SCCB1.SLICE_342 ( .D1(\SCCB1.un68_FSM_state_15 ), 
    .C1(\SCCB1.g0_i_m2_1_a5_2_6 ), .B1(\SCCB1.g0_i_m2_1_a5_2_7 ), 
    .A1(\SCCB1.g0_i_m2_1_a5_2_8 ), .D0(\SCCB1.timer[16] ), 
    .C0(\SCCB1.timer[17] ), .B0(\SCCB1.timer[19] ), .A0(\SCCB1.timer[18] ), 
    .F0(\SCCB1.g0_i_m2_1_a5_2_6 ), .F1(\SCCB1.g0_i_m2_1_a5_2_14 ));
  SCCB1_SLICE_343 \SCCB1.SLICE_343 ( .D1(\SCCB1.FSM_state[1] ), 
    .C1(\SCCB1.FSM_state[3] ), .B1(\SCCB1.FSM_state[0] ), 
    .D0(\SCCB1.FSM_state[3] ), .C0(\SCCB1.FSM_state[1] ), 
    .B0(\SCCB1.FSM_state_cnst_1_i_1[0] ), .A0(\SCCB1.un13_SIOD_oe ), 
    .F0(\SCCB1.N_9 ), .F1(\SCCB1.un1_FSM_state_18_0_i ));
  SCCB1_SLICE_344 \SCCB1.SLICE_344 ( .DI1(\SCCB1.byte_index_3[3] ), 
    .D1(\SCCB1.un1_byte_index_c2 ), .C1(\SCCB1.byte_index[3] ), 
    .B1(\SCCB1.byte_index[2] ), .D0(\SCCB1.byte_index[3] ), 
    .C0(\SCCB1.byte_index[2] ), .B0(\SCCB1.byte_index[1] ), 
    .A0(\SCCB1.byte_index[0] ), .LSR(\SCCB1.FSM_state_cnst_1_i ), 
    .CLK(clk_25MHz_c), .Q1(\SCCB1.byte_index[3] ), .F0(\SCCB1.un13_SIOD_oe ), 
    .F1(\SCCB1.byte_index_3[3] ));
  SCCB1_SLICE_345 \SCCB1.SLICE_345 ( .D1(\SCCB1.un68_FSM_state_17 ), 
    .C1(\SCCB1.un68_FSM_state_19 ), .B1(\SCCB1.un68_FSM_state_20 ), 
    .A1(\SCCB1.un68_FSM_state_18 ), .D0(\SCCB1.timer[11] ), 
    .C0(\SCCB1.timer[10] ), .B0(\SCCB1.timer[8] ), .A0(\SCCB1.timer[9] ), 
    .F0(\SCCB1.un68_FSM_state_19 ), .F1(\SCCB1.g0_9 ));
  SCCB1_SLICE_346 \SCCB1.SLICE_346 ( .D0(\SCCB1.timer[15] ), 
    .C0(\SCCB1.timer[14] ), .B0(\SCCB1.timer[13] ), .A0(\SCCB1.timer[12] ), 
    .F0(\SCCB1.un68_FSM_state_18 ));
  SCCB1_SLICE_347 \SCCB1.SLICE_347 ( .DI1(\SCCB1.FSM_state_2_rep1 ), 
    .D1(\SCCB1.N_9 ), .C1(\SCCB1.g0_i_m2_1_a5_2_13 ), .B1(\SCCB1.g0_i_m2_1_0 ), 
    .A1(\SCCB1.g0_i_m2_1_a5_2_14 ), .D0(\SCCB1.FSM_state_3_rep1 ), 
    .C0(\SCCB1.FSM_state_1_rep1 ), .B0(\SCCB1.FSM_state_0_rep1 ), 
    .A0(\SCCB1.FSM_state[2] ), .CLK(clk_25MHz_c), 
    .Q1(\SCCB1.FSM_state_0_rep1 ), .F0(\SCCB1.g0_4 ), 
    .F1(\SCCB1.FSM_state_2_rep1 ));
  SCCB1_SLICE_348 \SCCB1.SLICE_348 ( .D1(\SCCB1.un68_FSM_state_15 ), 
    .C1(\SCCB1.g0_3 ), .B1(\SCCB1.un68_FSM_state_14 ), .A1(\SCCB1.g0_4 ), 
    .D0(\SCCB1.timer[16] ), .C0(\SCCB1.timer[17] ), .B0(\SCCB1.timer[19] ), 
    .A0(\SCCB1.timer[18] ), .F0(\SCCB1.g0_3 ), .F1(\SCCB1.g0_10 ));
  SCCB1_SLICE_349 \SCCB1.SLICE_349 ( .D1(\SCCB1.un1_FSM_state_9 ), 
    .C1(\SCCB1.byte_index27_0 ), .B1(\SCCB1.FSM_state[1] ), 
    .A1(\SCCB1.un1_FSM_state_5 ), .D0(\SCCB1.FSM_state_1_rep1 ), 
    .C0(\SCCB1.FSM_state_3_rep1 ), .B0(\SCCB1.FSM_state[2] ), 
    .A0(\SCCB1.FSM_state_0_rep1 ), .F0(\SCCB1.byte_index27_0 ), 
    .F1(\SCCB1.FSM_state_e_1_0[1] ));
  SCCB1_SLICE_351 \SCCB1.SLICE_351 ( .DI1(\SCCB1.FSM_state_1_rep1_0 ), 
    .D1(\SCCB1.g0_9 ), .C1(\SCCB1.g0_10 ), .B1(\SCCB1.FSM_return_state[1] ), 
    .A1(\SCCB1.FSM_state_e_1_0[1] ), .D0(\SCCB1.FSM_state_3_rep1 ), 
    .C0(\SCCB1.FSM_state_1_rep1 ), .B0(\SCCB1.FSM_state_0_rep1 ), 
    .A0(\SCCB1.FSM_state[2] ), .CLK(clk_25MHz_c), 
    .Q1(\SCCB1.FSM_state_1_rep1 ), .F0(\SCCB1.un1_FSM_state_9 ), 
    .F1(\SCCB1.FSM_state_1_rep1_0 ));
  SCCB1_SLICE_352 \SCCB1.SLICE_352 ( .D1(\SCCB1.FSM_state_3_rep1 ), 
    .C1(\SCCB1.FSM_state_0_rep1 ), .B1(\SCCB1.FSM_state[2] ), 
    .D0(\SCCB1.byte_index[1] ), .C0(\SCCB1.FSM_state_cnst_1 ), 
    .B0(\SCCB1.un1_FSM_state_9 ), .A0(\SCCB1.byte_index[0] ), 
    .F0(\SCCB1.un1_byte_index_c2 ), .F1(\SCCB1.FSM_state_cnst_1 ));
  SCCB1_SLICE_353 \SCCB1.SLICE_353 ( .D1(SCCB_start), 
    .C1(\SCCB1.FSM_state_1_rep1_RNI4J0M ), .D0(\SCCB1.FSM_state[0] ), 
    .C0(\SCCB1.FSM_state[3] ), .B0(\SCCB1.FSM_state_1_rep1 ), 
    .A0(\SCCB1.FSM_state[2] ), .F0(\SCCB1.FSM_state_1_rep1_RNI4J0M ), 
    .F1(\SCCB1.latched_address_0_sqmuxa ));
  SCCB1_SLICE_355 \SCCB1.SLICE_355 ( .C1(\SCCB1.un1_FSM_state_5 ), 
    .A1(\SCCB1.byte_counter[0] ), .D0(\SCCB1.FSM_state_1_rep1 ), 
    .C0(\SCCB1.FSM_state_3_rep1 ), .B0(\SCCB1.FSM_state_0_rep1 ), 
    .A0(\SCCB1.FSM_state[2] ), .F0(\SCCB1.un1_FSM_state_5 ), .F1(\SCCB1.CO0 ));
  vga_inst_SLICE_357 \vga_inst.SLICE_357 ( .D1(pixel_valid_c), 
    .C1(\vga_inst.N_29_0 ), .B1(prev_pixel_valid), .A1(\fsm_state[2] ), 
    .D0(\debug_state_c[0] ), .C0(pixel_toggle), .B0(\debug_state_c[1] ), 
    .F0(\vga_inst.N_29_0 ), .F1(un1_start_config8_2_0));
  vga_inst_SLICE_359 \vga_inst.SLICE_359 ( .D1(\vga_inst.fsm_state19_11 ), 
    .C1(\vga_inst.fsm_state19_9_x ), .B1(\vga_inst.fsm_state19_10 ), 
    .A1(\address_counter[4] ), .D0(\address_counter[7] ), 
    .C0(\address_counter[6] ), .B0(\address_counter[5] ), 
    .F0(\vga_inst.fsm_state19_9_x ), .F1(fsm_state19_x));
  vga_inst_SLICE_360 \vga_inst.SLICE_360 ( .D1(\vga_read_address[13] ), 
    .C1(\vga_inst.un2_spram_addr ), .B1(\address_counter[13] ), 
    .D0(\address_counter[12] ), .C0(\address_counter[13] ), 
    .B0(\address_counter[8] ), .A0(\address_counter[10] ), 
    .F0(\vga_inst.fsm_state19_10 ), .F1(\spram_addr[13] ));
  vga_inst_SLICE_361 \vga_inst.SLICE_361 ( .D1(\vga_inst.col_Z[1] ), 
    .C1(\vga_inst.N_312 ), .B1(\vga_inst.N_310 ), .D0(\data_out2[15] ), 
    .C0(\data_out0[15] ), .B0(\vga_read_address[15] ), .F0(\vga_inst.N_312 ), 
    .F1(\vga_inst.N_45 ));
  vga_inst_SLICE_363 \vga_inst.SLICE_363 ( .D1(\vga_inst.N_311 ), 
    .C1(\vga_inst.N_313 ), .B1(\vga_inst.col_Z[1] ), .D0(\data_out2[14] ), 
    .C0(\data_out0[14] ), .B0(\vga_read_address[15] ), .F0(\vga_inst.N_313 ), 
    .F1(\vga_inst.N_309 ));
  vga_inst_SLICE_364 \vga_inst.SLICE_364 ( .D1(\vga_inst.un9_RGB ), 
    .C1(\vga_inst.grayscale_value[0] ), .B1(\vga_inst.valid ), 
    .A1(\vga_inst.un2_spram_addr ), .D0(\vga_read_address[14] ), 
    .C0(\vga_inst.N_309 ), .B0(\vga_inst.N_270 ), 
    .F0(\vga_inst.grayscale_value[0] ), .F1(\RGB_c[2] ));
  vga_inst_SLICE_365 \vga_inst.SLICE_365 ( .D1(\vga_inst.col_Z[1] ), 
    .C1(\vga_inst.m7_0 ), .B1(\fsm_state[2] ), .A1(\address_counter[1] ), 
    .D0(\debug_state_c[0] ), .C0(\debug_state_c[1] ), .F0(\vga_inst.m7_0 ), 
    .F1(N_80_mux_i));
  vga_inst_SLICE_367 \vga_inst.SLICE_367 ( .D1(\fsm_state[2] ), .C1(WR9), 
    .B1(\debug_state_c[1] ), .A1(\debug_state_c[0] ), .C0(pixel_valid_c), 
    .A0(prev_pixel_valid), .F0(WR9), .F1(un1_start_config8_0));
  vga_inst_SLICE_369 \vga_inst.SLICE_369 ( .D1(\vga_inst.m38_4 ), 
    .C1(\vga_inst.N_76_mux ), .B1(\row[8] ), .A1(\vga_inst.m38_5 ), 
    .D0(\row[3] ), .C0(\row[4] ), .F0(\vga_inst.N_76_mux ), .F1(VGA_VSYNC_0_i));
  vga_inst_SLICE_371 \vga_inst.SLICE_371 ( .D0(\col[8] ), .C0(\col[7] ), 
    .F0(\vga_inst.un10_validlt9_0 ));
  vga_inst_SLICE_372 \vga_inst.SLICE_372 ( .D1(\col[9] ), 
    .C1(\vga_inst.un5_validlt9 ), .B1(\vga_inst.un10_validlt9_0 ), 
    .A1(\row[9] ), .D0(\row[5] ), .C0(\row[6] ), .B0(\row[7] ), .A0(\row[8] ), 
    .F0(\vga_inst.un5_validlt9 ), .F1(\vga_inst.valid ));
  vga_inst_SLICE_373 \vga_inst.SLICE_373 ( .D1(\vga_inst.col_Z[5] ), 
    .C1(\col[6] ), .B1(\vga_inst.col_Z[4] ), .D0(\col[6] ), 
    .C0(\vga_inst.col_Z[4] ), .B0(\col[9] ), .A0(\col[7] ), 
    .F0(\vga_inst.col11_6 ), .F1(\vga_inst.un10_HSYNClt8 ));
  vga_inst_SLICE_374 \vga_inst.SLICE_374 ( .D1(\vga_inst.col_Z[5] ), 
    .C1(\vga_inst.col11_5 ), .B1(\vga_inst.col11_6 ), .A1(\vga_inst.col_Z[1] ), 
    .D0(\vga_inst.col_Z[0] ), .C0(\vga_inst.col_Z[2] ), .B0(\col[8] ), 
    .A0(\vga_inst.col_Z[3] ), .F0(\vga_inst.col11_5 ), .F1(\vga_inst.col11 ));
  vga_inst_SLICE_376 \vga_inst.SLICE_376 ( .D1(\vga_inst.un10_HSYNClt8 ), 
    .C1(\vga_inst.un5_HSYNClt8_0 ), .B1(\col[8] ), .A1(\col[9] ), 
    .D0(\col[6] ), .C0(\vga_inst.col_Z[5] ), .B0(\col[7] ), 
    .A0(\vga_inst.col_Z[4] ), .F0(\vga_inst.un5_HSYNClt8_0 ), .F1(VGA_HSYNC_c));
  vga_inst_SLICE_377 \vga_inst.SLICE_377 ( .D1(\vga_read_address[12] ), 
    .C1(\vga_inst.un2_spram_addr ), .A1(\address_counter[12] ), 
    .D0(\debug_state_c[0] ), .C0(\fsm_state[2] ), .B0(\debug_state_c[1] ), 
    .F0(\vga_inst.un2_spram_addr ), .F1(\spram_addr[12] ));
  rom1_SLICE_380 \rom1.SLICE_380 ( .D1(\rom_addr[3] ), .C1(\rom_addr[2] ), 
    .B1(\rom_addr[0] ), .A1(\rom_addr[1] ), .D0(\rom_addr[2] ), 
    .C0(\rom_addr[3] ), .B0(\rom_addr[1] ), .A0(\rom_addr[0] ), 
    .F0(\rom1.dout_2_9dflt_1 ), .F1(\rom1.dout_2_4dflt_2 ));
  rom1_SLICE_382 \rom1.SLICE_382 ( .DI1(\config_1.rom_addr_esr_RNO[2] ), 
    .D1(\config_1.timer_0_sqmuxa_3_0 ), .C1(\config_1.FSM_state[0] ), 
    .B1(\config_1.N_96 ), .A1(\rom_addr[2] ), .D0(\rom_addr[4] ), 
    .C0(\rom_addr[3] ), .B0(\rom_addr[2] ), .A0(\rom_addr[1] ), 
    .CE(\config_1.timer_0_sqmuxa_d_0_0_0 ), 
    .LSR(\config_1.FSM_state_RNI5NH1_0[0] ), .CLK(clk_25MHz_c), 
    .Q1(\rom_addr[2] ), .F0(\rom1.dout_RNO_0[12] ), 
    .F1(\config_1.rom_addr_esr_RNO[2] ));
  SCCB1_SLICE_383 \SCCB1.SLICE_383 ( .DI1(\SCCB1.FSM_state_fast_scalar ), 
    .D1(\SCCB1.g0_i_a3_0_15 ), .C1(\SCCB1.N_6_0 ), .B1(\SCCB1.g0_i_a3_0_14 ), 
    .A1(\SCCB1.g0_i_a3_0_16 ), .D0(\SCCB1.FSM_state[1] ), 
    .C0(\SCCB1.FSM_state[0] ), .B0(\SCCB1.FSM_state[3] ), 
    .A0(\SCCB1.FSM_state[2] ), .CLK(clk_25MHz_c), 
    .Q1(\SCCB1.FSM_state_fast[3] ), .F0(\SCCB1.N_6_0 ), 
    .F1(\SCCB1.FSM_state_fast_scalar ));
  SCCB1_SLICE_384 \SCCB1.SLICE_384 ( .D1(\SCCB1.FSM_state[0] ), 
    .C1(\SCCB1.FSM_state[1] ), .B1(\SCCB1.FSM_state[2] ), 
    .A1(\SCCB1.FSM_state[3] ), .D0(\SCCB1.FSM_state[1] ), 
    .C0(\SCCB1.FSM_state[0] ), .B0(\SCCB1.FSM_state[3] ), 
    .A0(\SCCB1.FSM_state[2] ), .F0(\SCCB1.timere_0_i ), 
    .F1(\SCCB1.FSM_state_cnst_1_0_0[2] ));
  SCCB1_SLICE_385 \SCCB1.SLICE_385 ( .D1(\SCCB1.timer[1] ), 
    .C1(\SCCB1.timer[3] ), .B1(\SCCB1.timer[0] ), .A1(\SCCB1.timer[2] ), 
    .D0(\SCCB1.timer[3] ), .C0(\SCCB1.timer[1] ), .B0(\SCCB1.timer[2] ), 
    .A0(\SCCB1.timer[0] ), .F0(\SCCB1.g0_i_m2_1_a5_2_7 ), 
    .F1(\SCCB1.un68_FSM_state_14 ));
  SCCB1_SLICE_390 \SCCB1.SLICE_390 ( .D1(\SCCB1.FSM_state[1] ), 
    .C1(\SCCB1.FSM_state[0] ), .B1(\SCCB1.FSM_state[3] ), 
    .A1(\SCCB1.FSM_state[2] ), .D0(\SCCB1.FSM_state[0] ), 
    .C0(\SCCB1.FSM_state[1] ), .B0(\SCCB1.FSM_state[2] ), 
    .A0(\SCCB1.FSM_state[3] ), .F0(\SCCB1.un1_FSM_state_21_0_i ), 
    .F1(\SCCB1.timer_RNO_0[0] ));
  SCCB1_SLICE_392 \SCCB1.SLICE_392 ( .D1(\SCCB1.FSM_state[1] ), 
    .C1(\SCCB1.FSM_state[0] ), .B1(\SCCB1.FSM_state[3] ), 
    .A1(\SCCB1.FSM_state[2] ), .D0(\SCCB1.FSM_state[0] ), 
    .C0(\SCCB1.FSM_state[1] ), .B0(\SCCB1.FSM_state[2] ), 
    .A0(\SCCB1.FSM_state[3] ), .F0(\SCCB1.un1_FSM_state_26_0 ), 
    .F1(\SCCB1.FSM_state_RNI6J0D_2[0] ));
  SCCB1_SLICE_394 \SCCB1.SLICE_394 ( .D1(\SCCB1.FSM_state[0] ), 
    .C1(\SCCB1.FSM_state[1] ), .B1(\SCCB1.FSM_state[3] ), 
    .A1(\SCCB1.FSM_state[2] ), .D0(\SCCB1.FSM_state[1] ), 
    .C0(\SCCB1.FSM_state[0] ), .B0(\SCCB1.FSM_state[2] ), 
    .A0(\SCCB1.FSM_state[3] ), .F0(\SCCB1.un1_FSM_state_22_0_i ), 
    .F1(\SCCB1.un1_FSM_state_29_0_1 ));
  rom1_SLICE_395 \rom1.SLICE_395 ( .D1(\rom_addr[5] ), .C1(\rom_addr[4] ), 
    .B1(\rom_addr[0] ), .D0(\rom_addr[4] ), .C0(\rom_addr[2] ), 
    .B0(\rom_addr[5] ), .A0(\rom_addr[0] ), .F0(\rom1.dout_RNO_0[10] ), 
    .F1(\rom1.N_937_0 ));
  rom1_SLICE_401 \rom1.SLICE_401 ( .D1(\rom1.N_940_0 ), .C1(\rom_addr[4] ), 
    .B1(\rom_addr[5] ), .A1(\rom1.N_935_0 ), .D0(\rom_addr[4] ), 
    .C0(\rom_addr[3] ), .B0(\rom1.N_940_0 ), .A0(\rom_addr[5] ), 
    .F0(\rom1.dout_2_0dflt_2 ), .F1(\rom1.dout_2_8dflt_2 ));
  config_1_SLICE_405 \config_1.SLICE_405 ( .DI1(\config_1.rom_addr_RNO[3] ), 
    .D1(\config_1.timer_0_sqmuxa ), .C1(TEST_c), 
    .B1(\config_1.un1_rom_addr_ac0_3_out ), .A1(\rom_addr[3] ), .D0(TEST_c), 
    .C0(\config_1.un1_rom_addr_ac0_3_out ), .B0(\rom_addr[3] ), 
    .LSR(\config_1.FSM_state_RNI5NH1_0[0] ), .CLK(clk_25MHz_c), 
    .Q1(\rom_addr[3] ), .F0(\config_1.timer_0_sqmuxa_0_0 ), 
    .F1(\config_1.rom_addr_RNO[3] ));
  config_1_SLICE_406 \config_1.SLICE_406 ( .C1(TEST_c), .A1(\rom_addr[3] ), 
    .D0(\rom_addr[3] ), .C0(\config_1.un1_rom_addr_ac0_3_out ), 
    .B0(\rom_addr[4] ), .A0(TEST_c), .F0(\config_1.un1_rom_addr_c5_1 ), 
    .F1(\config_1.un1_rom_addr_ac0_9_s_0_1 ));
  SCCB1_SLICE_407 \SCCB1.SLICE_407 ( .D1(\SCCB1.FSM_state[2] ), 
    .C1(\SCCB1.byte_counter[0] ), .A1(\SCCB1.byte_counter[1] ), 
    .D0(\SCCB1.byte_counter[0] ), .C0(\SCCB1.FSM_state[1] ), 
    .B0(\SCCB1.byte_counter[1] ), .A0(\SCCB1.FSM_state[2] ), .F0(\SCCB1.N_20 ), 
    .F1(\SCCB1.N_97_1 ));
  SCCB1_SLICE_409 \SCCB1.SLICE_409 ( .DI1(\SCCB1.FSM_return_state_0 ), 
    .D1(\SCCB1.FSM_return_state[2] ), .C1(\SCCB1.FSM_return_state_cnst_0[2] ), 
    .B1(\SCCB1.un1_FSM_state_26_0 ), .D0(\SCCB1.FSM_state[1] ), 
    .C0(\SCCB1.FSM_state[2] ), .B0(\SCCB1.FSM_state[3] ), .CLK(clk_25MHz_c), 
    .Q1(\SCCB1.FSM_return_state[2] ), .F0(\SCCB1.FSM_return_state_cnst_0[2] ), 
    .F1(\SCCB1.FSM_return_state_0 ));
  vga_inst_SLICE_413 \vga_inst.SLICE_413 ( .D1(\row[5] ), .C1(\row[6] ), 
    .B1(\row[7] ), .A1(\row[9] ), .D0(\row[2] ), .C0(\row[5] ), .B0(\row[6] ), 
    .A0(\row[7] ), .F0(\vga_inst.m16_4 ), .F1(\vga_inst.m38_5 ));
  vga_inst_SLICE_415 \vga_inst.SLICE_415 ( .D1(\address_counter[15] ), 
    .C1(\address_counter[14] ), .B1(WR), .D0(\address_counter[14] ), 
    .C0(\address_counter[15] ), .A0(WR), .F0(WR1), .F1(WR2));
  vga_inst_SLICE_417 \vga_inst.SLICE_417 ( .DI1(fsm_state_scalar), 
    .D1(\fsm_state[2] ), .C1(start_config11), .B1(\fsm_state_e_1_1[0] ), 
    .A1(fsm_state19), .D0(\fsm_state[2] ), .C0(\debug_state_c[0] ), 
    .B0(\debug_state_c[1] ), .CLK(clk_25MHz_c), .Q1(\fsm_state[2] ), 
    .F0(start_config11), .F1(fsm_state_scalar));
  vga_inst_SLICE_418 \vga_inst.SLICE_418 ( .D1(\fsm_state[2] ), 
    .C1(\debug_state_c[0] ), .B1(\debug_state_c[1] ), .D0(WR9), 
    .C0(\fsm_state[2] ), .B0(\debug_state_c[0] ), .A0(\debug_state_c[1] ), 
    .F0(un1_start_config9_3_0), .F1(un1_fsm_state_2));
  vga_inst_SLICE_419 \vga_inst.SLICE_419 ( .D1(\vga_inst.grayscale_value[0] ), 
    .C1(\vga_inst.un2_spram_addr ), .B1(\vga_inst.valid ), 
    .D0(\vga_inst.un2_spram_addr ), .C0(\vga_inst.grayscale_value[0] ), 
    .A0(\vga_inst.valid ), .F0(\RGB_c[0] ), .F1(\RGB_c[4] ));
  vga_inst_SLICE_421 \vga_inst.SLICE_421 ( .D1(\vga_inst.grayscale_value[1] ), 
    .C1(\vga_inst.un2_spram_addr ), .B1(\vga_inst.valid ), 
    .D0(\vga_inst.un2_spram_addr ), .C0(\vga_inst.grayscale_value[1] ), 
    .A0(\vga_inst.valid ), .F0(\RGB_c[1] ), .F1(\RGB_c[5] ));
  config_1_SLICE_424 \config_1.SLICE_424 ( .D1(\config_1.timer[12] ), 
    .C1(\config_1.timer[11] ), .B1(\config_1.timer[10] ), 
    .A1(\config_1.timer[8] ), .D0(\config_1.timer[9] ), 
    .C0(\config_1.timer[7] ), .B0(\config_1.timer[3] ), 
    .A0(\config_1.timer[5] ), .F0(\config_1.un32_FSM_state_0_sqmuxa_16 ), 
    .F1(\config_1.un32_FSM_state_0_sqmuxa_17 ));
  rom1_SLICE_425 \rom1.SLICE_425 ( .D0(\rom1.dout_2_0_i_0_a2_1[1] ), 
    .C0(\rom1.dout_2_0_i_0_o7_x0[9] ), .F0(\rom1.N_965_0 ));
  vga_inst_SLICE_427 \vga_inst.SLICE_427 ( .DI1(\vga_inst.row_3[9] ), 
    .D1(\vga_inst.N_745 ), .C1(\row[0] ), .B1(\vga_inst.m16_5 ), 
    .A1(\vga_inst.m16_4 ), .D0(\row[9] ), .C0(\row[1] ), .B0(\row[8] ), 
    .A0(\vga_inst.N_76_mux ), .CE(\vga_inst.col11 ), .CLK(clk_25MHz_c), 
    .Q1(\row[9] ), .F0(\vga_inst.m16_5 ), .F1(\vga_inst.row_3[9] ));
  vga_inst_SLICE_428 \vga_inst.SLICE_428 ( .DI1(\vga_inst.row_0 ), 
    .D1(\vga_inst.col11 ), .C1(\vga_inst.m16_5 ), .B1(\vga_inst.m16_4 ), 
    .A1(\row[0] ), .D0(\row[0] ), .C0(\row[1] ), .B0(\row[2] ), 
    .CLK(clk_25MHz_c), .Q1(\row[0] ), .F0(\vga_inst.m38_4 ), 
    .F1(\vga_inst.row_0 ));
  vga_inst_SLICE_429 \vga_inst.SLICE_429 ( .D0(\vga_read_address[15] ), 
    .C0(\data_out2[7] ), .B0(\data_out0[7] ), .F0(\vga_inst.N_310 ));
  vga_inst_SLICE_431 \vga_inst.SLICE_431 ( .D1(\data_out1[14] ), 
    .C1(\data_out1[6] ), .B1(\vga_inst.col_Z[1] ), .A1(\vga_read_address[15] ), 
    .D0(\data_out2[6] ), .C0(\data_out0[6] ), .B0(\vga_read_address[15] ), 
    .F0(\vga_inst.N_311 ), .F1(\vga_inst.N_270 ));
  SCCB1_SLICE_434 \SCCB1.SLICE_434 ( .D0(\SCCB1.timer[7] ), 
    .C0(\SCCB1.timer[6] ), .B0(\SCCB1.timer[5] ), .A0(\SCCB1.timer[4] ), 
    .F0(\SCCB1.un68_FSM_state_20 ));
  vga_inst_SLICE_438 \vga_inst.SLICE_438 ( .D1(\vga_inst.col_Z[2] ), 
    .C1(\address_counter[2] ), .B1(\vga_inst.m7_0 ), .A1(\fsm_state[2] ), 
    .D0(\vga_read_address[11] ), .C0(\address_counter[11] ), 
    .B0(\fsm_state[2] ), .A0(\vga_inst.m7_0 ), .F0(\spram_addr[11] ), 
    .F1(\spram_addr[2] ));
  SLICE_439 SLICE_439( .DI1(\SCCB1.N_78_0 ), .D1(\SCCB1.un13_SIOD_oe ), 
    .C1(\SCCB1.tx_byte[7] ), .B1(\SCCB1.FSM_state[1] ), 
    .A1(\SCCB1.FSM_state[2] ), .D0(\SCCB1.SIOD_oe_i ), 
    .CE(\SCCB1.un1_FSM_state_21_0_i ), .CLK(clk_25MHz_c), 
    .Q1(\SCCB1.SIOD_oe_i ), .F0(N_1110_i), .F1(\SCCB1.N_78_0 ));
  SLICE_440 SLICE_440( .DI1(\SCCB1.FSM_state_i[1] ), .D1(\SCCB1.FSM_state[1] ), 
    .D0(\SCCB1.SIOC_oe_i ), .CE(\SCCB1.un1_FSM_state_22_0_i ), 
    .CLK(clk_25MHz_c), .Q1(\SCCB1.SIOC_oe_i ), .F0(N_1109_i), 
    .F1(\SCCB1.FSM_state_i[1] ));
  rom1_SLICE_443 \rom1.SLICE_443 ( .DI1(\config_1.rom_addr_RNO[7] ), 
    .D1(\config_1.timer_0_sqmuxa ), .C1(\config_1.un1_rom_addr_ac0_9_out_0 ), 
    .B1(\rom_addr[6] ), .A1(\rom_addr[7] ), .D0(\rom_addr[1] ), 
    .C0(\rom_addr[6] ), .B0(\rom_addr[7] ), .A0(\rom_addr[0] ), 
    .LSR(\config_1.FSM_state_RNI5NH1_0[0] ), .CLK(clk_25MHz_c), 
    .Q1(\rom_addr[7] ), .F0(\rom1.dout_2_12dflt_0 ), 
    .F1(\config_1.rom_addr_RNO[7] ));
  config_1_SLICE_446 \config_1.SLICE_446 ( .D1(TEST_c), .C1(\rom_addr[0] ), 
    .B1(\rom_addr[1] ), .D0(\config_1.FSM_state[0] ), .C0(TEST_c), 
    .F0(\config_1.un1_timer_cry_0_0_c_0_RNO ), 
    .F1(\config_1.timer_0_sqmuxa_3_0 ));
  config_1_SLICE_447 \config_1.SLICE_447 ( .D1(TEST_c), 
    .C1(\config_1.FSM_state[0] ), .D0(\config_1.FSM_state[0] ), .C0(TEST_c), 
    .F0(\config_1.un1_timer_cry_1_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_1_0_c_0_RNO_0 ));
  config_1_SLICE_449 \config_1.SLICE_449 ( .D1(TEST_c), 
    .C1(\config_1.FSM_state[0] ), .D0(\config_1.FSM_state[0] ), .C0(TEST_c), 
    .F0(\config_1.un1_timer_cry_3_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_3_0_c_0_RNO_0 ));
  config_1_SLICE_451 \config_1.SLICE_451 ( .D1(TEST_c), 
    .C1(\config_1.FSM_state[0] ), .D0(\config_1.FSM_state[0] ), .C0(TEST_c), 
    .F0(\config_1.un1_timer_cry_5_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_5_0_c_0_RNO_0 ));
  config_1_SLICE_453 \config_1.SLICE_453 ( .C1(\config_1.FSM_state[0] ), 
    .A1(TEST_c), .D0(\config_1.FSM_state[0] ), .B0(TEST_c), 
    .F0(\config_1.un1_timer_cry_7_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_7_0_c_0_RNO_0 ));
  config_1_SLICE_455 \config_1.SLICE_455 ( .D1(\config_1.FSM_state[0] ), 
    .C1(TEST_c), .D0(TEST_c), .C0(\config_1.FSM_state[0] ), 
    .F0(\config_1.un1_timer_cry_9_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_9_0_c_0_RNO_0 ));
  config_1_SLICE_457 \config_1.SLICE_457 ( .D1(\config_1.FSM_state[0] ), 
    .C1(TEST_c), .C0(\config_1.FSM_state[0] ), .B0(TEST_c), 
    .F0(\config_1.un1_timer_cry_11_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_11_0_c_0_RNO_0 ));
  config_1_SLICE_459 \config_1.SLICE_459 ( .C1(\config_1.FSM_state[0] ), 
    .A1(TEST_c), .D0(\config_1.FSM_state[0] ), .B0(TEST_c), 
    .F0(\config_1.un1_timer_cry_13_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_13_0_c_0_RNO_0 ));
  config_1_SLICE_461 \config_1.SLICE_461 ( .D1(\config_1.FSM_state[0] ), 
    .C1(TEST_c), .D0(TEST_c), .C0(\config_1.FSM_state[0] ), 
    .F0(\config_1.un1_timer_cry_15_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_15_0_c_0_RNO_0 ));
  config_1_SLICE_463 \config_1.SLICE_463 ( .D1(\config_1.FSM_state[0] ), 
    .C1(TEST_c), .D0(TEST_c), .C0(\config_1.FSM_state[0] ), 
    .F0(\config_1.un1_timer_cry_17_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_17_0_c_0_RNO_0 ));
  config_1_SLICE_465 \config_1.SLICE_465 ( .D1(\config_1.FSM_state[0] ), 
    .C1(TEST_c), .D0(TEST_c), .C0(\config_1.FSM_state[0] ), 
    .F0(\config_1.un1_timer_cry_19_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_19_0_c_0_RNO_0 ));
  config_1_SLICE_467 \config_1.SLICE_467 ( .D1(\config_1.FSM_state[0] ), 
    .C1(TEST_c), .D0(TEST_c), .C0(\config_1.FSM_state[0] ), 
    .F0(\config_1.un1_timer_cry_21_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_21_0_c_0_RNO_0 ));
  config_1_SLICE_469 \config_1.SLICE_469 ( .C1(\config_1.FSM_state[0] ), 
    .A1(TEST_c), .D0(\config_1.FSM_state[0] ), .B0(TEST_c), 
    .F0(\config_1.un1_timer_cry_23_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_23_0_c_0_RNO_0 ));
  config_1_SLICE_471 \config_1.SLICE_471 ( .C1(\config_1.FSM_state[0] ), 
    .A1(TEST_c), .D0(\config_1.FSM_state[0] ), .B0(TEST_c), 
    .F0(\config_1.un1_timer_cry_25_0_c_0_RNO ), 
    .F1(\config_1.un1_timer_cry_25_0_c_0_RNO_0 ));
  config_1_SLICE_473 \config_1.SLICE_473 ( .D1(TEST_c), 
    .C1(\config_1.FSM_state[0] ), .D0(\config_1.FSM_state[0] ), .C0(TEST_c), 
    .F0(\config_1.un1_timer_cry_27_0_c_0_RNO_0 ), 
    .F1(\config_1.FSM_state_RNI5NH1_0[0] ));
  config_1_SLICE_475 \config_1.SLICE_475 ( 
    .DI1(\config_1.SCCB_interface_start ), .D1(SCCB_start), 
    .C1(\config_1.SCCB_interface_start_e_1 ), .B1(\config_1.N_96 ), 
    .A1(\config_1.N_119 ), .D0(\config_1.FSM_state[0] ), .C0(SCCB_start), 
    .B0(SCCB_ready), .A0(TEST_c), .CLK(clk_25MHz_c), .Q1(SCCB_start), 
    .F0(\config_1.SCCB_interface_start_e_1 ), 
    .F1(\config_1.SCCB_interface_start ));
  config_1_SLICE_480 \config_1.SLICE_480 ( .D1(\config_1.N_119 ), 
    .C1(\config_1.FSM_state[0] ), .A1(TEST_c), .D0(\config_1.FSM_state[0] ), 
    .C0(\config_1.timer[28] ), .B0(TEST_c), .F0(\config_1.un1_timer_axb_28 ), 
    .F1(\config_1.timer_1_sqmuxa ));
  config_1_SLICE_481 \config_1.SLICE_481 ( .DI1(\SCCB1.ready ), 
    .D1(\SCCB1.FSM_state_1_rep1_RNI4J0M ), .C1(SCCB_ready), .B1(SCCB_start), 
    .D0(SCCB_ready), .C0(\config_1.N_96 ), .B0(\config_1.FSM_state[0] ), 
    .A0(\config_1.N_119 ), .CLK(clk_25MHz_c), .Q1(SCCB_ready), 
    .F0(\config_1.timer_0_sqmuxa ), .F1(\SCCB1.ready ));
  SCCB1_SLICE_482 \SCCB1.SLICE_482 ( .DI1(\SCCB1.FSM_state_rep1 ), 
    .D1(\SCCB1.g0_i_a3_0_15 ), .C1(\SCCB1.g0_i_a3_0_16 ), .B1(\SCCB1.N_6_0 ), 
    .A1(\SCCB1.g0_i_a3_0_14 ), .D0(\SCCB1.FSM_state_3_rep1 ), 
    .C0(\SCCB1.FSM_state_0_rep1 ), .B0(\SCCB1.FSM_state_1_rep1 ), 
    .A0(SCCB_start), .CLK(clk_25MHz_c), .Q1(\SCCB1.FSM_state_3_rep1 ), 
    .F0(\SCCB1.g0_i_m2_1_0_1 ), .F1(\SCCB1.FSM_state_rep1 ));
  SCCB1_SLICE_484 \SCCB1.SLICE_484 ( .D1(\SCCB1.tx_byte[1] ), 
    .C1(\SCCB1.latched_data[2] ), .B1(\SCCB1.byte_counter[1] ), 
    .A1(\SCCB1.FSM_state[2] ), .D0(\SCCB1.FSM_state[2] ), 
    .C0(\SCCB1.byte_counter[1] ), .F0(\SCCB1.N_96_1 ), 
    .F1(\SCCB1.tx_byte_7_iv_4_93_0 ));
  SCCB1_SLICE_488 \SCCB1.SLICE_488 ( .D1(\SCCB1.byte_counter[1] ), 
    .C1(\SCCB1.tx_byte[2] ), .B1(\SCCB1.latched_data[3] ), 
    .A1(\SCCB1.FSM_state[2] ), .D0(\SCCB1.FSM_state[2] ), 
    .C0(\SCCB1.byte_counter[1] ), .B0(\SCCB1.latched_data[7] ), 
    .A0(\SCCB1.tx_byte[6] ), .F0(\SCCB1.tx_byte_7_iv_176_0 ), 
    .F1(\SCCB1.tx_byte_7_iv_3_109_0 ));
  SCCB1_SLICE_490 \SCCB1.SLICE_490 ( .D1(\SCCB1.tx_byte[4] ), 
    .C1(\SCCB1.latched_data[5] ), .B1(\SCCB1.FSM_state[2] ), 
    .A1(\SCCB1.byte_counter[1] ), .D0(\SCCB1.byte_counter[1] ), 
    .C0(\SCCB1.tx_byte[5] ), .B0(\SCCB1.FSM_state[2] ), 
    .A0(\SCCB1.latched_data[6] ), .F0(\SCCB1.tx_byte_7_iv_0_157_i_0 ), 
    .F1(\SCCB1.tx_byte_7_iv_1_141_0 ));
  SCCB1_SLICE_492 \SCCB1.SLICE_492 ( .D1(\SCCB1.tx_byte[0] ), 
    .C1(\SCCB1.latched_data[1] ), .B1(\SCCB1.FSM_state[2] ), 
    .A1(\SCCB1.byte_counter[1] ), .D0(\SCCB1.tx_byte[3] ), 
    .C0(\SCCB1.latched_data[4] ), .B0(\SCCB1.byte_counter[1] ), 
    .A0(\SCCB1.FSM_state[2] ), .F0(\SCCB1.tx_byte_7_iv_2_125_0 ), 
    .F1(\SCCB1.tx_byte_7_iv_0_0_74_i_0 ));
  SCCB1_SLICE_496 \SCCB1.SLICE_496 ( .DI1(\SCCB1.FSM_return_state_cnst[3] ), 
    .D1(\SCCB1.FSM_state[1] ), .C1(\SCCB1.FSM_state[0] ), 
    .B1(\SCCB1.FSM_state[3] ), .A1(\SCCB1.FSM_state[2] ), 
    .D0(\SCCB1.FSM_state[0] ), .C0(\SCCB1.FSM_state[3] ), 
    .B0(\SCCB1.FSM_state[2] ), .CE(\SCCB1.un1_FSM_state_26_0 ), 
    .CLK(clk_25MHz_c), .Q1(\SCCB1.FSM_return_state[3] ), 
    .F0(\SCCB1.FSM_state_cnst_1_i ), .F1(\SCCB1.FSM_return_state_cnst[3] ));
  reader_SLICE_497 \reader.SLICE_497 ( .DI1(\reader.pixel_half_1 ), 
    .D1(\reader.pixel_half ), .C1(\reader.FSM_state[0] ), 
    .B1(CAMERA_HREF_IN_c), .D0(\reader.FSM_state[0] ), 
    .C0(\reader.pixel_half ), .A0(CAMERA_HREF_IN_c), .CLK(CAMERA_PCLOCK_c), 
    .Q1(\reader.pixel_half ), .F0(\reader.pixel_half_RNIKJ0O ), 
    .F1(\reader.pixel_half_1 ));
  vga_inst_SLICE_498 \vga_inst.SLICE_498 ( .D0(\address_counter[3] ), 
    .C0(\address_counter[2] ), .B0(\address_counter[1] ), 
    .A0(\address_counter[0] ), .F0(\vga_inst.fsm_state19_sx ));
  vga_inst_SLICE_499 \vga_inst.SLICE_499 ( .DI1(prev_pixel_valid_0), 
    .D1(prev_pixel_valid), .C1(prev_pixel_valid_3), .B1(\fsm_state[2] ), 
    .A1(\debug_state_c[0] ), .D0(\debug_state_c[1] ), .C0(pixel_valid_c), 
    .CLK(clk_25MHz_c), .Q1(prev_pixel_valid), .F0(prev_pixel_valid_3), 
    .F1(prev_pixel_valid_0));
  vga_inst_SLICE_500 \vga_inst.SLICE_500 ( .D0(\address_counter[14] ), 
    .C0(\address_counter[15] ), .B0(\address_counter[9] ), 
    .A0(\address_counter[11] ), .F0(\vga_inst.fsm_state19_11 ));
  vga_inst_SLICE_502 \vga_inst.SLICE_502 ( .DI1(WR_0), 
    .D1(un1_start_config8_0), .C1(\debug_state_c[0] ), .B1(WR), 
    .A1(\debug_state_c[1] ), .D0(\address_counter[14] ), 
    .C0(\address_counter[15] ), .A0(WR), .CLK(clk_25MHz_c), .Q1(WR), .F0(WR0), 
    .F1(WR_0));
  vga_inst_SLICE_504 \vga_inst.SLICE_504 ( .DI1(\vga_inst.col_RNO[0] ), 
    .D1(\vga_inst.col_Z[0] ), .D0(\address_counter[0] ), 
    .C0(\vga_inst.col_Z[0] ), .B0(\vga_inst.m7_0 ), .A0(\fsm_state[2] ), 
    .CLK(clk_25MHz_c), .Q1(\vga_inst.col_Z[0] ), .F0(\spram_addr[0] ), 
    .F1(\vga_inst.col_RNO[0] ));
  vga_inst_SLICE_506 \vga_inst.SLICE_506 ( .D1(\fsm_state[2] ), 
    .C1(\address_counter[4] ), .B1(\vga_inst.m7_0 ), .A1(\vga_inst.col_Z[4] ), 
    .D0(\vga_inst.col_Z[3] ), .C0(\address_counter[3] ), .B0(\fsm_state[2] ), 
    .A0(\vga_inst.m7_0 ), .F0(\spram_addr[3] ), .F1(\spram_addr[4] ));
  vga_inst_SLICE_508 \vga_inst.SLICE_508 ( .D1(\vga_read_address[6] ), 
    .C1(\address_counter[6] ), .B1(\fsm_state[2] ), .A1(\vga_inst.m7_0 ), 
    .D0(\address_counter[5] ), .C0(\vga_inst.col_Z[5] ), .B0(\vga_inst.m7_0 ), 
    .A0(\fsm_state[2] ), .F0(\spram_addr[5] ), .F1(\spram_addr[6] ));
  vga_inst_SLICE_510 \vga_inst.SLICE_510 ( .D1(\vga_read_address[8] ), 
    .C1(\address_counter[8] ), .B1(\vga_inst.m7_0 ), .A1(\fsm_state[2] ), 
    .D0(\fsm_state[2] ), .C0(\vga_inst.m7_0 ), .B0(\address_counter[7] ), 
    .A0(\vga_read_address[7] ), .F0(\spram_addr[7] ), .F1(\spram_addr[8] ));
  vga_inst_SLICE_512 \vga_inst.SLICE_512 ( .D1(\vga_read_address[10] ), 
    .C1(\address_counter[10] ), .B1(\vga_inst.m7_0 ), .A1(\fsm_state[2] ), 
    .D0(\fsm_state[2] ), .C0(\vga_inst.m7_0 ), .B0(\address_counter[9] ), 
    .A0(\vga_read_address[9] ), .F0(\spram_addr[9] ), .F1(\spram_addr[10] ));
  SLICE_516 SLICE_516( .F0(GND));
  SLICE_517 SLICE_517( .F0(VCC));
  un1_vga_read_address_mulonly_0_9_0_ \un1_vga_read_address_mulonly_0[9:0] ( 
    .CE(VCC), .A9(\row[9] ), .A8(\row[8] ), .A7(\row[7] ), .A6(\row[6] ), 
    .A5(\row[5] ), .A4(\row[4] ), .A3(\row[3] ), .A2(\row[2] ), .A1(\row[1] ), 
    .A0(\row[0] ), .B2(VCC), .B0(VCC), .AHOLD(VCC), .BHOLD(VCC), .O9(O9), 
    .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), .O2(O2));
  my_pll_lscc_pll_inst_u_PLL_B \my_pll.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(clk_12MHz_c), .FEEDBACK(\my_pll.lscc_pll_inst.intfbout_w ), 
    .RESET_N(VCC), .INTFBOUT(\my_pll.lscc_pll_inst.intfbout_w ), 
    .OUTCORE(clk_25MHz_c));
  clk_12MHz clk_12MHz_I( .PADDI(clk_12MHz_c), .clk_12MHz(clk_12MHz));
  start start_I( .PADDI(start_c), .start(start));
  CAMERA_VSYNC_IN CAMERA_VSYNC_IN_I( .PADDI(CAMERA_VSYNC_IN_c), 
    .CAMERA_VSYNC_IN(CAMERA_VSYNC_IN));
  CAMERA_HREF_IN CAMERA_HREF_IN_I( .PADDI(CAMERA_HREF_IN_c), 
    .CAMERA_HREF_IN(CAMERA_HREF_IN));
  CAMERA_DATA_IN_0_ \CAMERA_DATA_IN[0]_I ( .PADDI(\CAMERA_DATA_IN_c[0] ), 
    .CAMERADATAIN0(CAMERA_DATA_IN[0]));
  CAMERA_DATA_IN_1_ \CAMERA_DATA_IN[1]_I ( .PADDI(\CAMERA_DATA_IN_c[1] ), 
    .CAMERADATAIN1(CAMERA_DATA_IN[1]));
  CAMERA_DATA_IN_2_ \CAMERA_DATA_IN[2]_I ( .PADDI(\CAMERA_DATA_IN_c[2] ), 
    .CAMERADATAIN2(CAMERA_DATA_IN[2]));
  CAMERA_DATA_IN_3_ \CAMERA_DATA_IN[3]_I ( .PADDI(\CAMERA_DATA_IN_c[3] ), 
    .CAMERADATAIN3(CAMERA_DATA_IN[3]));
  CAMERA_DATA_IN_4_ \CAMERA_DATA_IN[4]_I ( .PADDI(\CAMERA_DATA_IN_c[4] ), 
    .CAMERADATAIN4(CAMERA_DATA_IN[4]));
  CAMERA_DATA_IN_5_ \CAMERA_DATA_IN[5]_I ( .PADDI(\CAMERA_DATA_IN_c[5] ), 
    .CAMERADATAIN5(CAMERA_DATA_IN[5]));
  CAMERA_DATA_IN_6_ \CAMERA_DATA_IN[6]_I ( .PADDI(\CAMERA_DATA_IN_c[6] ), 
    .CAMERADATAIN6(CAMERA_DATA_IN[6]));
  CAMERA_DATA_IN_7_ \CAMERA_DATA_IN[7]_I ( .PADDI(\CAMERA_DATA_IN_c[7] ), 
    .CAMERADATAIN7(CAMERA_DATA_IN[7]));
  CAMERA_PCLOCK CAMERA_PCLOCK_I( .PADDI(CAMERA_PCLOCK_c), 
    .CAMERA_PCLOCK(CAMERA_PCLOCK));
  sioc sioc_I( .PADDT(N_1109_i), .PADDO(GND), .sioc(sioc));
  siod siod_I( .PADDT(N_1110_i), .PADDO(GND), .siod(siod));
  done done_I( .PADDO(done_c), .done(done));
  frame_done frame_done_I( .PADDO(frame_done_c), .frame_done(frame_done));
  pixel_valid pixel_valid_I( .PADDO(pixel_valid_c), .pixel_valid(pixel_valid));
  debug_state_0_ \debug_state[0]_I ( .PADDO(\debug_state_c[0] ), 
    .debugstate0(debug_state[0]));
  debug_state_1_ \debug_state[1]_I ( .PADDO(\debug_state_c[1] ), 
    .debugstate1(debug_state[1]));
  RGB_0_ \RGB[0]_I ( .PADDO(\RGB_c[0] ), .RGB0(RGB[0]));
  RGB_1_ \RGB[1]_I ( .PADDO(\RGB_c[1] ), .RGB1(RGB[1]));
  RGB_2_ \RGB[2]_I ( .PADDO(\RGB_c[2] ), .RGB2(RGB[2]));
  RGB_3_ \RGB[3]_I ( .PADDO(\RGB_c[3] ), .RGB3(RGB[3]));
  RGB_4_ \RGB[4]_I ( .PADDO(\RGB_c[4] ), .RGB4(RGB[4]));
  RGB_5_ \RGB[5]_I ( .PADDO(\RGB_c[5] ), .RGB5(RGB[5]));
  VGA_HSYNC VGA_HSYNC_I( .PADDO(VGA_HSYNC_c), .VGA_HSYNC(VGA_HSYNC));
  VGA_VSYNC VGA_VSYNC_I( .PADDO(VGA_VSYNC_0_i), .VGA_VSYNC(VGA_VSYNC));
  clk_25MHz clk_25MHz_I( .PADDO(clk_25MHz_c), .clk_25MHz(clk_25MHz));
  TEST TEST_I( .PADDO(TEST_c), .TEST(TEST));
  SPRAM2_vfb_b_inst \SPRAM2.vfb_b_inst ( .ADDRESS13(\spram_addr[13] ), 
    .ADDRESS12(\spram_addr[12] ), .ADDRESS11(\spram_addr[11] ), 
    .ADDRESS10(\spram_addr[10] ), .ADDRESS9(\spram_addr[9] ), 
    .ADDRESS8(\spram_addr[8] ), .ADDRESS7(\spram_addr[7] ), 
    .ADDRESS6(\spram_addr[6] ), .ADDRESS5(\spram_addr[5] ), 
    .ADDRESS4(\spram_addr[4] ), .ADDRESS3(\spram_addr[3] ), 
    .ADDRESS2(\spram_addr[2] ), .ADDRESS1(N_80_mux_i), 
    .ADDRESS0(\spram_addr[0] ), .DATAIN15(\spram_data_in[15] ), 
    .DATAIN14(\spram_data_in[14] ), .DATAIN13(\spram_data_in[13] ), 
    .DATAIN12(\spram_data_in[12] ), .DATAIN11(\spram_data_in[11] ), 
    .DATAIN10(\spram_data_in[10] ), .DATAIN9(\spram_data_in[9] ), 
    .DATAIN8(\spram_data_in[8] ), .DATAIN7(\spram_data_in[7] ), 
    .DATAIN6(\spram_data_in[6] ), .DATAIN5(\spram_data_in[5] ), 
    .DATAIN4(\spram_data_in[4] ), .DATAIN3(\spram_data_in[3] ), 
    .DATAIN2(\spram_data_in[2] ), .DATAIN1(\spram_data_in[1] ), 
    .DATAIN0(\spram_data_in[0] ), .MASKWREN3(\spram_maskwe[2] ), 
    .MASKWREN2(\spram_maskwe[2] ), .MASKWREN1(\spram_maskwe[0] ), 
    .MASKWREN0(\spram_maskwe[0] ), .WREN(WR2), .CHIPSELECT(VCC), 
    .CLOCK(clk_25MHz_c), .POWEROFF_N(VCC), .DATAOUT15(\data_out2[15] ), 
    .DATAOUT14(\data_out2[14] ), .DATAOUT7(\data_out2[7] ), 
    .DATAOUT6(\data_out2[6] ));
  SPRAM1_vfb_b_inst \SPRAM1.vfb_b_inst ( .ADDRESS13(\spram_addr[13] ), 
    .ADDRESS12(\spram_addr[12] ), .ADDRESS11(\spram_addr[11] ), 
    .ADDRESS10(\spram_addr[10] ), .ADDRESS9(\spram_addr[9] ), 
    .ADDRESS8(\spram_addr[8] ), .ADDRESS7(\spram_addr[7] ), 
    .ADDRESS6(\spram_addr[6] ), .ADDRESS5(\spram_addr[5] ), 
    .ADDRESS4(\spram_addr[4] ), .ADDRESS3(\spram_addr[3] ), 
    .ADDRESS2(\spram_addr[2] ), .ADDRESS1(N_80_mux_i), 
    .ADDRESS0(\spram_addr[0] ), .DATAIN15(\spram_data_in[15] ), 
    .DATAIN14(\spram_data_in[14] ), .DATAIN13(\spram_data_in[13] ), 
    .DATAIN12(\spram_data_in[12] ), .DATAIN11(\spram_data_in[11] ), 
    .DATAIN10(\spram_data_in[10] ), .DATAIN9(\spram_data_in[9] ), 
    .DATAIN8(\spram_data_in[8] ), .DATAIN7(\spram_data_in[7] ), 
    .DATAIN6(\spram_data_in[6] ), .DATAIN5(\spram_data_in[5] ), 
    .DATAIN4(\spram_data_in[4] ), .DATAIN3(\spram_data_in[3] ), 
    .DATAIN2(\spram_data_in[2] ), .DATAIN1(\spram_data_in[1] ), 
    .DATAIN0(\spram_data_in[0] ), .MASKWREN3(\spram_maskwe[2] ), 
    .MASKWREN2(\spram_maskwe[2] ), .MASKWREN1(\spram_maskwe[0] ), 
    .MASKWREN0(\spram_maskwe[0] ), .WREN(WR1), .CHIPSELECT(VCC), 
    .CLOCK(clk_25MHz_c), .POWEROFF_N(VCC), .DATAOUT15(\data_out1[15] ), 
    .DATAOUT14(\data_out1[14] ), .DATAOUT7(\data_out1[7] ), 
    .DATAOUT6(\data_out1[6] ));
  SPRAM0_vfb_b_inst \SPRAM0.vfb_b_inst ( .ADDRESS13(\spram_addr[13] ), 
    .ADDRESS12(\spram_addr[12] ), .ADDRESS11(\spram_addr[11] ), 
    .ADDRESS10(\spram_addr[10] ), .ADDRESS9(\spram_addr[9] ), 
    .ADDRESS8(\spram_addr[8] ), .ADDRESS7(\spram_addr[7] ), 
    .ADDRESS6(\spram_addr[6] ), .ADDRESS5(\spram_addr[5] ), 
    .ADDRESS4(\spram_addr[4] ), .ADDRESS3(\spram_addr[3] ), 
    .ADDRESS2(\spram_addr[2] ), .ADDRESS1(N_80_mux_i), 
    .ADDRESS0(\spram_addr[0] ), .DATAIN15(\spram_data_in[15] ), 
    .DATAIN14(\spram_data_in[14] ), .DATAIN13(\spram_data_in[13] ), 
    .DATAIN12(\spram_data_in[12] ), .DATAIN11(\spram_data_in[11] ), 
    .DATAIN10(\spram_data_in[10] ), .DATAIN9(\spram_data_in[9] ), 
    .DATAIN8(\spram_data_in[8] ), .DATAIN7(\spram_data_in[7] ), 
    .DATAIN6(\spram_data_in[6] ), .DATAIN5(\spram_data_in[5] ), 
    .DATAIN4(\spram_data_in[4] ), .DATAIN3(\spram_data_in[3] ), 
    .DATAIN2(\spram_data_in[2] ), .DATAIN1(\spram_data_in[1] ), 
    .DATAIN0(\spram_data_in[0] ), .MASKWREN3(\spram_maskwe[2] ), 
    .MASKWREN2(\spram_maskwe[2] ), .MASKWREN1(\spram_maskwe[0] ), 
    .MASKWREN0(\spram_maskwe[0] ), .WREN(WR0), .CHIPSELECT(VCC), 
    .CLOCK(clk_25MHz_c), .POWEROFF_N(VCC), .DATAOUT15(\data_out0[15] ), 
    .DATAOUT14(\data_out0[14] ), .DATAOUT7(\data_out0[7] ), 
    .DATAOUT6(\data_out0[6] ));
endmodule

module config_1_SLICE_0 ( input DI1, D1, C1, B1, A1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \config_1/un1_timer_cry_27_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \config_1/timer_Z[28].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xC33C";
  defparam inst1.INIT1 = "0x0102";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module config_1_un1_timer_cry_25_0_c_0_SLICE_1 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_25_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xC33C";
  defparam inst1.INIT1 = "0xC33C";
endmodule

module config_1_un1_timer_cry_23_0_c_0_SLICE_2 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_23_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_21_0_c_0_SLICE_3 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_21_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_19_0_c_0_SLICE_4 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_19_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_17_0_c_0_SLICE_5 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_17_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_15_0_c_0_SLICE_6 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_15_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_13_0_c_0_SLICE_7 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_13_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_11_0_c_0_SLICE_8 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_11_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_9_0_c_0_SLICE_9 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_9_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_7_0_c_0_SLICE_10 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_7_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_5_0_c_0_SLICE_11 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_5_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_3_0_c_0_SLICE_12 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_3_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_1_0_c_0_SLICE_13 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \config_1/un1_timer_cry_1_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_un1_timer_cry_0_0_c_0_SLICE_14 ( input D1, C1, B1, CIN1, 
    output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa20001 \config_1/un1_timer_cry_0_0_c_0.fa22_inst ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_25__SLICE_15 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[25].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_23__SLICE_16 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[23].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_21__SLICE_17 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[21].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_19__SLICE_18 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[19].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_17__SLICE_19 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[17].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_15__SLICE_20 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[15].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_13__SLICE_21 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[13].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_11__SLICE_22 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[11].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_9__SLICE_23 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[9].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_7__SLICE_24 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[7].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_5__SLICE_25 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[5].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_3__SLICE_26 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[3].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_1__SLICE_27 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \SCCB1/timer_cry_c_0[1].fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_timer_cry_c_0_0__SLICE_28 ( input D1, C1, B1, CIN1, output F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa20001 \SCCB1/timer_cry_c_0[0].fa22_inst ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_29 ( input DI0, D1, A1, D0, B0, CE, CLK, CIN0, CIN1, 
    output Q0, F0, F1, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  fa20002 \vga_inst/un3_row_1_cry_8_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \vga_inst/row_Z[8].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fa20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x9966";
  defparam inst1.INIT1 = "0x55AA";
endmodule

module ffsre20003 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module vga_inst_SLICE_30 ( input DI1, DI0, D1, B1, D0, B0, CE, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa20004 \vga_inst/un3_row_1_cry_6_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \vga_inst/row_Z[6].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre20003 \vga_inst/row_Z[7].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fa20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x9966";
  defparam inst1.INIT1 = "0x9966";
endmodule

module vga_inst_SLICE_31 ( input DI1, DI0, D1, B1, D0, B0, CE, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa20004 \vga_inst/un3_row_1_cry_4_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \vga_inst/row_Z[4].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ffsre20003 \vga_inst/row_Z[5].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module vga_inst_un3_row_1_cry_2_c_0_SLICE_32 ( input D1, B1, D0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20004 \vga_inst/un3_row_1_cry_2_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_33 ( input DI1, D1, B1, C0, B0, CE, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly;

  fa20005 \vga_inst/un3_row_1_cry_1_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20003 \vga_inst/row_Z[1].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fa20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xC33C";
  defparam inst1.INIT1 = "0x9966";
endmodule

module vga_inst_SLICE_34 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20006 \vga_inst/un2_col_cry_8_c_0.fa22_inst ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(A1), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \vga_inst/col_Z[8].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20003 \vga_inst/col_Z[9].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module fa20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x1144";
  defparam inst1.INIT1 = "0x050A";
endmodule

module vga_inst_SLICE_35 ( input DI1, DI0, D1, B1, D0, B0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20004 \vga_inst/un2_col_cry_6_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \vga_inst/col_Z[6].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20003 \vga_inst/col_Z[7].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module vga_inst_SLICE_36 ( input DI1, DI0, D1, B1, A1, D0, B0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20007 \vga_inst/un2_col_cry_4_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(A1), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \vga_inst/col[4].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20003 \vga_inst/col[5].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module fa20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x9966";
  defparam inst1.INIT1 = "0x1144";
endmodule

module vga_inst_SLICE_37 ( input DI1, DI0, D1, B1, D0, B0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20004 \vga_inst/un2_col_cry_2_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \vga_inst/col[2].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20003 \vga_inst/col[3].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module vga_inst_SLICE_38 ( input DI1, D1, B1, C0, B0, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa20005 \vga_inst/un2_col_cry_1_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20003 \vga_inst/col[1].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module vga_read_address_cry_7_c_0_SLICE_39 ( input D1, B1, D0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \vga_read_address_cry_7_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_read_address_cry_5_c_0_SLICE_40 ( input D1, B1, D0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \vga_read_address_cry_5_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_read_address_cry_3_c_0_SLICE_41 ( input D1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \vga_read_address_cry_3_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_read_address_cry_1_c_0_SLICE_42 ( input D1, C1, B1, D0, C0, B0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \vga_read_address_cry_1_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_read_address_cry_0_c_0_SLICE_43 ( input D1, C1, B1, CIN1, output F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa20001 \vga_read_address_cry_0_c_0.fa22_inst ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_44 ( input DI0, D1, D0, A0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa20008 \address_counter_RNO[15].fa22_inst ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \address_counter_Z[15].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x55AA";
  defparam inst1.INIT1 = "0xC33C";
endmodule

module SLICE_45 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20004 \un1_address_counter_4_cry_13_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \address_counter_Z[13].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \address_counter_Z[14].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_46 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20004 \un1_address_counter_4_cry_11_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \address_counter_Z[11].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \address_counter_Z[12].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_47 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20004 \un1_address_counter_4_cry_9_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \address_counter_Z[9].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \address_counter_Z[10].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_48 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20004 \un1_address_counter_4_cry_7_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \address_counter_Z[7].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \address_counter_Z[8].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_49 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20004 \un1_address_counter_4_cry_5_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \address_counter_Z[5].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \address_counter_Z[6].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_50 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20004 \un1_address_counter_4_cry_3_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \address_counter_Z[3].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \address_counter_Z[4].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_51 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20004 \un1_address_counter_4_cry_1_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \address_counter_Z[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \address_counter_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_52 ( input DI1, D1, B1, C0, B0, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa20005 \un1_address_counter_4_cry_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \address_counter_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module rom1_SLICE_53 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \rom1/dout_RNO[7] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40009 \rom1/dout_RNO[6] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \rom1/dout[7].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \rom1/dout[6].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xF7FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xDFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_54 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40010 \rom1/dout_RNO[4] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 \rom1/dout_RNO[5] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \rom1/dout[4].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \rom1/dout[5].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xEFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xFF7F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_56 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40012 \rom1/dout_RNO[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \rom1/dout_RNO[3] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \rom1/dout[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \rom1/dout[3].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xDFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x4FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_58 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40014 \rom1/dout_RNO[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \rom1/dout_RNO[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \rom1/dout[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \rom1/dout[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x4FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xF7FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_60 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40016 \rom1/dout_RNO[14] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40017 \rom1/dout_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \rom1/dout[14].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \rom1/dout[15].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xDFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x3F7F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_62 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40018 \rom1/dout_RNO[12] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40019 \rom1/dout_RNO[13] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \rom1/dout[12].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \rom1/dout[13].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x2FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_64 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40010 \rom1/dout_RNO[10] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 \rom1/dout_RNO[11] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \rom1/dout[10].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \rom1/dout[11].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xDFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_66 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40021 \rom1/dout_RNO[8] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 \rom1/dout_RNO[9] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \rom1/dout[8].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \rom1/dout[9].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x7FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0x8FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_69 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 start_config_RNO( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40024 \config_1.done_RNO ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \start_config_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \config_1/done_Z.ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xD1F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xFD0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_70 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40025 \config_1/FSM_state_cnst_1_0_.N_4_i ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40026 \config_1/FSM_state_RNO[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \config_1/FSM_state_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \config_1/FSM_state[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xC2F2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x3100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_72 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40027 \config_1/timer_RNO[12] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 \config_1/timer_RNO[13] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20029 \config_1/timer_Z[12].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/timer_Z[13].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20029 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module config_1_SLICE_74 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40027 \config_1/timer_RNO[10] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 \config_1/timer_RNO[11] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/timer_Z[10].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/timer_Z[11].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module config_1_SLICE_76 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40030 \config_1/timer_RNO[8] ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 \config_1/timer_RNO[9] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/timer_Z[8].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/timer_Z[9].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x0050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_78 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40031 \config_1/timer_RNO[6] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \config_1/timer_RNO[7] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/timer_Z[6].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20029 \config_1/timer_Z[7].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_80 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40027 \config_1/timer_RNO[4] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 \config_1/timer_RNO[5] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20029 \config_1/timer_Z[4].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/timer_Z[5].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module config_1_SLICE_82 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40031 \config_1/timer_RNO[2] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \config_1/timer_RNO[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/timer_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/timer_Z[3].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module config_1_SLICE_84 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40033 \config_1/timer_RNO[0] ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \config_1/timer_RNO[1] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/timer_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/timer_Z[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x0050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_86 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40027 \config_1/timer_RNO[26] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 \config_1/timer_RNO[27] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/timer_Z[26].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/timer_Z[27].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module config_1_SLICE_88 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40034 \config_1/timer_RNO[24] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40035 \config_1/timer_RNO[25] ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/timer_Z[24].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/timer_Z[25].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0x0030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0x0500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_90 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40027 \config_1/timer_RNO[22] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 \config_1/timer_RNO[23] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/timer_Z[22].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/timer_Z[23].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module config_1_SLICE_92 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40027 \config_1/timer_RNO[20] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 \config_1/timer_RNO[21] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/timer_Z[20].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/timer_Z[21].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module config_1_SLICE_94 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40036 \config_1/timer_RNO[18] ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \config_1/timer_RNO[19] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/timer_Z[18].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/timer_Z[19].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0x0500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x0030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_96 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40036 \config_1/timer_RNO[16] ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \config_1/timer_RNO[17] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20029 \config_1/timer_Z[16].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20029 \config_1/timer_Z[17].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module config_1_SLICE_98 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40036 \config_1/timer_RNO[14] ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \config_1/timer_RNO[15] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20029 \config_1/timer_Z[14].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20029 \config_1/timer_Z[15].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module config_1_SLICE_102 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40038 \config_1/rom_addr_RNO_cZ[0] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 \config_1/rom_addr_RNO_cZ[1] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \config_1/rom_addr_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \config_1/rom_addr_Z[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_104 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_104_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_104_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \config_1/SCCB_interface_addr[6].ff_inst ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \config_1/SCCB_interface_addr[7].ff_inst ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_106 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_106_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_106_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \config_1/SCCB_interface_addr[4].ff_inst ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \config_1/SCCB_interface_addr[5].ff_inst ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_108 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_108_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_108_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \config_1/SCCB_interface_addr[2].ff_inst ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \config_1/SCCB_interface_addr[3].ff_inst ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_110 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_110_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_110_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \config_1/SCCB_interface_addr[0].ff_inst ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \config_1/SCCB_interface_addr[1].ff_inst ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_112 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_112_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_112_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \config_1/SCCB_interface_data[6].ff_inst ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \config_1/SCCB_interface_data[7].ff_inst ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_114 ( input DI1, DI0, C1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40042 SLICE_114_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 SLICE_114_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20003 \config_1/SCCB_interface_data[4].ff_inst ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \config_1/SCCB_interface_data[5].ff_inst ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_116 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_116_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_116_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \config_1/SCCB_interface_data[2].ff_inst ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \config_1/SCCB_interface_data[3].ff_inst ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_118 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_118_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_118_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \config_1/SCCB_interface_data[0].ff_inst ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \config_1/SCCB_interface_data[1].ff_inst ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module config_1_SLICE_122 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40044 \config_1/rom_addr_esr_RNO_cZ[4] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40045 \config_1/rom_addr_esr_RNO_cZ[5] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \config_1/rom_addr_esr[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \config_1/rom_addr_esr[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x95AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x9C3C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_126 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 \SCCB1/FSM_state_fast_RNO[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40047 \SCCB1/FSM_state_fast_RNO[1] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20003 \SCCB1/FSM_state_fast_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/FSM_state_fast_Z[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xC555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_131 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 \SCCB1/byte_counter_RNO[1] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 \SCCB1/byte_counter_RNO[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/byte_counter_Z[1].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/byte_counter_Z[0].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x0102") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x0006") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_133 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 \SCCB1/byte_index_RNO[1] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \SCCB1/byte_index_RNO[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/byte_index_Z[1].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/byte_index_Z[0].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x7800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x0014") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_135 ( input DI0, D0, C0, B0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40052 \SCCB1/byte_index_RNO[2] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/byte_index_Z[2].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x30C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_138 ( input DI0, D0, C0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \SCCB1/timer_RNO[27] ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/timer_Z[27].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x5005") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_139 ( input DI0, D0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40054 \SCCB1/timer_RNO[26] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/timer_Z[26].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_140 ( input DI1, DI0, D1, C1, D0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40055 \SCCB1/timer_RNO[24] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \SCCB1/timer_RNO[25] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[24].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/timer_Z[25].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_142 ( input DI1, DI0, D1, C1, D0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40055 \SCCB1/timer_RNO[22] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \SCCB1/timer_RNO[23] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[22].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/timer_Z[23].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SCCB1_SLICE_144 ( input DI1, DI0, D1, C1, D0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40055 \SCCB1/timer_RNO[20] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \SCCB1/timer_RNO[21] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[20].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/timer_Z[21].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SCCB1_SLICE_146 ( input DI1, DI0, D1, C1, D0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40055 \SCCB1/timer_RNO[18] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \SCCB1/timer_RNO[19] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[18].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/timer_Z[19].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SCCB1_SLICE_148 ( input DI1, DI0, D1, C1, D0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40055 \SCCB1/timer_RNO[16] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \SCCB1/timer_RNO[17] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[16].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/timer_Z[17].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SCCB1_SLICE_150 ( input DI1, DI0, D1, C1, D0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40055 \SCCB1/timer_RNO[14] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \SCCB1/timer_RNO[15] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[14].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/timer_Z[15].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SCCB1_SLICE_152 ( input DI1, DI0, D1, C1, D0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40055 \SCCB1/timer_RNO[12] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \SCCB1/timer_RNO[13] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[12].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/timer_Z[13].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SCCB1_SLICE_154 ( input DI1, DI0, D1, C1, D0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40055 \SCCB1/timer_RNO[10] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \SCCB1/timer_RNO[11] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[10].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/timer_Z[11].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SCCB1_SLICE_156 ( input DI1, DI0, D1, C1, A1, D0, B0, CE, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40057 \SCCB1/timer_RNO[8] ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \SCCB1/timer_RNO[9] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[8].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/timer_Z[9].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_158 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40058 \SCCB1/timer_RNO[6] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \SCCB1/timer_RNO[7] ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/timer_Z[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x3F0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_160 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40060 \SCCB1.timer_RNO[4] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \SCCB1.timer_RNO[5] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/timer_Z[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x7F70") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x77F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_162 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40062 \SCCB1.timer_RNO[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SCCB1/timer_RNO[3] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/timer_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0x4EEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x3704") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_164 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40064 \SCCB1/timer_RNO[0] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \SCCB1/timer_RNO[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/timer_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/timer_Z[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x7520") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_168 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40042 SLICE_168_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_168_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/latched_address_Z[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/latched_address_Z[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_170 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_170_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_170_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/latched_address_Z[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/latched_address_Z[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_172 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_172_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_172_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/latched_address_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/latched_address_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_174 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_174_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_174_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/latched_address_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/latched_address_Z[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_176 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_176_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_176_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/latched_data_Z[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/latched_data_Z[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_178 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40042 SLICE_178_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_178_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/latched_data_Z[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/latched_data_Z[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_180 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_180_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_180_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/latched_data_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/latched_data_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_182 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_182_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 SLICE_182_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20003 \SCCB1/latched_data_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/latched_data_Z[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SCCB1_SLICE_185 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40066 \SCCB1/FSM_return_state_RNO[0] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 \SCCB1/FSM_return_state_RNO[1] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20003 \SCCB1/FSM_return_state_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20003 \SCCB1/FSM_return_state_Z[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x33F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0x5CAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_187 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40068 \SCCB1/tx_byte_RNO[6] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \SCCB1/tx_byte_RNO[7] ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/tx_byte_Z[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/tx_byte_Z[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xF030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xAF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_189 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40070 \SCCB1/tx_byte_RNO[4] ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 \SCCB1/tx_byte_RNO[5] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/tx_byte_Z[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/tx_byte_Z[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xAF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xCF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_191 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40072 \SCCB1/tx_byte_RNO[2] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \SCCB1/tx_byte_RNO[3] ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/tx_byte_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/tx_byte_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xCF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_193 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40073 \SCCB1/tx_byte_RNO[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 \SCCB1/tx_byte_RNO[1] ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/tx_byte_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \SCCB1/tx_byte_Z[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xEAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xF050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_195 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40075 \SCCB1/FSM_state_RNO[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40076 \SCCB1/FSM_state_RNO[3] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/FSM_state_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/FSM_state_Z[3].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xFB51") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x1555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_197 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 \SCCB1/FSM_state_RNO[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 \SCCB1/FSM_state_RNO[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/FSM_state_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/FSM_state_Z[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xA333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_201 ( input DI1, DI0, D1, D0, C0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40078 \reader/FSM_state_RNO[0] ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \reader/frame_done_RNO ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \reader/FSM_state_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20003 \reader/frame_done_Z.ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_203 ( input DI0, D0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40079 \reader/pixel_valid_RNO ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \reader/pixel_valid.ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_204 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_204_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_204_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \reader/pixel_data_Z[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \reader/pixel_data_Z[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_206 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40042 SLICE_206_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_206_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \reader/pixel_data_Z[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \reader/pixel_data_Z[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_208 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_208_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_208_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \reader/pixel_data_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \reader/pixel_data_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_210 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40040 SLICE_210_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 SLICE_210_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \reader/pixel_data_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \reader/pixel_data_Z[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module vga_inst_SLICE_213 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40080 \vga_inst/row_RNO[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40081 \vga_inst/row_RNO[3] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \vga_inst/row_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \vga_inst/row_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0x8CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xAA2A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_219 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40082 \spram_maskwe_RNO[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40083 \spram_maskwe_RNO[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \spram_maskwe_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \spram_maskwe_Z[0].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0x7F20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xE2AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_221 ( input DI0, D0, C0, B0, A0, CLK, output Q0, F0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40084 start_prev_RNO( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \start_prev_Z.ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xFE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_223 ( input DI0, D0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40085 SLICE_223_K0( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \pixel_toggle_Z.ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_224 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40086 \vga_inst/N_195_0_i ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \vga_inst/N_203_0_i ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \spram_data_in_Z[14].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \spram_data_in_Z[15].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x3F33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0x3F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_226 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40088 \vga_inst/N_179_0_i ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \vga_inst/N_187_0_i ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \spram_data_in_Z[12].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \spram_data_in_Z[13].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0x5F55") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_228 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40086 \vga_inst/N_163_0_i ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \vga_inst/N_171_0_i ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \spram_data_in_Z[10].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \spram_data_in_Z[11].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_230 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40086 \vga_inst/N_147_0_i ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \vga_inst/N_155_0_i ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \spram_data_in_Z[8].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \spram_data_in_Z[9].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_232 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40089 \vga_inst/N_131_0_i ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \vga_inst/N_139_0_i ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \spram_data_in_Z[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \spram_data_in_Z[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xF333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xCF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_234 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40089 \vga_inst/N_115_0_i ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \vga_inst/N_123_0_i ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \spram_data_in_Z[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \spram_data_in_Z[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_236 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40089 \vga_inst/N_99_0_i ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \vga_inst/N_107_0_i ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \spram_data_in_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \spram_data_in_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_238 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40091 \vga_inst.N_83_0_i ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40092 \vga_inst.N_91_0_i ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \spram_data_in_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre20003 \spram_data_in_Z[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xF333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xCF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_241 ( input DI1, DI0, D1, C1, B1, A1, D0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40093 \fsm_state_RNO[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \fsm_state_RNO[1] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \fsm_state[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20003 \fsm_state[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xB0B5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_243 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40094 \rom1/dout_RNO_2[7] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40095 \rom1/dout_RNO_3_cZ[7] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_245 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40096 \rom1/dout_RNO_0[4] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40097 \rom1/dout_2_0_i_0_o7[11] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0x0F2F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0x535F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_247 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40098 \rom1/dout_RNO_1[11] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 \rom1/dout_RNO_4[11] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0x070F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0x1104") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_249 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40100 \rom1/dout_RNO_0[14] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40101 \rom1/dout_2_0_i_0_a2_1_cZ[1] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0x010F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_251 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40102 \rom1/dout_RNO_0[8] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40103 \rom1/dout_RNO_3_cZ[8] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0x0307") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0x1200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_253 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40104 \rom1/dout_2_0_i_0_o7_x0_cZ[9] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40105 \rom1/dout_2_0_i_0_o2[5] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0xF531") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_254 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40106 \rom1/dout_RNO_0_cZ[7] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40107 \rom1/dout_2_0_i_0_o2[9] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0x15BF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_255 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, 
    CLK, output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40108 \config_1/rom_addr_esr_RNO_cZ[6] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40109 \rom1/dout_RNO_1[9] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/rom_addr_esr[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0x95AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0x0301") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_256 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40110 \rom1/dout_RNO_0[9] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40111 \rom1/dout_2_0_i_0_o2_1[5] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0x8A00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_257 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40112 \rom1/dout_RNO_1[14] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40113 \rom1/dout_2_0dflt_0_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xD0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0x0007") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_259 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40114 \rom1/dout_RNO_2[11] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40115 \rom1/dout_2_0_i_0_o2[2] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0x0305") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0x0030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_261 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40116 \rom1/dout_2_0_i_0_o7[12] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40117 \rom1/dout_2_0_i_0_a7_1_cZ[13] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0x0E0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0x0500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_263 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40118 \rom1/dout_RNO_1[10] ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40119 \rom1/dout_2_0_i_0_o7[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0x0F77") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_264 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40120 \rom1/dout_RNO_1[7] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40121 \rom1/dout_2_0_i_0_o7[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xF0B0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_265 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40122 \config_1.FSM_state_RNIQTL56[0] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \config_1/FSM_state_RNIL6446_0[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0x0F5F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_267 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40124 \vga_inst/row_RNI28MP4[9] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40125 \vga_inst/row_RNI20A71[9] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0xF870") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_269 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40126 vga_read_address_cry_7_c_0_RNIS839( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_270 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40127 \vga_inst/col_RNIU72B2_0[1] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40128 \vga_inst/col_RNIKFMQ[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0xF033") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0x5140") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module fsm_state_cnst_1_0__SLICE_271 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40129 \fsm_state_cnst_1_0_.m5 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40130 \vga_inst/fsm_state19_8 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0x4055") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_273 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40131 \fsm_state_cnst_1_0_.m3 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40132 \fsm_state_RNO_0_cZ[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0x4657") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0x1566") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_274 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40133 \vga_inst/fsm_state19 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40130 \vga_inst/fsm_state19_9_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_275 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40134 \vga_inst/un1_start_config9_1 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40135 start_ibuf_RNIASAT( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0xF00F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0x0051") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_277 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40136 \rom1/dout_RNO_2[14] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40137 \rom1/dout_2_0_i_0_a2_cZ[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0xCC8C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_279 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40138 \rom1/dout_RNO_0[2] ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40139 \rom1/dout_RNO_3_cZ[2] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0x0005") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_282 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40140 \rom1/dout_RNO_1[8] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40141 \rom1/dout_2_0_i_0_a7_2_cZ[5] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40141 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_283 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40142 \rom1/dout_RNO_0[3] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40143 \rom1/dout_RNO_1_cZ[3] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  LUT4 #("0x0800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40143 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_285 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40144 \rom1/dout_RNO_0_cZ[5] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40145 \rom1/dout_2_0_i_0_o2[13] ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40144 ( input A, B, C, D, output Z );

  LUT4 #("0x80A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40145 ( input A, B, C, D, output Z );

  LUT4 #("0x0505") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_286 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40146 \rom1/dout_RNO_1[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40147 \rom1/dout_RNO_4_cZ[2] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40146 ( input A, B, C, D, output Z );

  LUT4 #("0x080A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40147 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_288 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40148 \rom1/dout_RNO_0[6] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40149 \rom1/dout_RNO_1[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40148 ( input A, B, C, D, output Z );

  LUT4 #("0xEF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40149 ( input A, B, C, D, output Z );

  LUT4 #("0xB0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_289 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40150 \rom1/dout_RNO_0_cZ[1] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40105 \rom1/dout_2_0_i_0_o2_0[5] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40150 ( input A, B, C, D, output Z );

  LUT4 #("0x8088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_292 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40151 \rom1/dout_RNO_2[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40152 \rom1/dout_2_0_i_0_o7[2] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  LUT4 #("0xDC1D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40152 ( input A, B, C, D, output Z );

  LUT4 #("0x2311") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_293 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40153 \rom1/dout_RNO_0[15] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40154 \rom1/dout_2_adflt_cZ ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  LUT4 #("0x70F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40154 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_295 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40155 \rom1/dout_RNO_0_cZ[11] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40156 \rom1/dout_RNO_3_cZ[11] ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  LUT4 #("0xCC0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40156 ( input A, B, C, D, output Z );

  LUT4 #("0xAF05") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_297 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40157 \rom1/dout_RNO_1[4] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40109 \rom1/dout_RNO_3[4] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40157 ( input A, B, C, D, output Z );

  LUT4 #("0x10F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_299 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40158 \rom1/dout_RNO_2[3] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40159 \rom1/dout_RNO_2_cZ[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  LUT4 #("0x3B77") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40159 ( input A, B, C, D, output Z );

  LUT4 #("0x0C08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_300 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40160 \rom1/dout_2_0_i_0_a7_cZ[9] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40161 \rom1/dout_RNO_1[0] ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40161 ( input A, B, C, D, output Z );

  LUT4 #("0x000A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_301 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40162 \rom1/dout_RNO_2[10] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40163 \rom1/dout_RNO_3_cZ[10] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40162 ( input A, B, C, D, output Z );

  LUT4 #("0x0D00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40163 ( input A, B, C, D, output Z );

  LUT4 #("0x7000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_303 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40164 \rom1/dout_RNO_0[13] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40165 \rom1/dout_2_0_i_0_a7_cZ[1] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40164 ( input A, B, C, D, output Z );

  LUT4 #("0x0A02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40165 ( input A, B, C, D, output Z );

  LUT4 #("0x0C00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_305 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40166 \config_1/FSM_state_RNO_1_cZ[1] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40167 \config_1/FSM_state_RNO_2_cZ[1] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40166 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40167 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_306 ( input D0, C0, B0, A0, output F0 );

  lut40168 \config_1/FSM_state20_9_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_307 ( input D0, C0, B0, A0, output F0 );

  lut40169 \config_1/FSM_state_RNO_0[1] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40169 ( input A, B, C, D, output Z );

  LUT4 #("0x0111") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_308 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40166 \config_1/FSM_state20 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40170 \config_1/FSM_state19_4_4_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40170 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_309 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40171 \config_1/rom_addr_RNIOHSL[1] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40172 \config_1/rom_addr_esr_RNI5RR41[5] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40171 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40172 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_311 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40173 \config_1/FSM_state_RNIO2T46[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40054 \config_1/FSM_state_RNI5NH1[0] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40173 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_313 ( input D0, C0, B0, A0, output F0 );

  lut40174 \config_1/timer_RNI93BP1[21] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40174 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_314 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40175 \config_1/timer_RNIORPS9[17] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40176 \config_1/timer_RNIH88P1[17] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40175 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40176 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_315 ( input D0, C0, B0, A0, output F0 );

  lut40177 \config_1/timer_RNIA07P1[13] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40177 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_316 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40178 \config_1/timer_RNI9BVA4[1] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40176 \config_1/timer_RNI1D8H[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40178 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_317 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40175 \config_1/FSM_state19 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40179 \config_1/FSM_state19_2_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_319 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40180 \config_1/FSM_state19_4_5_cZ ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40181 \config_1/FSM_state20_2_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40180 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40181 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_321 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40182 \config_1/timer_RNIL47V1[24] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40101 \config_1/timer_RNI8HO11[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40182 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_323 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40183 \SCCB1/timer_RNIHQQO6_cZ[0] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40183 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_324 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40166 \SCCB1/timer_RNIRKEV2[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40184 \SCCB1/FSM_state_fast_RNID2K11[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40184 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_325 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40185 \SCCB1/timer_RNIEIQT1[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40186 \SCCB1/timer_RNIFMTA_cZ[1] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40185 ( input A, B, C, D, output Z );

  LUT4 #("0xDFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40186 ( input A, B, C, D, output Z );

  LUT4 #("0x0003") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_326 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40187 \SCCB1/timer_RNIMTJN[22] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40177 \SCCB1/timer_RNIQKL01[20] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40187 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_327 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 \SCCB1/timer_RNIM5CP3_0_cZ[16] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40188 \SCCB1/timer_RNIE5I01[16] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_329 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40189 \SCCB1/FSM_state_RNI67TO[3] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40145 \SCCB1/FSM_state_0_rep1_RNIFDQ2 ( .A(A0), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40189 ( input A, B, C, D, output Z );

  LUT4 #("0x7410") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_331 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40190 \SCCB1/FSM_state_RNIP3NT5[3] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40191 \SCCB1/timer_RNIM5CP3[16] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  LUT4 #("0x73FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40191 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_333 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40192 \SCCB1/timer_RNIM36F1[16] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40105 \SCCB1/timer_RNIB597[2] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40192 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_335 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40193 \SCCB1/FSM_state_RNI62DL1[1] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40194 \SCCB1/FSM_return_state_e_0_RNIH1A01[3] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40193 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40194 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_337 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40175 \SCCB1/timer_RNI741B3[18] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40195 \SCCB1/timer_RNIV37I[18] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40195 ( input A, B, C, D, output Z );

  LUT4 #("0x0003") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_339 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40196 \SCCB1/timer_RNIANC73_0[4] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40174 \SCCB1/timer_RNIA5M01[24] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40196 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_341 ( input D0, C0, B0, A0, output F0 );

  lut40197 \SCCB1/FSM_return_state_RNI1A2R[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40197 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_342 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40198 \SCCB1/timer_RNIRASA3[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40199 \SCCB1/timer_RNIE5I01_0[16] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40198 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40199 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_343 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40027 \SCCB1/FSM_state_RNISDO9[0] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40200 \SCCB1/FSM_state_RNITVC72[3] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40200 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_344 ( input DI1, D1, C1, B1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40201 \SCCB1/byte_index_RNO[3] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40141 \SCCB1/byte_index_RNIQ72U1[3] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \SCCB1/byte_index_Z[3].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40201 ( input A, B, C, D, output Z );

  LUT4 #("0x3CF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_345 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40202 \SCCB1/timer_RNIANC73[4] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40203 \SCCB1/timer_RNI06IN[8] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40202 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40203 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_346 ( input D0, C0, B0, A0, output F0 );

  lut40174 \SCCB1/timer_RNIUKH01[12] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SCCB1_SLICE_347 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40046 \SCCB1/FSM_state_0_rep1_RNO ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40204 \SCCB1/FSM_state_1_rep1_RNI0NAI_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20003 \SCCB1/FSM_state_0_rep1_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40204 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_348 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40205 \SCCB1/timer_RNIQN423[16] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40199 \SCCB1/timer_RNIE5I01_1[16] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40205 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_349 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40206 \SCCB1/FSM_state_RNI998Q1[1] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40207 \SCCB1/FSM_state_1_rep1_RNI0NAI ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40206 ( input A, B, C, D, output Z );

  LUT4 #("0x3035") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40207 ( input A, B, C, D, output Z );

  LUT4 #("0xC080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_351 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40208 \SCCB1/FSM_state_1_rep1_RNO ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40209 \SCCB1/FSM_state_1_rep1_RNI0NAI_1 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20003 \SCCB1/FSM_state_1_rep1_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40208 ( input A, B, C, D, output Z );

  LUT4 #("0xC555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40209 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_352 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40210 \SCCB1/FSM_state_0_rep1_RNIPI26 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40211 \SCCB1/byte_index_RNIKBEN1[1] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40210 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40211 ( input A, B, C, D, output Z );

  LUT4 #("0x8A00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_353 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40212 \SCCB1/FSM_state_1_rep1_RNIGFGM ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40213 \SCCB1/FSM_state_1_rep1_RNI4J0M_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40212 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40213 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_355 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40214 \SCCB1/byte_counter_RNO_0[1] ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40215 \SCCB1/FSM_state_1_rep1_RNI0NAI_2 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40214 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40215 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_357 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40216 \vga_inst/m30 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40217 \vga_inst/m28 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40216 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40217 ( input A, B, C, D, output Z );

  LUT4 #("0xF0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_359 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40205 \vga_inst/fsm_state19_x ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40218 \vga_inst/fsm_state19_9_x_cZ ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40218 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_360 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40219 \vga_inst/spram_addr_cZ[13] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40220 \vga_inst/fsm_state19_10_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40219 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40220 ( input A, B, C, D, output Z );

  LUT4 #("0x0800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_361 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40221 \vga_inst/col_RNIOREB1_0[1] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40222 \vga_inst/m70 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40221 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40222 ( input A, B, C, D, output Z );

  LUT4 #("0x03CF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_363 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40223 \vga_inst/col_RNIOREB1[1] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40222 \vga_inst/m73 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40223 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_364 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40224 \vga_inst/row_RNI28MP4_0[9] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40225 \vga_inst/col_RNIU72B2[1] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40224 ( input A, B, C, D, output Z );

  LUT4 #("0xF780") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40225 ( input A, B, C, D, output Z );

  LUT4 #("0xCC0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_365 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40226 \vga_inst/col_RNIBG1P[1] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40154 \vga_inst/m1_e_0 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40226 ( input A, B, C, D, output Z );

  LUT4 #("0xEA2A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_367 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40227 \vga_inst/un1_start_config8 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40228 \vga_inst/WR9 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40227 ( input A, B, C, D, output Z );

  LUT4 #("0x11E6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40228 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_369 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40229 \vga_inst/row_RNI77M7[8] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40230 \vga_inst/row_RNIP5H1[3] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40229 ( input A, B, C, D, output Z );

  LUT4 #("0x7FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40230 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_371 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40105 \vga_inst/col_RNIDKSJ[7] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_372 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40231 \vga_inst/row_RNILGM11[9] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40170 \vga_inst/row_RNIUN23[5] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40231 ( input A, B, C, D, output Z );

  LUT4 #("0x0405") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_373 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40232 \vga_inst/col_RNISMQT[4] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40233 \vga_inst/col_RNIM4P71[4] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40232 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40233 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_374 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40234 \vga_inst/col_RNI37E33[5] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40235 \vga_inst/col_RNI9NO71[2] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40234 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40235 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_376 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40236 \vga_inst/col_RNITDGP2[8] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40237 \vga_inst/col_RNII0P71[4] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40236 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40237 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_377 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40238 \vga_inst/spram_addr_cZ[12] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40115 \vga_inst/m1_e ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40238 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_380 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40239 \rom1/dout_RNO_2[4] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40240 \rom1/dout_RNO_2[9] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40239 ( input A, B, C, D, output Z );

  LUT4 #("0xF7DD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40240 ( input A, B, C, D, output Z );

  LUT4 #("0xFF8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_382 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, 
    CLK, output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40108 \config_1/rom_addr_esr_RNO_cZ[2] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40241 \rom1/dout_RNO_0_cZ[12] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/rom_addr_esr[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40241 ( input A, B, C, D, output Z );

  LUT4 #("0xA2F3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_383 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40242 \SCCB1/FSM_state_fast_RNO[3] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40243 \SCCB1/FSM_state_RNI6J0D_3[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20003 \SCCB1/FSM_state_fast_Z[3].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40242 ( input A, B, C, D, output Z );

  LUT4 #("0x070F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40243 ( input A, B, C, D, output Z );

  LUT4 #("0x0301") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_384 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40244 \SCCB1/FSM_state_RNO_0[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40245 \SCCB1/FSM_state_RNI6J0D_0[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40244 ( input A, B, C, D, output Z );

  LUT4 #("0x0051") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40245 ( input A, B, C, D, output Z );

  LUT4 #("0x747E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_385 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40246 \SCCB1/timer_RNII6IE[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 \SCCB1/timer_RNII6IE_0[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40246 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_390 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40247 \SCCB1/timer_RNO_0_cZ[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40248 \SCCB1/SIOD_oe_i_RNO_0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40247 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40248 ( input A, B, C, D, output Z );

  LUT4 #("0x0126") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_392 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40249 \SCCB1/FSM_state_RNI6J0D_2_cZ[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40250 \SCCB1/FSM_state_RNI6J0D_1[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40249 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40250 ( input A, B, C, D, output Z );

  LUT4 #("0x7726") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_394 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40251 \SCCB1/FSM_state_RNI6J0D[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40252 \SCCB1/SIOC_oe_i_RNO_0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40251 ( input A, B, C, D, output Z );

  LUT4 #("0xBDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40252 ( input A, B, C, D, output Z );

  LUT4 #("0x5070") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_395 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40253 \rom1/dout_2_0_i_0_o7[3] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40254 \rom1/dout_RNO_0_cZ[10] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40253 ( input A, B, C, D, output Z );

  LUT4 #("0x00F3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40254 ( input A, B, C, D, output Z );

  LUT4 #("0x0032") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_401 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40255 \rom1/dout_RNO_2[8] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40256 \rom1/dout_RNO_0[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40255 ( input A, B, C, D, output Z );

  LUT4 #("0x0BBB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40256 ( input A, B, C, D, output Z );

  LUT4 #("0x150F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_405 ( input DI1, D1, C1, B1, A1, D0, C0, B0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40257 \config_1/rom_addr_RNO_cZ[3] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40258 \config_1/rom_addr_esr_RNO_0[4] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \config_1/rom_addr_Z[3].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40257 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40258 ( input A, B, C, D, output Z );

  LUT4 #("0x00C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_406 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40259 \config_1/rom_addr_RNIAJKA[3] ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40260 \config_1/rom_addr_esr_RNO_0[5] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40259 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40260 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_407 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 \SCCB1/byte_counter_RNILJDO[0] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40261 \SCCB1/FSM_state_RNO_1[2] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40261 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_409 ( input DI1, D1, C1, B1, D0, C0, B0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40262 \SCCB1/FSM_return_state_RNO[2] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40263 \SCCB1/FSM_return_state_RNO_0[2] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20003 \SCCB1/FSM_return_state_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40262 ( input A, B, C, D, output Z );

  LUT4 #("0x3F0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40263 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_413 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40264 \vga_inst/row_RNIVO23[5] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40265 \vga_inst/row_RNIOH23[2] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40264 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40265 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_415 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40266 \vga_inst/m24 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40267 \vga_inst/m22 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40266 ( input A, B, C, D, output Z );

  LUT4 #("0x0C00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40267 ( input A, B, C, D, output Z );

  LUT4 #("0x0A00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_417 ( input DI1, D1, C1, B1, A1, D0, C0, B0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40268 \fsm_state_RNO[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40269 \vga_inst/start_config11 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \fsm_state_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40268 ( input A, B, C, D, output Z );

  LUT4 #("0xEC20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40269 ( input A, B, C, D, output Z );

  LUT4 #("0x00C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_418 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40270 \vga_inst/un1_fsm_state_2 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40271 \vga_inst/un1_start_config9_3 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40270 ( input A, B, C, D, output Z );

  LUT4 #("0x003C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40271 ( input A, B, C, D, output Z );

  LUT4 #("0x0C04") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_419 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40272 \vga_inst/row_RNI08CI3_0[9] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40167 \vga_inst/row_RNI08CI3_2[9] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40272 ( input A, B, C, D, output Z );

  LUT4 #("0xCC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_421 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40272 \vga_inst/row_RNI08CI3[9] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40167 \vga_inst/row_RNI08CI3_1[9] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_424 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40273 \config_1/timer_RNII57F1[8] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40203 \config_1/timer_RNICO8H[3] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40273 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rom1_SLICE_425 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40274 \rom1/dout_2_0_i_0_o7_ns[9] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40274 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_427 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40275 \vga_inst/row_RNO[9] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40276 \vga_inst/row_RNI66R3[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \vga_inst/row_Z[9].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40275 ( input A, B, C, D, output Z );

  LUT4 #("0xF700") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40276 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_428 ( input DI1, D1, C1, B1, A1, D0, C0, B0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40277 \vga_inst/row_RNO[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40278 \vga_inst/row_RNIUG92[2] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \vga_inst/row_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40277 ( input A, B, C, D, output Z );

  LUT4 #("0x15AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40278 ( input A, B, C, D, output Z );

  LUT4 #("0x3000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_429 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40279 \vga_inst/m64 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40279 ( input A, B, C, D, output Z );

  LUT4 #("0x0F33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_431 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40280 \vga_inst/col_RNIKFMQ_0[1] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40222 \vga_inst/m67 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40280 ( input A, B, C, D, output Z );

  LUT4 #("0x5140") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_434 ( input D0, C0, B0, A0, output F0 );

  lut40174 \SCCB1/timer_RNI2NIE[4] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_438 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40281 \vga_inst/col_RNIDI1P[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40282 \vga_inst/spram_addr_cZ[11] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40281 ( input A, B, C, D, output Z );

  LUT4 #("0xF870") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40282 ( input A, B, C, D, output Z );

  LUT4 #("0xF870") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_439 ( input DI1, D1, C1, B1, A1, D0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40283 \SCCB1/SIOD_oe_i_RNO ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40284 siod_obuft_RNO( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/SIOD_oe_i.ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40283 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40284 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_440 ( input DI1, D1, D0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40078 \SCCB1/SIOC_oe_i_RNO ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40284 sioc_obuft_RNO( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20003 \SCCB1/SIOC_oe_i.ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module rom1_SLICE_443 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40285 \config_1/rom_addr_RNO_cZ[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40286 \rom1/dout_RNO_1[12] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \config_1/rom_addr_Z[7].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40285 ( input A, B, C, D, output Z );

  LUT4 #("0xAA6A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40286 ( input A, B, C, D, output Z );

  LUT4 #("0x0201") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_446 ( input D1, C1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40287 \config_1/rom_addr_esr_RNO_0[2] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \config_1/un1_timer_cry_0_0_c_0_RNO_cZ ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40287 ( input A, B, C, D, output Z );

  LUT4 #("0x00C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_447 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40106 \config_1/un1_timer_cry_1_0_c_0_RNO_0_cZ ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \config_1/un1_timer_cry_1_0_c_0_RNO_cZ ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_449 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40106 \config_1/un1_timer_cry_3_0_c_0_RNO_0_cZ ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \config_1/un1_timer_cry_3_0_c_0_RNO_cZ ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_451 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40106 \config_1/un1_timer_cry_5_0_c_0_RNO_0_cZ ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \config_1/un1_timer_cry_5_0_c_0_RNO_cZ ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_453 ( input C1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40214 \config_1/un1_timer_cry_7_0_c_0_RNO_0_cZ ( .A(A1), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40288 \config_1/un1_timer_cry_7_0_c_0_RNO_cZ ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40288 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_455 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40212 \config_1/un1_timer_cry_9_0_c_0_RNO_0_cZ ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40183 \config_1/un1_timer_cry_9_0_c_0_RNO_cZ ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_457 ( input D1, C1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40212 \config_1/un1_timer_cry_11_0_c_0_RNO_0_cZ ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40289 \config_1/un1_timer_cry_11_0_c_0_RNO_cZ ( .A(GNDI), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40289 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_459 ( input C1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40214 \config_1/un1_timer_cry_13_0_c_0_RNO_0_cZ ( .A(A1), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40288 \config_1/un1_timer_cry_13_0_c_0_RNO_cZ ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_461 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40212 \config_1/un1_timer_cry_15_0_c_0_RNO_0_cZ ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40183 \config_1/un1_timer_cry_15_0_c_0_RNO_cZ ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_463 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40212 \config_1/un1_timer_cry_17_0_c_0_RNO_0_cZ ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40183 \config_1/un1_timer_cry_17_0_c_0_RNO_cZ ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_465 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40212 \config_1/un1_timer_cry_19_0_c_0_RNO_0_cZ ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40183 \config_1/un1_timer_cry_19_0_c_0_RNO_cZ ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_467 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40212 \config_1/un1_timer_cry_21_0_c_0_RNO_0_cZ ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40183 \config_1/un1_timer_cry_21_0_c_0_RNO_cZ ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_469 ( input C1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40214 \config_1/un1_timer_cry_23_0_c_0_RNO_0_cZ ( .A(A1), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40288 \config_1/un1_timer_cry_23_0_c_0_RNO_cZ ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_471 ( input C1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40214 \config_1/un1_timer_cry_25_0_c_0_RNO_0_cZ ( .A(A1), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40288 \config_1/un1_timer_cry_25_0_c_0_RNO_cZ ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module config_1_SLICE_473 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40290 \config_1/FSM_state_RNI5NH1_0_cZ[0] ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \config_1/un1_timer_cry_27_0_c_0_RNO_0_cZ ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40290 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_475 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40291 \config_1/SCCB_interface_start_RNO ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40292 \config_1/SCCB_interface_start_RNO_0 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20003 \config_1/SCCB_interface_start_Z.ff_inst ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40291 ( input A, B, C, D, output Z );

  LUT4 #("0xF010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40292 ( input A, B, C, D, output Z );

  LUT4 #("0x54F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_480 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40293 \config_1.FSM_state_RNINA433[0] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40294 \config_1/un1_timer_cry_27_0_c_0_RNO ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40293 ( input A, B, C, D, output Z );

  LUT4 #("0x5000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40294 ( input A, B, C, D, output Z );

  LUT4 #("0x3CF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module config_1_SLICE_481 ( input DI1, D1, C1, B1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40295 \SCCB1/ready_RNO ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40296 \config_1/FSM_state_RNIL6446[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20003 \SCCB1/ready_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40295 ( input A, B, C, D, output Z );

  LUT4 #("0x33F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40296 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_482 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40297 \SCCB1/FSM_state_3_rep1_RNO ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40298 \SCCB1/FSM_state_1_rep1_RNI2EIF ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20003 \SCCB1/FSM_state_3_rep1_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40297 ( input A, B, C, D, output Z );

  LUT4 #("0x1333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40298 ( input A, B, C, D, output Z );

  LUT4 #("0x0F01") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_484 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40299 \SCCB1/tx_byte_RNO_0[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40274 \SCCB1/tx_byte_RNO_0[0] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40299 ( input A, B, C, D, output Z );

  LUT4 #("0x15BF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_488 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40300 \SCCB1/tx_byte_RNO_0[3] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40301 \SCCB1/tx_byte_RNO_0[7] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40300 ( input A, B, C, D, output Z );

  LUT4 #("0x1B5F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40301 ( input A, B, C, D, output Z );

  LUT4 #("0x553F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_490 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40302 \SCCB1/tx_byte_RNO_0[5] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40303 \SCCB1/tx_byte_RNO_0[6] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40302 ( input A, B, C, D, output Z );

  LUT4 #("0x13DF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40303 ( input A, B, C, D, output Z );

  LUT4 #("0xE2F3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_492 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40304 \SCCB1/tx_byte_RNO_0[1] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40305 \SCCB1/tx_byte_RNO_0[4] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40304 ( input A, B, C, D, output Z );

  LUT4 #("0xFD31") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40305 ( input A, B, C, D, output Z );

  LUT4 #("0x15BF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SCCB1_SLICE_496 ( input DI1, D1, C1, B1, A1, D0, C0, B0, CE, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40306 \SCCB1/FSM_return_state_e_0_RNO[3] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40307 \SCCB1/byte_index_RNO_0[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \SCCB1/FSM_return_state_e_0[3].ff_inst ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40306 ( input A, B, C, D, output Z );

  LUT4 #("0xACCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40307 ( input A, B, C, D, output Z );

  LUT4 #("0x0003") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_497 ( input DI1, D1, C1, B1, D0, C0, A0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40308 \reader/pixel_half_RNO ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40309 \reader/pixel_half_RNIKJ0O_cZ ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20003 \reader/pixel_half_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40308 ( input A, B, C, D, output Z );

  LUT4 #("0x30C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40309 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_498 ( input D0, C0, B0, A0, output F0 );

  lut40310 \vga_inst/fsm_state19_sx_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40310 ( input A, B, C, D, output Z );

  LUT4 #("0x7FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_499 ( input DI1, D1, C1, B1, A1, D0, C0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40311 prev_pixel_valid_RNO( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40183 \vga_inst/prev_pixel_valid_3 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \prev_pixel_valid_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40311 ( input A, B, C, D, output Z );

  LUT4 #("0xFD20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_500 ( input D0, C0, B0, A0, output F0 );

  lut40312 \vga_inst/fsm_state19_11_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40312 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_502 ( input DI1, D1, C1, B1, A1, D0, C0, A0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40313 WR_RNO( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40314 \vga_inst/m25 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 \WR_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40313 ( input A, B, C, D, output Z );

  LUT4 #("0xA0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40314 ( input A, B, C, D, output Z );

  LUT4 #("0x000A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_504 ( input DI1, D1, D0, C0, B0, A0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40078 \vga_inst/col_RNO_cZ[0] ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40315 \vga_inst/col_RNI9E1P[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 \vga_inst/col[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40315 ( input A, B, C, D, output Z );

  LUT4 #("0xF780") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_506 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40316 \vga_inst/col_RNIHM1P[4] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40317 \vga_inst/col_RNIFK1P[3] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40316 ( input A, B, C, D, output Z );

  LUT4 #("0xB8F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40317 ( input A, B, C, D, output Z );

  LUT4 #("0xF870") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_508 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40318 \vga_inst/spram_addr_cZ[6] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40315 \vga_inst/col_RNIJO1P[5] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40318 ( input A, B, C, D, output Z );

  LUT4 #("0xF870") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_510 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40319 \vga_inst/spram_addr_cZ[8] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40320 \vga_inst/spram_addr_cZ[7] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40319 ( input A, B, C, D, output Z );

  LUT4 #("0xF870") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40320 ( input A, B, C, D, output Z );

  LUT4 #("0xACCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_512 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40319 \vga_inst/spram_addr_cZ[10] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40320 \vga_inst/spram_addr_cZ[9] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_516 ( output F0 );
  wire   GNDI;

  lut40321 GND_cZ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40321 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_517 ( output F0 );
  wire   GNDI;

  lut40322 VCC_cZ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40322 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module un1_vga_read_address_mulonly_0_9_0_ ( input CE, A9, A8, A7, A6, A5, A4, 
    A3, A2, A1, A0, B2, B0, AHOLD, BHOLD, output O9, O8, O7, O6, O5, O4, O3, 
    O2 );
  wire   GNDI;

  MAC16_B \un1_vga_read_address_mulonly_0[9:0] ( .CLK(GNDI), .CE(CE), 
    .C15(GNDI), .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), 
    .C9(GNDI), .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), 
    .C3(GNDI), .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), 
    .A13(GNDI), .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(A9), .A8(A8), .A7(A7), 
    .A6(A6), .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(GNDI), 
    .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), .B9(GNDI), 
    .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), .B3(GNDI), .B2(B2), 
    .B1(GNDI), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), .D12(GNDI), 
    .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), .D6(GNDI), 
    .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), .D0(GNDI), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(GNDI), .DHOLD(GNDI), .IRSTTOP(GNDI), 
    .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), .OLOADTOP(GNDI), 
    .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), .OHOLDTOP(GNDI), 
    .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), .SIGNEXTIN(GNDI), .O31(), 
    .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), .O24(), .O23(), .O22(), 
    .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), .O15(), .O14(), .O13(), 
    .O12(), .O11(), .O10(), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), 
    .O4(O4), .O3(O3), .O2(O2), .O1(), .O0(), .CO(), .ACCUMCO(), .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A9 => O9) = (0:0:0,0:0:0);
    (A8 => O9) = (0:0:0,0:0:0);
    (A8 => O8) = (0:0:0,0:0:0);
    (A7 => O9) = (0:0:0,0:0:0);
    (A7 => O8) = (0:0:0,0:0:0);
    (A7 => O7) = (0:0:0,0:0:0);
    (A6 => O9) = (0:0:0,0:0:0);
    (A6 => O8) = (0:0:0,0:0:0);
    (A6 => O7) = (0:0:0,0:0:0);
    (A6 => O6) = (0:0:0,0:0:0);
    (A5 => O9) = (0:0:0,0:0:0);
    (A5 => O8) = (0:0:0,0:0:0);
    (A5 => O7) = (0:0:0,0:0:0);
    (A5 => O6) = (0:0:0,0:0:0);
    (A5 => O5) = (0:0:0,0:0:0);
    (A4 => O9) = (0:0:0,0:0:0);
    (A4 => O8) = (0:0:0,0:0:0);
    (A4 => O7) = (0:0:0,0:0:0);
    (A4 => O6) = (0:0:0,0:0:0);
    (A4 => O5) = (0:0:0,0:0:0);
    (A4 => O4) = (0:0:0,0:0:0);
    (A3 => O9) = (0:0:0,0:0:0);
    (A3 => O8) = (0:0:0,0:0:0);
    (A3 => O7) = (0:0:0,0:0:0);
    (A3 => O6) = (0:0:0,0:0:0);
    (A3 => O5) = (0:0:0,0:0:0);
    (A3 => O4) = (0:0:0,0:0:0);
    (A3 => O3) = (0:0:0,0:0:0);
    (A2 => O9) = (0:0:0,0:0:0);
    (A2 => O8) = (0:0:0,0:0:0);
    (A2 => O7) = (0:0:0,0:0:0);
    (A2 => O6) = (0:0:0,0:0:0);
    (A2 => O5) = (0:0:0,0:0:0);
    (A2 => O4) = (0:0:0,0:0:0);
    (A2 => O3) = (0:0:0,0:0:0);
    (A2 => O2) = (0:0:0,0:0:0);
    (A1 => O9) = (0:0:0,0:0:0);
    (A1 => O8) = (0:0:0,0:0:0);
    (A1 => O7) = (0:0:0,0:0:0);
    (A1 => O6) = (0:0:0,0:0:0);
    (A1 => O5) = (0:0:0,0:0:0);
    (A1 => O4) = (0:0:0,0:0:0);
    (A1 => O3) = (0:0:0,0:0:0);
    (A1 => O2) = (0:0:0,0:0:0);
    (A0 => O9) = (0:0:0,0:0:0);
    (A0 => O8) = (0:0:0,0:0:0);
    (A0 => O7) = (0:0:0,0:0:0);
    (A0 => O6) = (0:0:0,0:0:0);
    (A0 => O5) = (0:0:0,0:0:0);
    (A0 => O4) = (0:0:0,0:0:0);
    (A0 => O3) = (0:0:0,0:0:0);
    (A0 => O2) = (0:0:0,0:0:0);
    (B2 => O9) = (0:0:0,0:0:0);
    (B2 => O8) = (0:0:0,0:0:0);
    (B2 => O7) = (0:0:0,0:0:0);
    (B2 => O6) = (0:0:0,0:0:0);
    (B2 => O5) = (0:0:0,0:0:0);
    (B2 => O4) = (0:0:0,0:0:0);
    (B2 => O3) = (0:0:0,0:0:0);
    (B2 => O2) = (0:0:0,0:0:0);
    (B0 => O9) = (0:0:0,0:0:0);
    (B0 => O8) = (0:0:0,0:0:0);
    (B0 => O7) = (0:0:0,0:0:0);
    (B0 => O6) = (0:0:0,0:0:0);
    (B0 => O5) = (0:0:0,0:0:0);
    (B0 => O4) = (0:0:0,0:0:0);
    (B0 => O3) = (0:0:0,0:0:0);
    (B0 => O2) = (0:0:0,0:0:0);
  endspecify

endmodule

module MAC16_B ( input CLK, CE, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, 
    C5, C4, C3, C2, C1, C0, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, 
    A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, B6, B5, B4, 
    B3, B2, B1, B0, D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, 
    D2, D1, D0, AHOLD, BHOLD, CHOLD, DHOLD, IRSTTOP, IRSTBOT, ORSTTOP, ORSTBOT, 
    OLOADTOP, OLOADBOT, ADDSUBTOP, ADDSUBBOT, OHOLDTOP, OHOLDBOT, CI, ACCUMCI, 
    SIGNEXTIN, output O31, O30, O29, O28, O27, O26, O25, O24, O23, O22, O21, 
    O20, O19, O18, O17, O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0, CO, ACCUMCO, SIGNEXTOUT );

  MAC16 INST10( .CLK(CLK), .CE(CE), .C15(C15), .C14(C14), .C13(C13), .C12(C12), 
    .C11(C11), .C10(C10), .C9(C9), .C8(C8), .C7(C7), .C6(C6), .C5(C5), .C4(C4), 
    .C3(C3), .C2(C2), .C1(C1), .C0(C0), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(D15), 
    .D14(D14), .D13(D13), .D12(D12), .D11(D11), .D10(D10), .D9(D9), .D8(D8), 
    .D7(D7), .D6(D6), .D5(D5), .D4(D4), .D3(D3), .D2(D2), .D1(D1), .D0(D0), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(CHOLD), .DHOLD(DHOLD), 
    .IRSTTOP(IRSTTOP), .IRSTBOT(IRSTBOT), .ORSTTOP(ORSTTOP), .ORSTBOT(ORSTBOT), 
    .OLOADTOP(OLOADTOP), .OLOADBOT(OLOADBOT), .ADDSUBTOP(ADDSUBTOP), 
    .ADDSUBBOT(ADDSUBBOT), .OHOLDTOP(OHOLDTOP), .OHOLDBOT(OHOLDBOT), .CI(CI), 
    .ACCUMCI(ACCUMCI), .SIGNEXTIN(SIGNEXTIN), .O31(O31), .O30(O30), .O29(O29), 
    .O28(O28), .O27(O27), .O26(O26), .O25(O25), .O24(O24), .O23(O23), 
    .O22(O22), .O21(O21), .O20(O20), .O19(O19), .O18(O18), .O17(O17), 
    .O16(O16), .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), 
    .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(O0), .CO(CO), .ACCUMCO(ACCUMCO), 
    .SIGNEXTOUT(SIGNEXTOUT));
  defparam INST10.NEG_TRIGGER = "0b0";
  defparam INST10.A_REG = "0b0";
  defparam INST10.B_REG = "0b0";
  defparam INST10.C_REG = "0b0";
  defparam INST10.D_REG = "0b0";
  defparam INST10.TOP_8x8_MULT_REG = "0b0";
  defparam INST10.BOT_8x8_MULT_REG = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG1 = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG2 = "0b0";
  defparam INST10.TOPOUTPUT_SELECT = "0b11";
  defparam INST10.TOPADDSUB_LOWERINPUT = "0b00";
  defparam INST10.TOPADDSUB_UPPERINPUT = "0b0";
  defparam INST10.TOPADDSUB_CARRYSELECT = "0b00";
  defparam INST10.BOTOUTPUT_SELECT = "0b11";
  defparam INST10.BOTADDSUB_LOWERINPUT = "0b00";
  defparam INST10.BOTADDSUB_UPPERINPUT = "0b0";
  defparam INST10.BOTADDSUB_CARRYSELECT = "0b00";
  defparam INST10.MODE_8x8 = "0b0";
  defparam INST10.A_SIGNED = "0b0";
  defparam INST10.B_SIGNED = "0b0";
endmodule

module my_pll_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTCORE );
  wire   GNDI;

  PLL_B_B \my_pll/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTCORE) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.DIVR = "0";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module clk_12MHz ( output PADDI, input clk_12MHz );
  wire   GNDI;

  BB_B_B \clk_12MHz_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(clk_12MHz));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (clk_12MHz => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module start ( output PADDI, input start );
  wire   GNDI;

  BB_B_B \start_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(start));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (start => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_VSYNC_IN ( output PADDI, input CAMERA_VSYNC_IN );
  wire   GNDI;

  BB_B_B \CAMERA_VSYNC_IN_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERA_VSYNC_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERA_VSYNC_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_HREF_IN ( output PADDI, input CAMERA_HREF_IN );
  wire   GNDI;

  BB_B_B \CAMERA_HREF_IN_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERA_HREF_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERA_HREF_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_0_ ( output PADDI, input CAMERADATAIN0 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_1_ ( output PADDI, input CAMERADATAIN1 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_2_ ( output PADDI, input CAMERADATAIN2 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[2].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN2 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_3_ ( output PADDI, input CAMERADATAIN3 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[3].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN3 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_4_ ( output PADDI, input CAMERADATAIN4 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[4].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN4 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_5_ ( output PADDI, input CAMERADATAIN5 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[5].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN5 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_6_ ( output PADDI, input CAMERADATAIN6 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[6].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN6 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_7_ ( output PADDI, input CAMERADATAIN7 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[7].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN7 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_PCLOCK ( output PADDI, input CAMERA_PCLOCK );
  wire   GNDI;

  BB_B_B \CAMERA_PCLOCK_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERA_PCLOCK));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERA_PCLOCK => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module sioc ( input PADDT, PADDO, output sioc );

  BB_B_B \sioc_obuft.bb_inst ( .T_N(PADDT), .I(PADDO), .O(), .B(sioc));

  specify
    (PADDT => sioc) = (0:0:0,0:0:0);
    (PADDO => sioc) = (0:0:0,0:0:0);
  endspecify

endmodule

module siod ( input PADDT, PADDO, output siod );

  BB_B_B \siod_obuft.bb_inst ( .T_N(PADDT), .I(PADDO), .O(), .B(siod));

  specify
    (PADDT => siod) = (0:0:0,0:0:0);
    (PADDO => siod) = (0:0:0,0:0:0);
  endspecify

endmodule

module done ( input PADDO, output done );
  wire   VCCI;

  BB_B_B \done_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(done));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => done) = (0:0:0,0:0:0);
  endspecify

endmodule

module frame_done ( input PADDO, output frame_done );
  wire   VCCI;

  BB_B_B \frame_done_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(frame_done));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => frame_done) = (0:0:0,0:0:0);
  endspecify

endmodule

module pixel_valid ( input PADDO, output pixel_valid );
  wire   VCCI;

  BB_B_B \pixel_valid_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(pixel_valid));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => pixel_valid) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_state_0_ ( input PADDO, output debugstate0 );
  wire   VCCI;

  BB_B_B \debug_state_obuf[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(debugstate0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debugstate0) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_state_1_ ( input PADDO, output debugstate1 );
  wire   VCCI;

  BB_B_B \debug_state_obuf[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(debugstate1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debugstate1) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_0_ ( input PADDO, output RGB0 );
  wire   VCCI;

  BB_B_B \RGB_obuf[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB0) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_1_ ( input PADDO, output RGB1 );
  wire   VCCI;

  BB_B_B \RGB_obuf[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB1) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_2_ ( input PADDO, output RGB2 );
  wire   VCCI;

  BB_B_B \RGB_obuf[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB2) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_3_ ( input PADDO, output RGB3 );
  wire   VCCI;

  BB_B_B \RGB_obuf[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB3) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_4_ ( input PADDO, output RGB4 );
  wire   VCCI;

  BB_B_B \RGB_obuf[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB4) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_5_ ( input PADDO, output RGB5 );
  wire   VCCI;

  BB_B_B \RGB_obuf[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB5) = (0:0:0,0:0:0);
  endspecify

endmodule

module VGA_HSYNC ( input PADDO, output VGA_HSYNC );
  wire   VCCI;

  BB_B_B \VGA_HSYNC_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VGA_HSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VGA_HSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module VGA_VSYNC ( input PADDO, output VGA_VSYNC );
  wire   VCCI;

  BB_B_B \VGA_VSYNC_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VGA_VSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VGA_VSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module clk_25MHz ( input PADDO, output clk_25MHz );
  wire   VCCI;

  BB_B_B \clk_25MHz_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(clk_25MHz));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => clk_25MHz) = (0:0:0,0:0:0);
  endspecify

endmodule

module TEST ( input PADDO, output TEST );
  wire   VCCI;

  BB_B_B \TEST_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(TEST));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => TEST) = (0:0:0,0:0:0);
  endspecify

endmodule

module SPRAM2_vfb_b_inst ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, 
    ADDRESS9, ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, 
    ADDRESS2, ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, 
    DATAIN11, DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, 
    DATAIN3, DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, 
    MASKWREN0, WREN, CHIPSELECT, CLOCK, POWEROFF_N, output DATAOUT15, 
    DATAOUT14, DATAOUT7, DATAOUT6 );
  wire   GNDI, ADDRESS13_dly, CLOCK_dly, ADDRESS12_dly, ADDRESS11_dly, 
         ADDRESS10_dly, ADDRESS9_dly, ADDRESS8_dly, ADDRESS7_dly, ADDRESS6_dly, 
         ADDRESS5_dly, ADDRESS4_dly, ADDRESS3_dly, ADDRESS2_dly, ADDRESS1_dly, 
         ADDRESS0_dly, DATAIN15_dly, DATAIN14_dly, DATAIN13_dly, DATAIN12_dly, 
         DATAIN11_dly, DATAIN10_dly, DATAIN9_dly, DATAIN8_dly, DATAIN7_dly, 
         DATAIN6_dly, DATAIN5_dly, DATAIN4_dly, DATAIN3_dly, DATAIN2_dly, 
         DATAIN1_dly, DATAIN0_dly, MASKWREN3_dly, MASKWREN2_dly, MASKWREN1_dly, 
         MASKWREN0_dly, WREN_dly, CHIPSELECT_dly, POWEROFF_N_dly;

  VFB_B_B \SPRAM2.vfb_b_inst ( .ADDRESS13(ADDRESS13_dly), 
    .ADDRESS12(ADDRESS12_dly), .ADDRESS11(ADDRESS11_dly), 
    .ADDRESS10(ADDRESS10_dly), .ADDRESS9(ADDRESS9_dly), 
    .ADDRESS8(ADDRESS8_dly), .ADDRESS7(ADDRESS7_dly), .ADDRESS6(ADDRESS6_dly), 
    .ADDRESS5(ADDRESS5_dly), .ADDRESS4(ADDRESS4_dly), .ADDRESS3(ADDRESS3_dly), 
    .ADDRESS2(ADDRESS2_dly), .ADDRESS1(ADDRESS1_dly), .ADDRESS0(ADDRESS0_dly), 
    .DATAIN15(DATAIN15_dly), .DATAIN14(DATAIN14_dly), .DATAIN13(DATAIN13_dly), 
    .DATAIN12(DATAIN12_dly), .DATAIN11(DATAIN11_dly), .DATAIN10(DATAIN10_dly), 
    .DATAIN9(DATAIN9_dly), .DATAIN8(DATAIN8_dly), .DATAIN7(DATAIN7_dly), 
    .DATAIN6(DATAIN6_dly), .DATAIN5(DATAIN5_dly), .DATAIN4(DATAIN4_dly), 
    .DATAIN3(DATAIN3_dly), .DATAIN2(DATAIN2_dly), .DATAIN1(DATAIN1_dly), 
    .DATAIN0(DATAIN0_dly), .MASKWREN3(MASKWREN3_dly), 
    .MASKWREN2(MASKWREN2_dly), .MASKWREN1(MASKWREN1_dly), 
    .MASKWREN0(MASKWREN0_dly), .WREN(WREN_dly), .CHIPSELECT(CHIPSELECT_dly), 
    .CLOCK(CLOCK_dly), .RDMARGINEN(GNDI), .RDMARGIN3(GNDI), .RDMARGIN2(GNDI), 
    .RDMARGIN1(GNDI), .RDMARGIN0(GNDI), .STANDBY(GNDI), .SLEEP(GNDI), 
    .POWEROFF_N(POWEROFF_N_dly), .TEST(GNDI), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(), .DATAOUT12(), .DATAOUT11(), 
    .DATAOUT10(), .DATAOUT9(), .DATAOUT8(), .DATAOUT7(DATAOUT7), 
    .DATAOUT6(DATAOUT6), .DATAOUT5(), .DATAOUT4(), .DATAOUT3(), .DATAOUT2(), 
    .DATAOUT1(), .DATAOUT0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLOCK => DATAOUT15) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT14) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT7) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT6) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT15) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT14) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT7) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT6) = (0:0:0,0:0:0);
    $setuphold 
      (posedge CLOCK, ADDRESS13, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS13_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS12, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS12_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS11, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS11_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS10, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS10_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS9, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS9_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS8, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS8_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS7, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS7_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS6, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS6_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS5, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS5_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS4, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS4_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS3, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS3_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS2, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS2_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS1, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS1_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS0, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS0_dly);
    $setuphold 
      (posedge CLOCK, DATAIN15, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN15_dly);
    $setuphold 
      (posedge CLOCK, DATAIN14, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN14_dly);
    $setuphold 
      (posedge CLOCK, DATAIN13, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN13_dly);
    $setuphold 
      (posedge CLOCK, DATAIN12, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN12_dly);
    $setuphold 
      (posedge CLOCK, DATAIN11, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN11_dly);
    $setuphold 
      (posedge CLOCK, DATAIN10, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN10_dly);
    $setuphold 
      (posedge CLOCK, DATAIN9, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN9_dly);
    $setuphold 
      (posedge CLOCK, DATAIN8, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN8_dly);
    $setuphold 
      (posedge CLOCK, DATAIN7, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN7_dly);
    $setuphold 
      (posedge CLOCK, DATAIN6, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN6_dly);
    $setuphold 
      (posedge CLOCK, DATAIN5, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN5_dly);
    $setuphold 
      (posedge CLOCK, DATAIN4, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN4_dly);
    $setuphold 
      (posedge CLOCK, DATAIN3, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN3_dly);
    $setuphold 
      (posedge CLOCK, DATAIN2, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN2_dly);
    $setuphold 
      (posedge CLOCK, DATAIN1, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN1_dly);
    $setuphold 
      (posedge CLOCK, DATAIN0, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN0_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN3, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN3_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN2, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN2_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN1, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN1_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN0, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN0_dly);
    $setuphold (posedge CLOCK, WREN, 0:0:0, 0:0:0,,,, CLOCK_dly, WREN_dly);
    $setuphold 
      (posedge CLOCK, CHIPSELECT, 0:0:0, 0:0:0,,,, CLOCK_dly, CHIPSELECT_dly);
    $setuphold 
      (posedge CLOCK, POWEROFF_N, 0:0:0, 0:0:0,,,, CLOCK_dly, POWEROFF_N_dly);
    $width (posedge CLOCK, 0:0:0);
    $width (negedge CLOCK, 0:0:0);
  endspecify

endmodule

module VFB_B_B ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, ADDRESS9, 
    ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, ADDRESS2, 
    ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, DATAIN11, 
    DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, DATAIN3, 
    DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, MASKWREN0, 
    WREN, CHIPSELECT, CLOCK, RDMARGINEN, RDMARGIN3, RDMARGIN2, RDMARGIN1, 
    RDMARGIN0, STANDBY, SLEEP, POWEROFF_N, TEST, output DATAOUT15, DATAOUT14, 
    DATAOUT13, DATAOUT12, DATAOUT11, DATAOUT10, DATAOUT9, DATAOUT8, DATAOUT7, 
    DATAOUT6, DATAOUT5, DATAOUT4, DATAOUT3, DATAOUT2, DATAOUT1, DATAOUT0 );

  VFB_B INST10( .ADDRESS13(ADDRESS13), .ADDRESS12(ADDRESS12), 
    .ADDRESS11(ADDRESS11), .ADDRESS10(ADDRESS10), .ADDRESS9(ADDRESS9), 
    .ADDRESS8(ADDRESS8), .ADDRESS7(ADDRESS7), .ADDRESS6(ADDRESS6), 
    .ADDRESS5(ADDRESS5), .ADDRESS4(ADDRESS4), .ADDRESS3(ADDRESS3), 
    .ADDRESS2(ADDRESS2), .ADDRESS1(ADDRESS1), .ADDRESS0(ADDRESS0), 
    .DATAIN15(DATAIN15), .DATAIN14(DATAIN14), .DATAIN13(DATAIN13), 
    .DATAIN12(DATAIN12), .DATAIN11(DATAIN11), .DATAIN10(DATAIN10), 
    .DATAIN9(DATAIN9), .DATAIN8(DATAIN8), .DATAIN7(DATAIN7), .DATAIN6(DATAIN6), 
    .DATAIN5(DATAIN5), .DATAIN4(DATAIN4), .DATAIN3(DATAIN3), .DATAIN2(DATAIN2), 
    .DATAIN1(DATAIN1), .DATAIN0(DATAIN0), .MASKWREN3(MASKWREN3), 
    .MASKWREN2(MASKWREN2), .MASKWREN1(MASKWREN1), .MASKWREN0(MASKWREN0), 
    .WREN(WREN), .CHIPSELECT(CHIPSELECT), .CLOCK(CLOCK), 
    .RDMARGINEN(RDMARGINEN), .RDMARGIN3(RDMARGIN3), .RDMARGIN2(RDMARGIN2), 
    .RDMARGIN1(RDMARGIN1), .RDMARGIN0(RDMARGIN0), .STANDBY(STANDBY), 
    .SLEEP(SLEEP), .POWEROFF_N(POWEROFF_N), .TEST(TEST), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(DATAOUT13), .DATAOUT12(DATAOUT12), 
    .DATAOUT11(DATAOUT11), .DATAOUT10(DATAOUT10), .DATAOUT9(DATAOUT9), 
    .DATAOUT8(DATAOUT8), .DATAOUT7(DATAOUT7), .DATAOUT6(DATAOUT6), 
    .DATAOUT5(DATAOUT5), .DATAOUT4(DATAOUT4), .DATAOUT3(DATAOUT3), 
    .DATAOUT2(DATAOUT2), .DATAOUT1(DATAOUT1), .DATAOUT0(DATAOUT0));
endmodule

module SPRAM1_vfb_b_inst ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, 
    ADDRESS9, ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, 
    ADDRESS2, ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, 
    DATAIN11, DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, 
    DATAIN3, DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, 
    MASKWREN0, WREN, CHIPSELECT, CLOCK, POWEROFF_N, output DATAOUT15, 
    DATAOUT14, DATAOUT7, DATAOUT6 );
  wire   GNDI, ADDRESS13_dly, CLOCK_dly, ADDRESS12_dly, ADDRESS11_dly, 
         ADDRESS10_dly, ADDRESS9_dly, ADDRESS8_dly, ADDRESS7_dly, ADDRESS6_dly, 
         ADDRESS5_dly, ADDRESS4_dly, ADDRESS3_dly, ADDRESS2_dly, ADDRESS1_dly, 
         ADDRESS0_dly, DATAIN15_dly, DATAIN14_dly, DATAIN13_dly, DATAIN12_dly, 
         DATAIN11_dly, DATAIN10_dly, DATAIN9_dly, DATAIN8_dly, DATAIN7_dly, 
         DATAIN6_dly, DATAIN5_dly, DATAIN4_dly, DATAIN3_dly, DATAIN2_dly, 
         DATAIN1_dly, DATAIN0_dly, MASKWREN3_dly, MASKWREN2_dly, MASKWREN1_dly, 
         MASKWREN0_dly, WREN_dly, CHIPSELECT_dly, POWEROFF_N_dly;

  VFB_B_B \SPRAM1.vfb_b_inst ( .ADDRESS13(ADDRESS13_dly), 
    .ADDRESS12(ADDRESS12_dly), .ADDRESS11(ADDRESS11_dly), 
    .ADDRESS10(ADDRESS10_dly), .ADDRESS9(ADDRESS9_dly), 
    .ADDRESS8(ADDRESS8_dly), .ADDRESS7(ADDRESS7_dly), .ADDRESS6(ADDRESS6_dly), 
    .ADDRESS5(ADDRESS5_dly), .ADDRESS4(ADDRESS4_dly), .ADDRESS3(ADDRESS3_dly), 
    .ADDRESS2(ADDRESS2_dly), .ADDRESS1(ADDRESS1_dly), .ADDRESS0(ADDRESS0_dly), 
    .DATAIN15(DATAIN15_dly), .DATAIN14(DATAIN14_dly), .DATAIN13(DATAIN13_dly), 
    .DATAIN12(DATAIN12_dly), .DATAIN11(DATAIN11_dly), .DATAIN10(DATAIN10_dly), 
    .DATAIN9(DATAIN9_dly), .DATAIN8(DATAIN8_dly), .DATAIN7(DATAIN7_dly), 
    .DATAIN6(DATAIN6_dly), .DATAIN5(DATAIN5_dly), .DATAIN4(DATAIN4_dly), 
    .DATAIN3(DATAIN3_dly), .DATAIN2(DATAIN2_dly), .DATAIN1(DATAIN1_dly), 
    .DATAIN0(DATAIN0_dly), .MASKWREN3(MASKWREN3_dly), 
    .MASKWREN2(MASKWREN2_dly), .MASKWREN1(MASKWREN1_dly), 
    .MASKWREN0(MASKWREN0_dly), .WREN(WREN_dly), .CHIPSELECT(CHIPSELECT_dly), 
    .CLOCK(CLOCK_dly), .RDMARGINEN(GNDI), .RDMARGIN3(GNDI), .RDMARGIN2(GNDI), 
    .RDMARGIN1(GNDI), .RDMARGIN0(GNDI), .STANDBY(GNDI), .SLEEP(GNDI), 
    .POWEROFF_N(POWEROFF_N_dly), .TEST(GNDI), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(), .DATAOUT12(), .DATAOUT11(), 
    .DATAOUT10(), .DATAOUT9(), .DATAOUT8(), .DATAOUT7(DATAOUT7), 
    .DATAOUT6(DATAOUT6), .DATAOUT5(), .DATAOUT4(), .DATAOUT3(), .DATAOUT2(), 
    .DATAOUT1(), .DATAOUT0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLOCK => DATAOUT15) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT14) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT7) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT6) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT15) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT14) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT7) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT6) = (0:0:0,0:0:0);
    $setuphold 
      (posedge CLOCK, ADDRESS13, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS13_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS12, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS12_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS11, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS11_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS10, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS10_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS9, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS9_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS8, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS8_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS7, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS7_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS6, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS6_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS5, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS5_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS4, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS4_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS3, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS3_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS2, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS2_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS1, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS1_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS0, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS0_dly);
    $setuphold 
      (posedge CLOCK, DATAIN15, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN15_dly);
    $setuphold 
      (posedge CLOCK, DATAIN14, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN14_dly);
    $setuphold 
      (posedge CLOCK, DATAIN13, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN13_dly);
    $setuphold 
      (posedge CLOCK, DATAIN12, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN12_dly);
    $setuphold 
      (posedge CLOCK, DATAIN11, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN11_dly);
    $setuphold 
      (posedge CLOCK, DATAIN10, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN10_dly);
    $setuphold 
      (posedge CLOCK, DATAIN9, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN9_dly);
    $setuphold 
      (posedge CLOCK, DATAIN8, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN8_dly);
    $setuphold 
      (posedge CLOCK, DATAIN7, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN7_dly);
    $setuphold 
      (posedge CLOCK, DATAIN6, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN6_dly);
    $setuphold 
      (posedge CLOCK, DATAIN5, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN5_dly);
    $setuphold 
      (posedge CLOCK, DATAIN4, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN4_dly);
    $setuphold 
      (posedge CLOCK, DATAIN3, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN3_dly);
    $setuphold 
      (posedge CLOCK, DATAIN2, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN2_dly);
    $setuphold 
      (posedge CLOCK, DATAIN1, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN1_dly);
    $setuphold 
      (posedge CLOCK, DATAIN0, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN0_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN3, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN3_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN2, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN2_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN1, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN1_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN0, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN0_dly);
    $setuphold (posedge CLOCK, WREN, 0:0:0, 0:0:0,,,, CLOCK_dly, WREN_dly);
    $setuphold 
      (posedge CLOCK, CHIPSELECT, 0:0:0, 0:0:0,,,, CLOCK_dly, CHIPSELECT_dly);
    $setuphold 
      (posedge CLOCK, POWEROFF_N, 0:0:0, 0:0:0,,,, CLOCK_dly, POWEROFF_N_dly);
    $width (posedge CLOCK, 0:0:0);
    $width (negedge CLOCK, 0:0:0);
  endspecify

endmodule

module SPRAM0_vfb_b_inst ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, 
    ADDRESS9, ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, 
    ADDRESS2, ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, 
    DATAIN11, DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, 
    DATAIN3, DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, 
    MASKWREN0, WREN, CHIPSELECT, CLOCK, POWEROFF_N, output DATAOUT15, 
    DATAOUT14, DATAOUT7, DATAOUT6 );
  wire   GNDI, ADDRESS13_dly, CLOCK_dly, ADDRESS12_dly, ADDRESS11_dly, 
         ADDRESS10_dly, ADDRESS9_dly, ADDRESS8_dly, ADDRESS7_dly, ADDRESS6_dly, 
         ADDRESS5_dly, ADDRESS4_dly, ADDRESS3_dly, ADDRESS2_dly, ADDRESS1_dly, 
         ADDRESS0_dly, DATAIN15_dly, DATAIN14_dly, DATAIN13_dly, DATAIN12_dly, 
         DATAIN11_dly, DATAIN10_dly, DATAIN9_dly, DATAIN8_dly, DATAIN7_dly, 
         DATAIN6_dly, DATAIN5_dly, DATAIN4_dly, DATAIN3_dly, DATAIN2_dly, 
         DATAIN1_dly, DATAIN0_dly, MASKWREN3_dly, MASKWREN2_dly, MASKWREN1_dly, 
         MASKWREN0_dly, WREN_dly, CHIPSELECT_dly, POWEROFF_N_dly;

  VFB_B_B \SPRAM0.vfb_b_inst ( .ADDRESS13(ADDRESS13_dly), 
    .ADDRESS12(ADDRESS12_dly), .ADDRESS11(ADDRESS11_dly), 
    .ADDRESS10(ADDRESS10_dly), .ADDRESS9(ADDRESS9_dly), 
    .ADDRESS8(ADDRESS8_dly), .ADDRESS7(ADDRESS7_dly), .ADDRESS6(ADDRESS6_dly), 
    .ADDRESS5(ADDRESS5_dly), .ADDRESS4(ADDRESS4_dly), .ADDRESS3(ADDRESS3_dly), 
    .ADDRESS2(ADDRESS2_dly), .ADDRESS1(ADDRESS1_dly), .ADDRESS0(ADDRESS0_dly), 
    .DATAIN15(DATAIN15_dly), .DATAIN14(DATAIN14_dly), .DATAIN13(DATAIN13_dly), 
    .DATAIN12(DATAIN12_dly), .DATAIN11(DATAIN11_dly), .DATAIN10(DATAIN10_dly), 
    .DATAIN9(DATAIN9_dly), .DATAIN8(DATAIN8_dly), .DATAIN7(DATAIN7_dly), 
    .DATAIN6(DATAIN6_dly), .DATAIN5(DATAIN5_dly), .DATAIN4(DATAIN4_dly), 
    .DATAIN3(DATAIN3_dly), .DATAIN2(DATAIN2_dly), .DATAIN1(DATAIN1_dly), 
    .DATAIN0(DATAIN0_dly), .MASKWREN3(MASKWREN3_dly), 
    .MASKWREN2(MASKWREN2_dly), .MASKWREN1(MASKWREN1_dly), 
    .MASKWREN0(MASKWREN0_dly), .WREN(WREN_dly), .CHIPSELECT(CHIPSELECT_dly), 
    .CLOCK(CLOCK_dly), .RDMARGINEN(GNDI), .RDMARGIN3(GNDI), .RDMARGIN2(GNDI), 
    .RDMARGIN1(GNDI), .RDMARGIN0(GNDI), .STANDBY(GNDI), .SLEEP(GNDI), 
    .POWEROFF_N(POWEROFF_N_dly), .TEST(GNDI), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(), .DATAOUT12(), .DATAOUT11(), 
    .DATAOUT10(), .DATAOUT9(), .DATAOUT8(), .DATAOUT7(DATAOUT7), 
    .DATAOUT6(DATAOUT6), .DATAOUT5(), .DATAOUT4(), .DATAOUT3(), .DATAOUT2(), 
    .DATAOUT1(), .DATAOUT0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLOCK => DATAOUT15) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT14) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT7) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT6) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT15) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT14) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT7) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT6) = (0:0:0,0:0:0);
    $setuphold 
      (posedge CLOCK, ADDRESS13, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS13_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS12, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS12_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS11, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS11_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS10, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS10_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS9, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS9_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS8, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS8_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS7, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS7_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS6, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS6_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS5, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS5_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS4, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS4_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS3, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS3_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS2, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS2_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS1, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS1_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS0, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS0_dly);
    $setuphold 
      (posedge CLOCK, DATAIN15, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN15_dly);
    $setuphold 
      (posedge CLOCK, DATAIN14, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN14_dly);
    $setuphold 
      (posedge CLOCK, DATAIN13, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN13_dly);
    $setuphold 
      (posedge CLOCK, DATAIN12, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN12_dly);
    $setuphold 
      (posedge CLOCK, DATAIN11, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN11_dly);
    $setuphold 
      (posedge CLOCK, DATAIN10, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN10_dly);
    $setuphold 
      (posedge CLOCK, DATAIN9, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN9_dly);
    $setuphold 
      (posedge CLOCK, DATAIN8, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN8_dly);
    $setuphold 
      (posedge CLOCK, DATAIN7, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN7_dly);
    $setuphold 
      (posedge CLOCK, DATAIN6, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN6_dly);
    $setuphold 
      (posedge CLOCK, DATAIN5, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN5_dly);
    $setuphold 
      (posedge CLOCK, DATAIN4, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN4_dly);
    $setuphold 
      (posedge CLOCK, DATAIN3, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN3_dly);
    $setuphold 
      (posedge CLOCK, DATAIN2, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN2_dly);
    $setuphold 
      (posedge CLOCK, DATAIN1, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN1_dly);
    $setuphold 
      (posedge CLOCK, DATAIN0, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN0_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN3, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN3_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN2, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN2_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN1, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN1_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN0, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN0_dly);
    $setuphold (posedge CLOCK, WREN, 0:0:0, 0:0:0,,,, CLOCK_dly, WREN_dly);
    $setuphold 
      (posedge CLOCK, CHIPSELECT, 0:0:0, 0:0:0,,,, CLOCK_dly, CHIPSELECT_dly);
    $setuphold 
      (posedge CLOCK, POWEROFF_N, 0:0:0, 0:0:0,,,, CLOCK_dly, POWEROFF_N_dly);
    $width (posedge CLOCK, 0:0:0);
    $width (negedge CLOCK, 0:0:0);
  endspecify

endmodule
