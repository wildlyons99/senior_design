
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o full_vga_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui full_vga_impl_1.udb 
// Netlist created on Tue Apr 15 20:03:03 2025
// Netlist written on Tue Apr 15 20:03:10 2025
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( clk_12MHz, start, CAMERA_VSYNC_IN, CAMERA_HREF_IN, CAMERA_DATA_IN, 
             CAMERA_PCLOCK, debug_state, RGB, VGA_HSYNC, VGA_VSYNC, clk_25MHz );
  input  clk_12MHz, start, CAMERA_VSYNC_IN, CAMERA_HREF_IN;
  input  [7:0] CAMERA_DATA_IN;
  input  CAMERA_PCLOCK;
  output [1:0] debug_state;
  output [5:0] RGB;
  output VGA_HSYNC, VGA_VSYNC, clk_25MHz;
  wire   \vga_inst.un3_row_1_cry_8_c_0_S0 , \vga_inst.un3_row_1_cry_8_c_0.CO0 , 
         \row[9] , \vga_inst.un3_row_1_cry_7 , \row[8] , \vga_inst.col11 , 
         clk_25MHz_c, \vga_inst.N_224 , \vga_inst.un3_row_1_cry_6_c_0_S1 , 
         \vga_inst.un3_row_1_cry_6_c_0_S0 , \vga_inst.un3_row_1_cry_6_c_0.CO0 , 
         \row[7] , \vga_inst.un3_row_1_cry_5 , \row[6] , 
         \vga_inst.un3_row_1_cry_4_c_0_S1 , \vga_inst.un3_row_1_cry_4_c_0_S0 , 
         \vga_inst.un3_row_1_cry_4_c_0.CO0 , \row[5] , 
         \vga_inst.un3_row_1_cry_3 , \row[4] , 
         \vga_inst.un3_row_1_cry_2_c_0.CO0 , \row[3] , 
         \vga_inst.un3_row_1_cry_1 , \row[2] , \vga_inst.N_217 , 
         \vga_inst.N_218 , \vga_inst.un3_row_1_cry_1_c_0_S1 , 
         \vga_inst.un3_row_1_cry_1_c_0.CO0 , \row[1] , \row[0] , 
         \vga_inst.col_3[9] , \vga_inst.col_3[8] , 
         \vga_inst.un2_col_cry_8_c_0.CO0 , \col[9] , \vga_inst.un2_col_cry_7 , 
         \col[8] , \vga_inst.un2_col_cry_6_c_0_S1 , 
         \vga_inst.un2_col_cry_6_c_0_S0 , \vga_inst.un2_col_cry_6_c_0.CO0 , 
         \col[7] , \vga_inst.un2_col_cry_5 , \vga_inst.col_Z[6] , 
         \vga_inst.col_3[5] , \vga_inst.un2_col_cry_4_c_0_S0 , 
         \vga_inst.un2_col_cry_4_c_0.CO0 , \vga_inst.col_Z[5] , 
         \vga_inst.un2_col_cry_3 , \vga_inst.col_Z[4] , 
         \vga_inst.un2_col_cry_2_c_0_S1 , \vga_inst.un2_col_cry_2_c_0_S0 , 
         \vga_inst.un2_col_cry_2_c_0.CO0 , \vga_inst.col_Z[3] , 
         \vga_inst.un2_col_cry_1 , \vga_inst.col_Z[2] , 
         \vga_inst.un2_col_cry_1_c_0_S1 , \vga_inst.un2_col_cry_1_c_0.CO0 , 
         \vga_inst.col_Z[1] , \vga_inst.col_Z[0] , 
         \read_address_cry_18_c_0.CO0 , un2_spram_address, \write_address[19] , 
         O12, \carry_pack.read_address_cry_17 , 
         \carry_pack.un2_spram_address_i , O11, \write_address[18] , 
         \spram_address[18] , \spram_address[19] , 
         \read_address_cry_16_c_0.CO0 , O10, \write_address[17] , 
         \carry_pack.read_address_cry_15 , O9, \write_address[16] , 
         \spram_address[16] , \spram_address[17] , 
         \read_address_cry_14_c_0.CO0 , O8, \write_address[15] , 
         \carry_pack.read_address_cry_13 , O7, \write_address[14] , 
         \spram_address[14] , \spram_address[15] , 
         \read_address_cry_12_c_0.CO0 , O6, \write_address[13] , 
         \carry_pack.read_address_cry_11 , O5, \write_address[12] , 
         \spram_address[12] , \spram_address[13] , 
         \read_address_cry_10_c_0.CO0 , O4, \write_address[11] , 
         \carry_pack.read_address_cry_9 , O3, \write_address[10] , 
         \spram_address[10] , \spram_address[11] , 
         \read_address_cry_8_c_0.CO0 , O2, \carry_pack.read_address_cry_7 , 
         \carry_pack.read_address[8] , \carry_pack.read_address[9] , 
         \read_address_cry_7_c_0.CO0 , \carry_pack.read_address[7] , 
         \write_address_RNO_S0[19] , \write_address_RNO[19].CO0 , 
         \carry_pack.un1_write_address_1_cry_18 , un1_fsm_state_3, 
         un1_write_address_1_cry_17_c_0_S1, un1_write_address_1_cry_17_c_0_S0, 
         \un1_write_address_1_cry_17_c_0.CO0 , 
         \carry_pack.un1_write_address_1_cry_16 , 
         un1_write_address_1_cry_15_c_0_S1, un1_write_address_1_cry_15_c_0_S0, 
         \un1_write_address_1_cry_15_c_0.CO0 , 
         \carry_pack.un1_write_address_1_cry_14 , 
         un1_write_address_1_cry_13_c_0_S1, un1_write_address_1_cry_13_c_0_S0, 
         \un1_write_address_1_cry_13_c_0.CO0 , 
         \carry_pack.un1_write_address_1_cry_12 , 
         un1_write_address_1_cry_11_c_0_S1, un1_write_address_1_cry_11_c_0_S0, 
         \un1_write_address_1_cry_11_c_0.CO0 , 
         \carry_pack.un1_write_address_1_cry_10 , 
         un1_write_address_1_cry_9_c_0_S1, un1_write_address_1_cry_9_c_0_S0, 
         \un1_write_address_1_cry_9_c_0.CO0 , 
         \carry_pack.un1_write_address_1_cry_8 , \write_address[9] , 
         un1_write_address_1_cry_7_c_0_S1, un1_write_address_1_cry_7_c_0_S0, 
         \un1_write_address_1_cry_7_c_0.CO0 , \write_address[8] , 
         \carry_pack.un1_write_address_1_cry_6 , \write_address[7] , 
         un1_write_address_1_cry_5_c_0_S1, un1_write_address_1_cry_5_c_0_S0, 
         \un1_write_address_1_cry_5_c_0.CO0 , \write_address[6] , 
         \carry_pack.un1_write_address_1_cry_4 , \write_address[5] , 
         un1_write_address_1_cry_3_c_0_S1, un1_write_address_1_cry_3_c_0_S0, 
         \un1_write_address_1_cry_3_c_0.CO0 , \write_address[4] , 
         \carry_pack.un1_write_address_1_cry_2 , \write_address[3] , 
         un1_write_address_1_cry_1_c_0_S1, un1_write_address_1_cry_1_c_0_S0, 
         \un1_write_address_1_cry_1_c_0.CO0 , \write_address[2] , 
         \carry_pack.un1_write_address_1_cry_0 , \write_address[1] , 
         un1_write_address_1_cry_0_c_0_S1, \un1_write_address_1_cry_0_c_0.CO0 , 
         \write_address[0] , un1_fsm_state27_2_0, \reader.CAMERA_VSYNC_IN_c_i , 
         CAMERA_VSYNC_IN_c, CAMERA_PCLOCK_c, \reader.FSM_state[0] , 
         \CAMERA_DATA_IN_c[6].sig_001.FeedThruLUT , 
         \CAMERA_DATA_IN_c[7].sig_000.FeedThruLUT , \CAMERA_DATA_IN_c[6] , 
         \CAMERA_DATA_IN_c[7] , \reader.pixel_half_RNIKJ0O , \pixel_data[7] , 
         \pixel_data[6] , \CAMERA_DATA_IN_c[4].sig_003.FeedThruLUT , 
         \CAMERA_DATA_IN_c[5].sig_002.FeedThruLUT , \CAMERA_DATA_IN_c[4] , 
         \CAMERA_DATA_IN_c[5] , \pixel_data[5] , \pixel_data[4] , 
         \CAMERA_DATA_IN_c[2].sig_005.FeedThruLUT , 
         \CAMERA_DATA_IN_c[3].sig_004.FeedThruLUT , \CAMERA_DATA_IN_c[2] , 
         \CAMERA_DATA_IN_c[3] , \pixel_data[3] , \pixel_data[2] , 
         \CAMERA_DATA_IN_c[0].sig_007.FeedThruLUT , 
         \CAMERA_DATA_IN_c[1].sig_006.FeedThruLUT , \CAMERA_DATA_IN_c[0] , 
         \CAMERA_DATA_IN_c[1] , \pixel_data[1] , \pixel_data[0] , 
         \vga_inst.row_3[9] , \vga_inst.row_3[3] , \vga_inst.m10_4 , 
         \vga_inst.m10_5 , \vga_inst.row_3[0] , \vga_inst.row_3[2] , 
         \vga_inst.col_RNO[0] , \bit_count_RNO[2] , \bit_count_RNO[3] , 
         \bit_count[1] , \bit_count[0] , un1_fsm_state30_1_0, \bit_count[2] , 
         un1_bit_count_axbxc3_1, \bit_count[3] , \bit_count_RNO[0] , 
         \bit_count_RNO[1] , \spram_data_in_2_0_i[14] , m15_2_03_2, 
         \pixel_accum[14] , \vga_inst.m2_0_03 , \vga_inst.m3_0_03 , 
         write_address_0_sqmuxa, \spram_data_in[15] , \spram_data_in[14] , 
         \spram_data_in_2_0_i[12] , \spram_data_in_2_0_i[13] , 
         \pixel_accum[12] , \vga_inst.m0_0_03 , \pixel_accum[13] , 
         \vga_inst.m1_0_03 , \spram_data_in[13] , \spram_data_in[12] , 
         \spram_data_in_2_0_i[10] , \spram_data_in_2_0_i[11] , 
         \pixel_accum[10] , \pixel_accum[11] , \spram_data_in[11] , 
         \spram_data_in[10] , \spram_data_in_2_0_i[8] , 
         \spram_data_in_2_0_i[9] , \pixel_accum[8] , \pixel_accum[9] , 
         \spram_data_in[9] , \spram_data_in[8] , \spram_data_in_2_0_i[6] , 
         \spram_data_in_2_0_i[7] , \pixel_accum[6] , \pixel_accum[7] , 
         \spram_data_in[7] , \spram_data_in[6] , \spram_data_in_2_0_i[4] , 
         \spram_data_in_2_0_i[5] , \pixel_accum[4] , \pixel_accum[5] , 
         \spram_data_in[5] , \spram_data_in[4] , \spram_data_in_2_0_i[2] , 
         \spram_data_in_2_0_i[3] , \pixel_accum[2] , \pixel_accum[3] , 
         \spram_data_in[3] , \spram_data_in[2] , \spram_data_in_2_0_i[0] , 
         \spram_data_in_2_0_i[1] , \pixel_accum[0] , \pixel_accum[1] , 
         \spram_data_in[1] , \spram_data_in[0] , \spram_data_in_2_0_i[12]$n2 , 
         \spram_data_in_2_0_i[13]$n1 , un1_fsm_state30_1_0_0, pixel_accum_30, 
         \spram_data_in_2_0_i[10]$n4 , \spram_data_in_2_0_i[11]$n3 , 
         \spram_data_in_2_0_i[8]$n6 , \spram_data_in_2_0_i[9]$n5 , 
         \spram_data_in_2_0_i[6]$n8 , \spram_data_in_2_0_i[7]$n7 , 
         \spram_data_in_2_0_i[4]$n10 , \spram_data_in_2_0_i[5]$n9 , 
         \spram_data_in_2_0_i[2]$n12 , \spram_data_in_2_0_i[3]$n11 , 
         \spram_data_in_2_0_i[0]$n14 , \spram_data_in_2_0_i[1]$n13 , 
         \start_c.sig_008.FeedThruLUT , start_c, un1_fsm_state_2, start_prev, 
         \fsm_state_cnst_1_0_.m3_N_7L11_1 , \debug_state_c[1] , 
         \debug_state_c[0] , \fsm_state_cnst_1_0_.m3_1 , m3_N_6L9, 
         \fsm_state_e_1_0[0] , \vga_inst.valid , \vga_inst.un9_RGB , 
         \vga_inst.spram_data_out_pmux , \fsm_state[2] , \RGB_c[3] , 
         fsm_state6, \fsm_state_e_1[0] , 
         \vga_inst.un1_write_addresslto19_a0_12 , m3_N_2L1, m3_N_3L3, m3_N_4L5, 
         spram_data_in12, pixel_valid, N_155_1, prev_pixel_valid, 
         \vga_inst.un1_write_addresslto19_a0_12_x1 , 
         \vga_inst.un1_write_addresslto19_a0_10 , 
         \vga_inst.un1_write_addresslto19_0_1_x1 , 
         \vga_inst.un1_write_addresslto19_0_1 , \spram_address[7] , 
         \vga_inst.spram_address[0] , \vga_inst.un1_fsm_state27_2_1 , 
         un1_fsm_state27_0, \vga_inst.un1_write_addresslto19_0_1_0 , 
         \vga_inst.un1_write_addresslto19_0_0 , 
         \vga_inst.un1_write_addresslto19_a0_8 , un1_write_address, 
         \vga_inst.spram_address[2] , \vga_inst.N_86 , \vga_inst.N_85 , 
         \vga_inst.spram_data_out[7] , \vga_inst.spram_data_out[15] , 
         \vga_inst.spram_address[3] , \vga_inst.N_87 , \data_out2[15] , 
         \vga_inst.N_56 , \data_out1[15] , \data_out0[15] , 
         \vga_inst.spram_data_out[3] , \vga_inst.spram_data_out[11] , 
         \data_out2[11] , \vga_inst.N_52 , \data_out1[11] , \data_out0[11] , 
         \vga_inst.spram_data_out[2] , \vga_inst.spram_data_out[10] , 
         \vga_inst.N_78 , \data_out2[10] , \vga_inst.N_51 , \data_out0[10] , 
         \data_out1[10] , \vga_inst.N_76 , \vga_inst.N_75 , 
         \vga_inst.spram_data_out[4] , \vga_inst.spram_data_out[12] , 
         \vga_inst.N_77 , \vga_inst.N_53 , \data_out2[12] , \data_out1[12] , 
         \data_out0[12] , \vga_inst.spram_data_out[0] , 
         \vga_inst.spram_data_out[8] , \vga_inst.N_93 , \data_out2[0] , 
         \data_out1[0] , \data_out0[0] , \vga_inst.N_68 , \vga_inst.N_59 , 
         \vga_inst.N_47_0 , \data_out2[13] , \vga_inst.N_162 , \data_out1[13] , 
         \data_out0[13] , \vga_inst.N_50_0 , \vga_inst.N_62 , \vga_inst.N_71 , 
         \vga_inst.N_44_0 , \data_out2[9] , \vga_inst.N_163 , \data_out1[9] , 
         \data_out0[9] , \vga_inst.N_160 , \vga_inst.N_161 , \vga_inst.N_65 , 
         \vga_inst.N_80 , \data_out2[14] , \vga_inst.N_74 , \data_out0[14] , 
         \data_out1[14] , \RGB_c[1] , \vga_inst.spram_address[1] , 
         \vga_inst.N_81 , \vga_inst.N_88 , \RGB_c[5] , fsm_state_scalar, 
         fsm_state_1_sqmuxa_1, \vga_inst.un10_validlt9_0 , \vga_inst.m22_5 , 
         \vga_inst.un5_validlt9 , \vga_inst.N_90_mux , \vga_inst.m37_5 , 
         \vga_inst.m22_4 , \vga_inst.m37_4 , VGA_VSYNC_0_i, 
         \vga_inst.un3_spram_data_inlto6_4 , \vga_inst.un3_spram_data_inlt7_0 , 
         N_155_2, \vga_inst.N_27_0 , VGA_HSYNC_c, \data_out2[1] , 
         \vga_inst.N_89 , \data_out1[1] , \data_out0[1] , \data_out2[5] , 
         \vga_inst.N_164 , \data_out1[5] , \data_out0[5] , \data_out2[6] , 
         \vga_inst.N_83_0 , \data_out1[6] , \data_out0[6] , \data_out2[2] , 
         \vga_inst.N_43 , \data_out1[2] , \data_out0[2] , \data_out2[3] , 
         \vga_inst.N_44 , \data_out1[3] , \data_out0[3] , \data_out2[4] , 
         \vga_inst.N_45 , \data_out1[4] , \data_out0[4] , \data_out2[7] , 
         \vga_inst.N_48 , \data_out0[7] , \data_out1[7] , \data_out2[8] , 
         \vga_inst.N_49 , \data_out1[8] , \data_out0[8] , fsm_state_0, 
         \fsm_state_cnst[1] , fsm_state_1_sqmuxa_1_i, 
         \spram_data_in_2_0_i[14]$n0 , WR, WR1, WR2, prev_pixel_valid_0, 
         prev_pixel_valid_3, \spram_address[9] , \spram_address[6] , 
         \spram_address[8] , \reader.pixel_half_1 , \reader.pixel_half , 
         CAMERA_HREF_IN_c, \reader.pixel_datace_0[0] , \spram_address[4] , 
         \spram_address[5] , WR_0, WR0, VCC, clk_12MHz_c, 
         \my_pll.lscc_pll_inst.intfbout_w ;

  vga_inst_SLICE_0 \vga_inst.SLICE_0 ( .DI0(\vga_inst.un3_row_1_cry_8_c_0_S0 ), 
    .D1(\vga_inst.un3_row_1_cry_8_c_0.CO0 ), .A1(\row[9] ), 
    .D0(\vga_inst.un3_row_1_cry_7 ), .B0(\row[8] ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .CIN0(\vga_inst.un3_row_1_cry_7 ), 
    .CIN1(\vga_inst.un3_row_1_cry_8_c_0.CO0 ), .Q0(\row[8] ), 
    .F0(\vga_inst.un3_row_1_cry_8_c_0_S0 ), .F1(\vga_inst.N_224 ), 
    .COUT0(\vga_inst.un3_row_1_cry_8_c_0.CO0 ));
  vga_inst_SLICE_1 \vga_inst.SLICE_1 ( .DI1(\vga_inst.un3_row_1_cry_6_c_0_S1 ), 
    .DI0(\vga_inst.un3_row_1_cry_6_c_0_S0 ), 
    .D1(\vga_inst.un3_row_1_cry_6_c_0.CO0 ), .B1(\row[7] ), 
    .D0(\vga_inst.un3_row_1_cry_5 ), .B0(\row[6] ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .CIN0(\vga_inst.un3_row_1_cry_5 ), 
    .CIN1(\vga_inst.un3_row_1_cry_6_c_0.CO0 ), .Q0(\row[6] ), .Q1(\row[7] ), 
    .F0(\vga_inst.un3_row_1_cry_6_c_0_S0 ), 
    .F1(\vga_inst.un3_row_1_cry_6_c_0_S1 ), .COUT1(\vga_inst.un3_row_1_cry_7 ), 
    .COUT0(\vga_inst.un3_row_1_cry_6_c_0.CO0 ));
  vga_inst_SLICE_2 \vga_inst.SLICE_2 ( .DI1(\vga_inst.un3_row_1_cry_4_c_0_S1 ), 
    .DI0(\vga_inst.un3_row_1_cry_4_c_0_S0 ), 
    .D1(\vga_inst.un3_row_1_cry_4_c_0.CO0 ), .B1(\row[5] ), 
    .D0(\vga_inst.un3_row_1_cry_3 ), .B0(\row[4] ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .CIN0(\vga_inst.un3_row_1_cry_3 ), 
    .CIN1(\vga_inst.un3_row_1_cry_4_c_0.CO0 ), .Q0(\row[4] ), .Q1(\row[5] ), 
    .F0(\vga_inst.un3_row_1_cry_4_c_0_S0 ), 
    .F1(\vga_inst.un3_row_1_cry_4_c_0_S1 ), .COUT1(\vga_inst.un3_row_1_cry_5 ), 
    .COUT0(\vga_inst.un3_row_1_cry_4_c_0.CO0 ));
  vga_inst_un3_row_1_cry_2_c_0_SLICE_3 \vga_inst.un3_row_1_cry_2_c_0.SLICE_3 
    ( .D1(\vga_inst.un3_row_1_cry_2_c_0.CO0 ), .B1(\row[3] ), 
    .D0(\vga_inst.un3_row_1_cry_1 ), .B0(\row[2] ), 
    .CIN0(\vga_inst.un3_row_1_cry_1 ), 
    .CIN1(\vga_inst.un3_row_1_cry_2_c_0.CO0 ), .F0(\vga_inst.N_217 ), 
    .F1(\vga_inst.N_218 ), .COUT1(\vga_inst.un3_row_1_cry_3 ), 
    .COUT0(\vga_inst.un3_row_1_cry_2_c_0.CO0 ));
  vga_inst_SLICE_4 \vga_inst.SLICE_4 ( .DI1(\vga_inst.un3_row_1_cry_1_c_0_S1 ), 
    .D1(\vga_inst.un3_row_1_cry_1_c_0.CO0 ), .B1(\row[1] ), .C0(\row[0] ), 
    .B0(\row[0] ), .CE(\vga_inst.col11 ), .CLK(clk_25MHz_c), 
    .CIN1(\vga_inst.un3_row_1_cry_1_c_0.CO0 ), .Q1(\row[1] ), 
    .F1(\vga_inst.un3_row_1_cry_1_c_0_S1 ), .COUT1(\vga_inst.un3_row_1_cry_1 ), 
    .COUT0(\vga_inst.un3_row_1_cry_1_c_0.CO0 ));
  vga_inst_SLICE_5 \vga_inst.SLICE_5 ( .DI1(\vga_inst.col_3[9] ), 
    .DI0(\vga_inst.col_3[8] ), .D1(\vga_inst.un2_col_cry_8_c_0.CO0 ), 
    .C1(\vga_inst.col11 ), .A1(\col[9] ), .D0(\vga_inst.un2_col_cry_7 ), 
    .B0(\col[8] ), .A0(\vga_inst.col11 ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_7 ), .CIN1(\vga_inst.un2_col_cry_8_c_0.CO0 ), 
    .Q0(\col[8] ), .Q1(\col[9] ), .F0(\vga_inst.col_3[8] ), 
    .F1(\vga_inst.col_3[9] ), .COUT0(\vga_inst.un2_col_cry_8_c_0.CO0 ));
  vga_inst_SLICE_6 \vga_inst.SLICE_6 ( .DI1(\vga_inst.un2_col_cry_6_c_0_S1 ), 
    .DI0(\vga_inst.un2_col_cry_6_c_0_S0 ), 
    .D1(\vga_inst.un2_col_cry_6_c_0.CO0 ), .B1(\col[7] ), 
    .D0(\vga_inst.un2_col_cry_5 ), .B0(\vga_inst.col_Z[6] ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_5 ), .CIN1(\vga_inst.un2_col_cry_6_c_0.CO0 ), 
    .Q0(\vga_inst.col_Z[6] ), .Q1(\col[7] ), 
    .F0(\vga_inst.un2_col_cry_6_c_0_S0 ), .F1(\vga_inst.un2_col_cry_6_c_0_S1 ), 
    .COUT1(\vga_inst.un2_col_cry_7 ), .COUT0(\vga_inst.un2_col_cry_6_c_0.CO0 ));
  vga_inst_SLICE_7 \vga_inst.SLICE_7 ( .DI1(\vga_inst.col_3[5] ), 
    .DI0(\vga_inst.un2_col_cry_4_c_0_S0 ), 
    .D1(\vga_inst.un2_col_cry_4_c_0.CO0 ), .B1(\vga_inst.col_Z[5] ), 
    .A1(\vga_inst.col11 ), .D0(\vga_inst.un2_col_cry_3 ), 
    .B0(\vga_inst.col_Z[4] ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_3 ), .CIN1(\vga_inst.un2_col_cry_4_c_0.CO0 ), 
    .Q0(\vga_inst.col_Z[4] ), .Q1(\vga_inst.col_Z[5] ), 
    .F0(\vga_inst.un2_col_cry_4_c_0_S0 ), .F1(\vga_inst.col_3[5] ), 
    .COUT1(\vga_inst.un2_col_cry_5 ), .COUT0(\vga_inst.un2_col_cry_4_c_0.CO0 ));
  vga_inst_SLICE_8 \vga_inst.SLICE_8 ( .DI1(\vga_inst.un2_col_cry_2_c_0_S1 ), 
    .DI0(\vga_inst.un2_col_cry_2_c_0_S0 ), 
    .D1(\vga_inst.un2_col_cry_2_c_0.CO0 ), .B1(\vga_inst.col_Z[3] ), 
    .D0(\vga_inst.un2_col_cry_1 ), .B0(\vga_inst.col_Z[2] ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_1 ), .CIN1(\vga_inst.un2_col_cry_2_c_0.CO0 ), 
    .Q0(\vga_inst.col_Z[2] ), .Q1(\vga_inst.col_Z[3] ), 
    .F0(\vga_inst.un2_col_cry_2_c_0_S0 ), .F1(\vga_inst.un2_col_cry_2_c_0_S1 ), 
    .COUT1(\vga_inst.un2_col_cry_3 ), .COUT0(\vga_inst.un2_col_cry_2_c_0.CO0 ));
  vga_inst_SLICE_9 \vga_inst.SLICE_9 ( .DI1(\vga_inst.un2_col_cry_1_c_0_S1 ), 
    .D1(\vga_inst.un2_col_cry_1_c_0.CO0 ), .B1(\vga_inst.col_Z[1] ), 
    .C0(\vga_inst.col_Z[0] ), .B0(\vga_inst.col_Z[0] ), .CLK(clk_25MHz_c), 
    .CIN1(\vga_inst.un2_col_cry_1_c_0.CO0 ), .Q1(\vga_inst.col_Z[1] ), 
    .F1(\vga_inst.un2_col_cry_1_c_0_S1 ), .COUT1(\vga_inst.un2_col_cry_1 ), 
    .COUT0(\vga_inst.un2_col_cry_1_c_0.CO0 ));
  read_address_cry_18_c_0_SLICE_10 \read_address_cry_18_c_0.SLICE_10 ( 
    .D1(\read_address_cry_18_c_0.CO0 ), .C1(un2_spram_address), 
    .B1(\write_address[19] ), .A1(O12), .D0(\carry_pack.read_address_cry_17 ), 
    .C0(\carry_pack.un2_spram_address_i ), .B0(O11), .A0(\write_address[18] ), 
    .CIN0(\carry_pack.read_address_cry_17 ), 
    .CIN1(\read_address_cry_18_c_0.CO0 ), .F0(\spram_address[18] ), 
    .F1(\spram_address[19] ), .COUT0(\read_address_cry_18_c_0.CO0 ));
  read_address_cry_16_c_0_SLICE_11 \read_address_cry_16_c_0.SLICE_11 ( 
    .D1(\read_address_cry_16_c_0.CO0 ), .C1(\carry_pack.un2_spram_address_i ), 
    .B1(O10), .A1(\write_address[17] ), .D0(\carry_pack.read_address_cry_15 ), 
    .C0(\carry_pack.un2_spram_address_i ), .B0(O9), .A0(\write_address[16] ), 
    .CIN0(\carry_pack.read_address_cry_15 ), 
    .CIN1(\read_address_cry_16_c_0.CO0 ), .F0(\spram_address[16] ), 
    .F1(\spram_address[17] ), .COUT1(\carry_pack.read_address_cry_17 ), 
    .COUT0(\read_address_cry_16_c_0.CO0 ));
  read_address_cry_14_c_0_SLICE_12 \read_address_cry_14_c_0.SLICE_12 ( 
    .D1(\read_address_cry_14_c_0.CO0 ), .C1(\carry_pack.un2_spram_address_i ), 
    .B1(O8), .A1(\write_address[15] ), .D0(\carry_pack.read_address_cry_13 ), 
    .C0(\carry_pack.un2_spram_address_i ), .B0(O7), .A0(\write_address[14] ), 
    .CIN0(\carry_pack.read_address_cry_13 ), 
    .CIN1(\read_address_cry_14_c_0.CO0 ), .F0(\spram_address[14] ), 
    .F1(\spram_address[15] ), .COUT1(\carry_pack.read_address_cry_15 ), 
    .COUT0(\read_address_cry_14_c_0.CO0 ));
  read_address_cry_12_c_0_SLICE_13 \read_address_cry_12_c_0.SLICE_13 ( 
    .D1(\read_address_cry_12_c_0.CO0 ), .C1(\carry_pack.un2_spram_address_i ), 
    .B1(O6), .A1(\write_address[13] ), .D0(\carry_pack.read_address_cry_11 ), 
    .C0(\carry_pack.un2_spram_address_i ), .B0(O5), .A0(\write_address[12] ), 
    .CIN0(\carry_pack.read_address_cry_11 ), 
    .CIN1(\read_address_cry_12_c_0.CO0 ), .F0(\spram_address[12] ), 
    .F1(\spram_address[13] ), .COUT1(\carry_pack.read_address_cry_13 ), 
    .COUT0(\read_address_cry_12_c_0.CO0 ));
  read_address_cry_10_c_0_SLICE_14 \read_address_cry_10_c_0.SLICE_14 ( 
    .D1(\read_address_cry_10_c_0.CO0 ), .C1(\carry_pack.un2_spram_address_i ), 
    .B1(O4), .A1(\write_address[11] ), .D0(\carry_pack.read_address_cry_9 ), 
    .C0(\carry_pack.un2_spram_address_i ), .B0(O3), .A0(\write_address[10] ), 
    .CIN0(\carry_pack.read_address_cry_9 ), 
    .CIN1(\read_address_cry_10_c_0.CO0 ), .F0(\spram_address[10] ), 
    .F1(\spram_address[11] ), .COUT1(\carry_pack.read_address_cry_11 ), 
    .COUT0(\read_address_cry_10_c_0.CO0 ));
  read_address_cry_8_c_0_SLICE_15 \read_address_cry_8_c_0.SLICE_15 ( 
    .D1(\read_address_cry_8_c_0.CO0 ), .C1(O2), .B1(\col[9] ), 
    .D0(\carry_pack.read_address_cry_7 ), .C0(\row[1] ), .B0(\col[8] ), 
    .CIN0(\carry_pack.read_address_cry_7 ), 
    .CIN1(\read_address_cry_8_c_0.CO0 ), .F0(\carry_pack.read_address[8] ), 
    .F1(\carry_pack.read_address[9] ), .COUT1(\carry_pack.read_address_cry_9 ), 
    .COUT0(\read_address_cry_8_c_0.CO0 ));
  read_address_cry_7_c_0_SLICE_16 \read_address_cry_7_c_0.SLICE_16 ( 
    .D1(\read_address_cry_7_c_0.CO0 ), .C1(\row[0] ), .B1(\col[7] ), 
    .CIN1(\read_address_cry_7_c_0.CO0 ), .F1(\carry_pack.read_address[7] ), 
    .COUT1(\carry_pack.read_address_cry_7 ), 
    .COUT0(\read_address_cry_7_c_0.CO0 ));
  SLICE_17 SLICE_17( .DI0(\write_address_RNO_S0[19] ), 
    .D1(\write_address_RNO[19].CO0 ), 
    .D0(\carry_pack.un1_write_address_1_cry_18 ), .A0(\write_address[19] ), 
    .LSR(un1_fsm_state_3), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_18 ), 
    .CIN1(\write_address_RNO[19].CO0 ), .Q0(\write_address[19] ), 
    .F0(\write_address_RNO_S0[19] ), .COUT0(\write_address_RNO[19].CO0 ));
  SLICE_18 SLICE_18( .DI1(un1_write_address_1_cry_17_c_0_S1), 
    .DI0(un1_write_address_1_cry_17_c_0_S0), 
    .D1(\un1_write_address_1_cry_17_c_0.CO0 ), .B1(\write_address[18] ), 
    .D0(\carry_pack.un1_write_address_1_cry_16 ), .B0(\write_address[17] ), 
    .LSR(un1_fsm_state_3), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_16 ), 
    .CIN1(\un1_write_address_1_cry_17_c_0.CO0 ), .Q0(\write_address[17] ), 
    .Q1(\write_address[18] ), .F0(un1_write_address_1_cry_17_c_0_S0), 
    .F1(un1_write_address_1_cry_17_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_18 ), 
    .COUT0(\un1_write_address_1_cry_17_c_0.CO0 ));
  SLICE_19 SLICE_19( .DI1(un1_write_address_1_cry_15_c_0_S1), 
    .DI0(un1_write_address_1_cry_15_c_0_S0), 
    .D1(\un1_write_address_1_cry_15_c_0.CO0 ), .B1(\write_address[16] ), 
    .D0(\carry_pack.un1_write_address_1_cry_14 ), .B0(\write_address[15] ), 
    .LSR(un1_fsm_state_3), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_14 ), 
    .CIN1(\un1_write_address_1_cry_15_c_0.CO0 ), .Q0(\write_address[15] ), 
    .Q1(\write_address[16] ), .F0(un1_write_address_1_cry_15_c_0_S0), 
    .F1(un1_write_address_1_cry_15_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_16 ), 
    .COUT0(\un1_write_address_1_cry_15_c_0.CO0 ));
  SLICE_20 SLICE_20( .DI1(un1_write_address_1_cry_13_c_0_S1), 
    .DI0(un1_write_address_1_cry_13_c_0_S0), 
    .D1(\un1_write_address_1_cry_13_c_0.CO0 ), .B1(\write_address[14] ), 
    .D0(\carry_pack.un1_write_address_1_cry_12 ), .B0(\write_address[13] ), 
    .LSR(un1_fsm_state_3), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_12 ), 
    .CIN1(\un1_write_address_1_cry_13_c_0.CO0 ), .Q0(\write_address[13] ), 
    .Q1(\write_address[14] ), .F0(un1_write_address_1_cry_13_c_0_S0), 
    .F1(un1_write_address_1_cry_13_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_14 ), 
    .COUT0(\un1_write_address_1_cry_13_c_0.CO0 ));
  SLICE_21 SLICE_21( .DI1(un1_write_address_1_cry_11_c_0_S1), 
    .DI0(un1_write_address_1_cry_11_c_0_S0), 
    .D1(\un1_write_address_1_cry_11_c_0.CO0 ), .B1(\write_address[12] ), 
    .D0(\carry_pack.un1_write_address_1_cry_10 ), .B0(\write_address[11] ), 
    .LSR(un1_fsm_state_3), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_10 ), 
    .CIN1(\un1_write_address_1_cry_11_c_0.CO0 ), .Q0(\write_address[11] ), 
    .Q1(\write_address[12] ), .F0(un1_write_address_1_cry_11_c_0_S0), 
    .F1(un1_write_address_1_cry_11_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_12 ), 
    .COUT0(\un1_write_address_1_cry_11_c_0.CO0 ));
  SLICE_22 SLICE_22( .DI1(un1_write_address_1_cry_9_c_0_S1), 
    .DI0(un1_write_address_1_cry_9_c_0_S0), 
    .D1(\un1_write_address_1_cry_9_c_0.CO0 ), .B1(\write_address[10] ), 
    .D0(\carry_pack.un1_write_address_1_cry_8 ), .B0(\write_address[9] ), 
    .LSR(un1_fsm_state_3), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_8 ), 
    .CIN1(\un1_write_address_1_cry_9_c_0.CO0 ), .Q0(\write_address[9] ), 
    .Q1(\write_address[10] ), .F0(un1_write_address_1_cry_9_c_0_S0), 
    .F1(un1_write_address_1_cry_9_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_10 ), 
    .COUT0(\un1_write_address_1_cry_9_c_0.CO0 ));
  SLICE_23 SLICE_23( .DI1(un1_write_address_1_cry_7_c_0_S1), 
    .DI0(un1_write_address_1_cry_7_c_0_S0), 
    .D1(\un1_write_address_1_cry_7_c_0.CO0 ), .B1(\write_address[8] ), 
    .D0(\carry_pack.un1_write_address_1_cry_6 ), .B0(\write_address[7] ), 
    .LSR(un1_fsm_state_3), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_6 ), 
    .CIN1(\un1_write_address_1_cry_7_c_0.CO0 ), .Q0(\write_address[7] ), 
    .Q1(\write_address[8] ), .F0(un1_write_address_1_cry_7_c_0_S0), 
    .F1(un1_write_address_1_cry_7_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_8 ), 
    .COUT0(\un1_write_address_1_cry_7_c_0.CO0 ));
  SLICE_24 SLICE_24( .DI1(un1_write_address_1_cry_5_c_0_S1), 
    .DI0(un1_write_address_1_cry_5_c_0_S0), 
    .D1(\un1_write_address_1_cry_5_c_0.CO0 ), .B1(\write_address[6] ), 
    .D0(\carry_pack.un1_write_address_1_cry_4 ), .B0(\write_address[5] ), 
    .LSR(un1_fsm_state_3), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_4 ), 
    .CIN1(\un1_write_address_1_cry_5_c_0.CO0 ), .Q0(\write_address[5] ), 
    .Q1(\write_address[6] ), .F0(un1_write_address_1_cry_5_c_0_S0), 
    .F1(un1_write_address_1_cry_5_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_6 ), 
    .COUT0(\un1_write_address_1_cry_5_c_0.CO0 ));
  SLICE_25 SLICE_25( .DI1(un1_write_address_1_cry_3_c_0_S1), 
    .DI0(un1_write_address_1_cry_3_c_0_S0), 
    .D1(\un1_write_address_1_cry_3_c_0.CO0 ), .B1(\write_address[4] ), 
    .D0(\carry_pack.un1_write_address_1_cry_2 ), .B0(\write_address[3] ), 
    .LSR(un1_fsm_state_3), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_2 ), 
    .CIN1(\un1_write_address_1_cry_3_c_0.CO0 ), .Q0(\write_address[3] ), 
    .Q1(\write_address[4] ), .F0(un1_write_address_1_cry_3_c_0_S0), 
    .F1(un1_write_address_1_cry_3_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_4 ), 
    .COUT0(\un1_write_address_1_cry_3_c_0.CO0 ));
  SLICE_26 SLICE_26( .DI1(un1_write_address_1_cry_1_c_0_S1), 
    .DI0(un1_write_address_1_cry_1_c_0_S0), 
    .D1(\un1_write_address_1_cry_1_c_0.CO0 ), .B1(\write_address[2] ), 
    .D0(\carry_pack.un1_write_address_1_cry_0 ), .B0(\write_address[1] ), 
    .LSR(un1_fsm_state_3), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_0 ), 
    .CIN1(\un1_write_address_1_cry_1_c_0.CO0 ), .Q0(\write_address[1] ), 
    .Q1(\write_address[2] ), .F0(un1_write_address_1_cry_1_c_0_S0), 
    .F1(un1_write_address_1_cry_1_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_2 ), 
    .COUT0(\un1_write_address_1_cry_1_c_0.CO0 ));
  SLICE_27 SLICE_27( .DI1(un1_write_address_1_cry_0_c_0_S1), 
    .D1(\un1_write_address_1_cry_0_c_0.CO0 ), .B1(\write_address[0] ), 
    .C0(un1_fsm_state27_2_0), .B0(un1_fsm_state27_2_0), .LSR(un1_fsm_state_3), 
    .CLK(clk_25MHz_c), .CIN1(\un1_write_address_1_cry_0_c_0.CO0 ), 
    .Q1(\write_address[0] ), .F1(un1_write_address_1_cry_0_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_0 ), 
    .COUT0(\un1_write_address_1_cry_0_c_0.CO0 ));
  reader_SLICE_29 \reader.SLICE_29 ( .DI0(\reader.CAMERA_VSYNC_IN_c_i ), 
    .D0(CAMERA_VSYNC_IN_c), .CLK(CAMERA_PCLOCK_c), .Q0(\reader.FSM_state[0] ), 
    .F0(\reader.CAMERA_VSYNC_IN_c_i ));
  SLICE_31 SLICE_31( .DI1(\CAMERA_DATA_IN_c[6].sig_001.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[7].sig_000.FeedThruLUT ), 
    .D1(\CAMERA_DATA_IN_c[6] ), .D0(\CAMERA_DATA_IN_c[7] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\pixel_data[7] ), .Q1(\pixel_data[6] ), 
    .F0(\CAMERA_DATA_IN_c[7].sig_000.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[6].sig_001.FeedThruLUT ));
  SLICE_33 SLICE_33( .DI1(\CAMERA_DATA_IN_c[4].sig_003.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[5].sig_002.FeedThruLUT ), 
    .D1(\CAMERA_DATA_IN_c[4] ), .D0(\CAMERA_DATA_IN_c[5] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\pixel_data[5] ), .Q1(\pixel_data[4] ), 
    .F0(\CAMERA_DATA_IN_c[5].sig_002.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[4].sig_003.FeedThruLUT ));
  SLICE_35 SLICE_35( .DI1(\CAMERA_DATA_IN_c[2].sig_005.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[3].sig_004.FeedThruLUT ), 
    .D1(\CAMERA_DATA_IN_c[2] ), .D0(\CAMERA_DATA_IN_c[3] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\pixel_data[3] ), .Q1(\pixel_data[2] ), 
    .F0(\CAMERA_DATA_IN_c[3].sig_004.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[2].sig_005.FeedThruLUT ));
  SLICE_37 SLICE_37( .DI1(\CAMERA_DATA_IN_c[0].sig_007.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[1].sig_006.FeedThruLUT ), 
    .D1(\CAMERA_DATA_IN_c[0] ), .D0(\CAMERA_DATA_IN_c[1] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\pixel_data[1] ), .Q1(\pixel_data[0] ), 
    .F0(\CAMERA_DATA_IN_c[1].sig_006.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[0].sig_007.FeedThruLUT ));
  vga_inst_SLICE_39 \vga_inst.SLICE_39 ( .DI1(\vga_inst.row_3[9] ), 
    .DI0(\vga_inst.row_3[3] ), .D1(\vga_inst.N_224 ), .C1(\vga_inst.m10_4 ), 
    .B1(\vga_inst.m10_5 ), .A1(\row[0] ), .D0(\row[0] ), .C0(\vga_inst.m10_5 ), 
    .B0(\vga_inst.m10_4 ), .A0(\vga_inst.N_218 ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .Q0(\row[3] ), .Q1(\row[9] ), .F0(\vga_inst.row_3[3] ), 
    .F1(\vga_inst.row_3[9] ));
  vga_inst_SLICE_40 \vga_inst.SLICE_40 ( .DI1(\vga_inst.row_3[0] ), 
    .DI0(\vga_inst.row_3[2] ), .D1(\vga_inst.m10_5 ), .C1(\vga_inst.m10_4 ), 
    .A1(\row[0] ), .D0(\vga_inst.m10_4 ), .C0(\vga_inst.m10_5 ), .B0(\row[0] ), 
    .A0(\vga_inst.N_217 ), .CE(\vga_inst.col11 ), .CLK(clk_25MHz_c), 
    .Q0(\row[2] ), .Q1(\row[0] ), .F0(\vga_inst.row_3[2] ), 
    .F1(\vga_inst.row_3[0] ));
  vga_inst_SLICE_42 \vga_inst.SLICE_42 ( .DI0(\vga_inst.col_RNO[0] ), 
    .D0(\vga_inst.col_Z[0] ), .CLK(clk_25MHz_c), .Q0(\vga_inst.col_Z[0] ), 
    .F0(\vga_inst.col_RNO[0] ));
  SLICE_44 SLICE_44( .DI1(\bit_count_RNO[2] ), .DI0(\bit_count_RNO[3] ), 
    .D1(\bit_count[1] ), .C1(\bit_count[0] ), .B1(un1_fsm_state30_1_0), 
    .A1(\bit_count[2] ), .D0(un1_bit_count_axbxc3_1), .C0(un1_fsm_state30_1_0), 
    .B0(\bit_count[3] ), .A0(\bit_count[2] ), .CLK(clk_25MHz_c), 
    .Q0(\bit_count[3] ), .Q1(\bit_count[2] ), .F0(\bit_count_RNO[3] ), 
    .F1(\bit_count_RNO[2] ));
  SLICE_46 SLICE_46( .DI1(\bit_count_RNO[0] ), .DI0(\bit_count_RNO[1] ), 
    .D1(un1_fsm_state30_1_0), .C1(\bit_count[0] ), .D0(\bit_count[1] ), 
    .C0(un1_fsm_state30_1_0), .B0(\bit_count[0] ), .CLK(clk_25MHz_c), 
    .Q0(\bit_count[1] ), .Q1(\bit_count[0] ), .F0(\bit_count_RNO[1] ), 
    .F1(\bit_count_RNO[0] ));
  SLICE_50 SLICE_50( .DI1(\spram_data_in_2_0_i[14] ), .DI0(m15_2_03_2), 
    .D1(\pixel_accum[14] ), .C1(\vga_inst.m2_0_03 ), .B1(\bit_count[2] ), 
    .A1(\bit_count[3] ), .D0(\vga_inst.m3_0_03 ), .C0(\bit_count[2] ), 
    .B0(\bit_count[3] ), .CE(write_address_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[15] ), .Q1(\spram_data_in[14] ), .F0(m15_2_03_2), 
    .F1(\spram_data_in_2_0_i[14] ));
  SLICE_52 SLICE_52( .DI1(\spram_data_in_2_0_i[12] ), 
    .DI0(\spram_data_in_2_0_i[13] ), .D1(\pixel_accum[12] ), 
    .C1(\vga_inst.m0_0_03 ), .B1(\bit_count[3] ), .A1(\bit_count[2] ), 
    .D0(\pixel_accum[13] ), .C0(\vga_inst.m1_0_03 ), .B0(\bit_count[2] ), 
    .A0(\bit_count[3] ), .CE(write_address_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[13] ), .Q1(\spram_data_in[12] ), 
    .F0(\spram_data_in_2_0_i[13] ), .F1(\spram_data_in_2_0_i[12] ));
  SLICE_54 SLICE_54( .DI1(\spram_data_in_2_0_i[10] ), 
    .DI0(\spram_data_in_2_0_i[11] ), .D1(\pixel_accum[10] ), 
    .C1(\vga_inst.m2_0_03 ), .B1(\bit_count[3] ), .A1(\bit_count[2] ), 
    .D0(\pixel_accum[11] ), .C0(\vga_inst.m3_0_03 ), .B0(\bit_count[2] ), 
    .A0(\bit_count[3] ), .CE(write_address_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[11] ), .Q1(\spram_data_in[10] ), 
    .F0(\spram_data_in_2_0_i[11] ), .F1(\spram_data_in_2_0_i[10] ));
  SLICE_56 SLICE_56( .DI1(\spram_data_in_2_0_i[8] ), 
    .DI0(\spram_data_in_2_0_i[9] ), .D1(\pixel_accum[8] ), 
    .C1(\vga_inst.m0_0_03 ), .B1(\bit_count[3] ), .A1(\bit_count[2] ), 
    .D0(\pixel_accum[9] ), .C0(\vga_inst.m1_0_03 ), .B0(\bit_count[2] ), 
    .A0(\bit_count[3] ), .CE(write_address_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[9] ), .Q1(\spram_data_in[8] ), 
    .F0(\spram_data_in_2_0_i[9] ), .F1(\spram_data_in_2_0_i[8] ));
  SLICE_58 SLICE_58( .DI1(\spram_data_in_2_0_i[6] ), 
    .DI0(\spram_data_in_2_0_i[7] ), .D1(\pixel_accum[6] ), 
    .C1(\vga_inst.m2_0_03 ), .B1(\bit_count[3] ), .A1(\bit_count[2] ), 
    .D0(\pixel_accum[7] ), .C0(\vga_inst.m3_0_03 ), .B0(\bit_count[2] ), 
    .A0(\bit_count[3] ), .CE(write_address_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[7] ), .Q1(\spram_data_in[6] ), 
    .F0(\spram_data_in_2_0_i[7] ), .F1(\spram_data_in_2_0_i[6] ));
  SLICE_60 SLICE_60( .DI1(\spram_data_in_2_0_i[4] ), 
    .DI0(\spram_data_in_2_0_i[5] ), .D1(\pixel_accum[4] ), 
    .C1(\vga_inst.m0_0_03 ), .B1(\bit_count[3] ), .A1(\bit_count[2] ), 
    .D0(\pixel_accum[5] ), .C0(\vga_inst.m1_0_03 ), .B0(\bit_count[2] ), 
    .A0(\bit_count[3] ), .CE(write_address_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[5] ), .Q1(\spram_data_in[4] ), 
    .F0(\spram_data_in_2_0_i[5] ), .F1(\spram_data_in_2_0_i[4] ));
  SLICE_62 SLICE_62( .DI1(\spram_data_in_2_0_i[2] ), 
    .DI0(\spram_data_in_2_0_i[3] ), .D1(\pixel_accum[2] ), 
    .C1(\vga_inst.m2_0_03 ), .B1(\bit_count[2] ), .A1(\bit_count[3] ), 
    .D0(\bit_count[3] ), .C0(\bit_count[2] ), .B0(\vga_inst.m3_0_03 ), 
    .A0(\pixel_accum[3] ), .CE(write_address_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[3] ), .Q1(\spram_data_in[2] ), 
    .F0(\spram_data_in_2_0_i[3] ), .F1(\spram_data_in_2_0_i[2] ));
  SLICE_64 SLICE_64( .DI1(\spram_data_in_2_0_i[0] ), 
    .DI0(\spram_data_in_2_0_i[1] ), .D1(\pixel_accum[0] ), 
    .C1(\vga_inst.m0_0_03 ), .B1(\bit_count[2] ), .A1(\bit_count[3] ), 
    .D0(\pixel_accum[1] ), .C0(\vga_inst.m1_0_03 ), .B0(\bit_count[3] ), 
    .A0(\bit_count[2] ), .CE(write_address_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[1] ), .Q1(\spram_data_in[0] ), 
    .F0(\spram_data_in_2_0_i[1] ), .F1(\spram_data_in_2_0_i[0] ));
  SLICE_70 SLICE_70( .DI1(\spram_data_in_2_0_i[12]$n2 ), 
    .DI0(\spram_data_in_2_0_i[13]$n1 ), .D1(\pixel_accum[12] ), 
    .C1(\vga_inst.m0_0_03 ), .B1(\bit_count[3] ), .A1(\bit_count[2] ), 
    .D0(\pixel_accum[13] ), .C0(\vga_inst.m1_0_03 ), .B0(\bit_count[2] ), 
    .A0(\bit_count[3] ), .CE(un1_fsm_state30_1_0_0), .LSR(pixel_accum_30), 
    .CLK(clk_25MHz_c), .Q0(\pixel_accum[13] ), .Q1(\pixel_accum[12] ), 
    .F0(\spram_data_in_2_0_i[13]$n1 ), .F1(\spram_data_in_2_0_i[12]$n2 ));
  SLICE_72 SLICE_72( .DI1(\spram_data_in_2_0_i[10]$n4 ), 
    .DI0(\spram_data_in_2_0_i[11]$n3 ), .D1(\pixel_accum[10] ), 
    .C1(\vga_inst.m2_0_03 ), .B1(\bit_count[3] ), .A1(\bit_count[2] ), 
    .D0(\pixel_accum[11] ), .C0(\vga_inst.m3_0_03 ), .B0(\bit_count[2] ), 
    .A0(\bit_count[3] ), .CE(un1_fsm_state30_1_0_0), .LSR(pixel_accum_30), 
    .CLK(clk_25MHz_c), .Q0(\pixel_accum[11] ), .Q1(\pixel_accum[10] ), 
    .F0(\spram_data_in_2_0_i[11]$n3 ), .F1(\spram_data_in_2_0_i[10]$n4 ));
  SLICE_74 SLICE_74( .DI1(\spram_data_in_2_0_i[8]$n6 ), 
    .DI0(\spram_data_in_2_0_i[9]$n5 ), .D1(\pixel_accum[8] ), 
    .C1(\vga_inst.m0_0_03 ), .B1(\bit_count[3] ), .A1(\bit_count[2] ), 
    .D0(\pixel_accum[9] ), .C0(\vga_inst.m1_0_03 ), .B0(\bit_count[2] ), 
    .A0(\bit_count[3] ), .CE(un1_fsm_state30_1_0_0), .LSR(pixel_accum_30), 
    .CLK(clk_25MHz_c), .Q0(\pixel_accum[9] ), .Q1(\pixel_accum[8] ), 
    .F0(\spram_data_in_2_0_i[9]$n5 ), .F1(\spram_data_in_2_0_i[8]$n6 ));
  SLICE_76 SLICE_76( .DI1(\spram_data_in_2_0_i[6]$n8 ), 
    .DI0(\spram_data_in_2_0_i[7]$n7 ), .D1(\pixel_accum[6] ), 
    .C1(\vga_inst.m2_0_03 ), .B1(\bit_count[3] ), .A1(\bit_count[2] ), 
    .D0(\pixel_accum[7] ), .C0(\vga_inst.m3_0_03 ), .B0(\bit_count[2] ), 
    .A0(\bit_count[3] ), .CE(un1_fsm_state30_1_0_0), .LSR(pixel_accum_30), 
    .CLK(clk_25MHz_c), .Q0(\pixel_accum[7] ), .Q1(\pixel_accum[6] ), 
    .F0(\spram_data_in_2_0_i[7]$n7 ), .F1(\spram_data_in_2_0_i[6]$n8 ));
  SLICE_78 SLICE_78( .DI1(\spram_data_in_2_0_i[4]$n10 ), 
    .DI0(\spram_data_in_2_0_i[5]$n9 ), .D1(\pixel_accum[4] ), 
    .C1(\vga_inst.m0_0_03 ), .B1(\bit_count[3] ), .A1(\bit_count[2] ), 
    .D0(\pixel_accum[5] ), .C0(\vga_inst.m1_0_03 ), .B0(\bit_count[2] ), 
    .A0(\bit_count[3] ), .CE(un1_fsm_state30_1_0_0), .LSR(pixel_accum_30), 
    .CLK(clk_25MHz_c), .Q0(\pixel_accum[5] ), .Q1(\pixel_accum[4] ), 
    .F0(\spram_data_in_2_0_i[5]$n9 ), .F1(\spram_data_in_2_0_i[4]$n10 ));
  SLICE_80 SLICE_80( .DI1(\spram_data_in_2_0_i[2]$n12 ), 
    .DI0(\spram_data_in_2_0_i[3]$n11 ), .D1(\pixel_accum[2] ), 
    .C1(\vga_inst.m2_0_03 ), .B1(\bit_count[2] ), .A1(\bit_count[3] ), 
    .D0(\pixel_accum[3] ), .C0(\vga_inst.m3_0_03 ), .B0(\bit_count[3] ), 
    .A0(\bit_count[2] ), .CE(un1_fsm_state30_1_0_0), .LSR(pixel_accum_30), 
    .CLK(clk_25MHz_c), .Q0(\pixel_accum[3] ), .Q1(\pixel_accum[2] ), 
    .F0(\spram_data_in_2_0_i[3]$n11 ), .F1(\spram_data_in_2_0_i[2]$n12 ));
  SLICE_82 SLICE_82( .DI1(\spram_data_in_2_0_i[0]$n14 ), 
    .DI0(\spram_data_in_2_0_i[1]$n13 ), .D1(\pixel_accum[0] ), 
    .C1(\vga_inst.m0_0_03 ), .B1(\bit_count[2] ), .A1(\bit_count[3] ), 
    .D0(\pixel_accum[1] ), .C0(\vga_inst.m1_0_03 ), .B0(\bit_count[3] ), 
    .A0(\bit_count[2] ), .CE(un1_fsm_state30_1_0_0), .LSR(pixel_accum_30), 
    .CLK(clk_25MHz_c), .Q0(\pixel_accum[1] ), .Q1(\pixel_accum[0] ), 
    .F0(\spram_data_in_2_0_i[1]$n13 ), .F1(\spram_data_in_2_0_i[0]$n14 ));
  SLICE_84 SLICE_84( .DI0(\start_c.sig_008.FeedThruLUT ), .D0(start_c), 
    .CE(un1_fsm_state_2), .CLK(clk_25MHz_c), .Q0(start_prev), 
    .F0(\start_c.sig_008.FeedThruLUT ));
  fsm_state_cnst_1_0__SLICE_85 \fsm_state_cnst_1_0_.SLICE_85 ( 
    .D0(CAMERA_VSYNC_IN_c), .C0(\fsm_state_cnst_1_0_.m3_N_7L11_1 ), 
    .B0(\debug_state_c[1] ), .A0(\debug_state_c[0] ), 
    .F0(\fsm_state_cnst_1_0_.m3_1 ));
  fsm_state_cnst_1_0__SLICE_86 \fsm_state_cnst_1_0_.SLICE_86 ( 
    .D0(\write_address[18] ), .C0(m3_N_6L9), .B0(\debug_state_c[0] ), 
    .A0(\fsm_state_cnst_1_0_.m3_1 ), .F0(\fsm_state_e_1_0[0] ));
  vga_inst_SLICE_87 \vga_inst.SLICE_87 ( .D1(\vga_inst.valid ), 
    .C1(\vga_inst.un9_RGB ), .B1(\vga_inst.spram_data_out_pmux ), 
    .A1(un2_spram_address), .D0(\fsm_state[2] ), .C0(\vga_inst.valid ), 
    .B0(\debug_state_c[1] ), .A0(\debug_state_c[0] ), .F0(\vga_inst.un9_RGB ), 
    .F1(\RGB_c[3] ));
  SLICE_89 SLICE_89( .D1(start_prev), .C1(start_c), .D0(\fsm_state[2] ), 
    .C0(fsm_state6), .B0(\debug_state_c[0] ), .A0(\debug_state_c[1] ), 
    .F0(\fsm_state_e_1[0] ), .F1(fsm_state6));
  fsm_state_cnst_1_0__SLICE_91 \fsm_state_cnst_1_0_.SLICE_91 ( 
    .D1(\vga_inst.un1_write_addresslto19_a0_12 ), .C1(m3_N_2L1), .B1(m3_N_3L3), 
    .A1(m3_N_4L5), .D0(\write_address[11] ), .C0(\write_address[10] ), 
    .B0(\write_address[1] ), .A0(\write_address[0] ), .F0(m3_N_2L1), 
    .F1(m3_N_6L9));
  SLICE_93 SLICE_93( .D0(spram_data_in12), .C0(un1_fsm_state30_1_0), 
    .F0(pixel_accum_30));
  vga_inst_SLICE_94 \vga_inst.SLICE_94 ( .D1(\debug_state_c[1] ), 
    .C1(\debug_state_c[0] ), .D0(pixel_valid), .C0(N_155_1), 
    .B0(prev_pixel_valid), .A0(\fsm_state[2] ), .F0(un1_fsm_state30_1_0), 
    .F1(N_155_1));
  vga_inst_SLICE_95 \vga_inst.SLICE_95 ( 
    .D1(\vga_inst.un1_write_addresslto19_a0_12_x1 ), 
    .C1(\vga_inst.un1_write_addresslto19_a0_10 ), .D0(\write_address[5] ), 
    .C0(\write_address[4] ), .B0(\write_address[13] ), 
    .A0(\write_address[15] ), .F0(\vga_inst.un1_write_addresslto19_a0_10 ), 
    .F1(\vga_inst.un1_write_addresslto19_a0_12 ));
  vga_inst_SLICE_97 \vga_inst.SLICE_97 ( 
    .D0(\vga_inst.un1_write_addresslto19_0_1_x1 ), .C0(\write_address[15] ), 
    .F0(\vga_inst.un1_write_addresslto19_0_1 ));
  vga_inst_SLICE_98 \vga_inst.SLICE_98 ( .D1(\write_address[15] ), 
    .C1(\vga_inst.un1_write_addresslto19_0_1_x1 ), .B1(\write_address[19] ), 
    .D0(\write_address[14] ), .C0(\write_address[13] ), 
    .B0(\write_address[12] ), .A0(\write_address[18] ), 
    .F0(\vga_inst.un1_write_addresslto19_0_1_x1 ), 
    .F1(\fsm_state_cnst_1_0_.m3_N_7L11_1 ));
  vga_inst_SLICE_99 \vga_inst.SLICE_99 ( .D0(\write_address[7] ), 
    .C0(\carry_pack.read_address[7] ), .B0(un2_spram_address), 
    .F0(\spram_address[7] ));
  vga_inst_SLICE_100 \vga_inst.SLICE_100 ( .D1(\vga_inst.col_Z[0] ), 
    .C1(un2_spram_address), .B1(\write_address[0] ), .D0(\fsm_state[2] ), 
    .C0(\debug_state_c[1] ), .A0(\debug_state_c[0] ), .F0(un2_spram_address), 
    .F1(\vga_inst.spram_address[0] ));
  vga_inst_SLICE_101 \vga_inst.SLICE_101 ( .D1(\vga_inst.un1_fsm_state27_2_1 ), 
    .C1(un1_fsm_state27_0), .B1(spram_data_in12), .A1(un2_spram_address), 
    .D0(\fsm_state[2] ), .C0(\debug_state_c[1] ), .B0(\debug_state_c[0] ), 
    .F0(un1_fsm_state27_0), .F1(un1_fsm_state27_2_0));
  vga_inst_SLICE_103 \vga_inst.SLICE_103 ( 
    .D1(\vga_inst.un1_write_addresslto19_0_1 ), 
    .C1(\vga_inst.un1_write_addresslto19_0_1_0 ), 
    .B1(\vga_inst.un1_write_addresslto19_0_0 ), 
    .A1(\vga_inst.un1_write_addresslto19_a0_8 ), .D0(\write_address[18] ), 
    .C0(\vga_inst.un1_write_addresslto19_a0_12 ), .B0(\write_address[3] ), 
    .A0(\write_address[2] ), .F0(\vga_inst.un1_write_addresslto19_0_1_0 ), 
    .F1(un1_write_address));
  vga_inst_SLICE_104 \vga_inst.SLICE_104 ( .D1(\write_address[17] ), 
    .C1(\write_address[16] ), .D0(\write_address[16] ), 
    .C0(\write_address[17] ), .B0(\write_address[18] ), 
    .A0(\write_address[19] ), .F0(\vga_inst.un1_write_addresslto19_0_0 ), 
    .F1(m3_N_3L3));
  vga_inst_SLICE_105 \vga_inst.SLICE_105 ( .D1(\vga_inst.spram_address[2] ), 
    .C1(\vga_inst.N_86 ), .B1(\vga_inst.N_85 ), 
    .D0(\vga_inst.spram_data_out[7] ), .C0(\vga_inst.spram_data_out[15] ), 
    .A0(\vga_inst.spram_address[3] ), .F0(\vga_inst.N_86 ), 
    .F1(\vga_inst.N_87 ));
  vga_inst_SLICE_106 \vga_inst.SLICE_106 ( .D1(\data_out2[15] ), 
    .C1(\vga_inst.N_56 ), .B1(\spram_address[19] ), .D0(\data_out1[15] ), 
    .C0(\data_out0[15] ), .B0(\spram_address[18] ), .F0(\vga_inst.N_56 ), 
    .F1(\vga_inst.spram_data_out[15] ));
  vga_inst_SLICE_107 \vga_inst.SLICE_107 ( .D0(\vga_inst.spram_data_out[3] ), 
    .C0(\vga_inst.spram_data_out[11] ), .A0(\vga_inst.spram_address[3] ), 
    .F0(\vga_inst.N_85 ));
  vga_inst_SLICE_108 \vga_inst.SLICE_108 ( .D1(\data_out2[11] ), 
    .C1(\vga_inst.N_52 ), .A1(\spram_address[19] ), .D0(\data_out1[11] ), 
    .C0(\data_out0[11] ), .B0(\spram_address[18] ), .F0(\vga_inst.N_52 ), 
    .F1(\vga_inst.spram_data_out[11] ));
  vga_inst_SLICE_109 \vga_inst.SLICE_109 ( .D0(\vga_inst.spram_data_out[2] ), 
    .C0(\vga_inst.spram_data_out[10] ), .A0(\vga_inst.spram_address[3] ), 
    .F0(\vga_inst.N_78 ));
  vga_inst_SLICE_110 \vga_inst.SLICE_110 ( .D1(\data_out2[10] ), 
    .C1(\vga_inst.N_51 ), .A1(\spram_address[19] ), .D0(\data_out0[10] ), 
    .C0(\data_out1[10] ), .B0(\spram_address[18] ), .F0(\vga_inst.N_51 ), 
    .F1(\vga_inst.spram_data_out[10] ));
  vga_inst_SLICE_111 \vga_inst.SLICE_111 ( .D1(\vga_inst.spram_address[2] ), 
    .C1(\vga_inst.N_76 ), .B1(\vga_inst.N_75 ), 
    .D0(\vga_inst.spram_data_out[4] ), .C0(\vga_inst.spram_data_out[12] ), 
    .A0(\vga_inst.spram_address[3] ), .F0(\vga_inst.N_76 ), 
    .F1(\vga_inst.N_77 ));
  vga_inst_SLICE_112 \vga_inst.SLICE_112 ( .D1(\spram_address[19] ), 
    .C1(\vga_inst.N_53 ), .A1(\data_out2[12] ), .D0(\data_out1[12] ), 
    .C0(\spram_address[18] ), .B0(\data_out0[12] ), .F0(\vga_inst.N_53 ), 
    .F1(\vga_inst.spram_data_out[12] ));
  vga_inst_SLICE_113 \vga_inst.SLICE_113 ( .D0(\vga_inst.spram_data_out[0] ), 
    .C0(\vga_inst.spram_data_out[8] ), .B0(\vga_inst.spram_address[3] ), 
    .F0(\vga_inst.N_75 ));
  vga_inst_SLICE_114 \vga_inst.SLICE_114 ( .D1(\spram_address[19] ), 
    .C1(\vga_inst.N_93 ), .B1(\data_out2[0] ), .D0(\data_out1[0] ), 
    .C0(\data_out0[0] ), .B0(\spram_address[18] ), .F0(\vga_inst.N_93 ), 
    .F1(\vga_inst.spram_data_out[0] ));
  vga_inst_SLICE_115 \vga_inst.SLICE_115 ( .D1(\vga_inst.N_68 ), 
    .C1(\vga_inst.spram_address[3] ), .B1(\vga_inst.N_59 ), 
    .D0(\vga_inst.col_Z[3] ), .C0(\write_address[3] ), .A0(un2_spram_address), 
    .F0(\vga_inst.spram_address[3] ), .F1(\vga_inst.N_47_0 ));
  vga_inst_SLICE_116 \vga_inst.SLICE_116 ( .D1(\data_out2[13] ), 
    .C1(\vga_inst.N_162 ), .B1(\spram_address[19] ), .D0(\data_out1[13] ), 
    .C0(\data_out0[13] ), .B0(\spram_address[18] ), .F0(\vga_inst.N_162 ), 
    .F1(\vga_inst.N_59 ));
  vga_inst_SLICE_117 \vga_inst.SLICE_117 ( .D1(\vga_inst.spram_address[2] ), 
    .C1(\vga_inst.N_50_0 ), .A1(\vga_inst.N_47_0 ), .D0(\vga_inst.N_62 ), 
    .C0(\vga_inst.N_71 ), .B0(\vga_inst.spram_address[3] ), 
    .F0(\vga_inst.N_50_0 ), .F1(\vga_inst.N_44_0 ));
  vga_inst_SLICE_118 \vga_inst.SLICE_118 ( .D1(\data_out2[9] ), 
    .C1(\vga_inst.N_163 ), .A1(\spram_address[19] ), .D0(\spram_address[18] ), 
    .C0(\data_out1[9] ), .A0(\data_out0[9] ), .F0(\vga_inst.N_163 ), 
    .F1(\vga_inst.N_62 ));
  vga_inst_SLICE_119 \vga_inst.SLICE_119 ( .D1(\vga_inst.N_78 ), 
    .C1(\vga_inst.N_160 ), .B1(\vga_inst.spram_address[2] ), 
    .D0(\vga_inst.spram_address[3] ), .C0(\vga_inst.N_161 ), 
    .A0(\vga_inst.N_65 ), .F0(\vga_inst.N_160 ), .F1(\vga_inst.N_80 ));
  vga_inst_SLICE_120 \vga_inst.SLICE_120 ( .D1(\data_out2[14] ), 
    .C1(\vga_inst.N_74 ), .B1(\spram_address[19] ), .D0(\data_out0[14] ), 
    .C0(\data_out1[14] ), .B0(\spram_address[18] ), .F0(\vga_inst.N_74 ), 
    .F1(\vga_inst.N_161 ));
  vga_inst_SLICE_122 \vga_inst.SLICE_122 ( .D1(\vga_inst.valid ), 
    .C1(\vga_inst.spram_data_out_pmux ), .A1(un2_spram_address), 
    .D0(\vga_inst.col_Z[2] ), .C0(\write_address[2] ), .B0(un2_spram_address), 
    .F0(\vga_inst.spram_address[2] ), .F1(\RGB_c[1] ));
  vga_inst_SLICE_124 \vga_inst.SLICE_124 ( .D0(\vga_inst.spram_address[1] ), 
    .C0(\vga_inst.N_80 ), .B0(\vga_inst.N_77 ), .F0(\vga_inst.N_81 ));
  vga_inst_SLICE_126 \vga_inst.SLICE_126 ( .D1(\vga_inst.N_44_0 ), 
    .C1(\vga_inst.spram_address[1] ), .B1(\vga_inst.N_87 ), 
    .D0(\vga_inst.col_Z[1] ), .C0(\write_address[1] ), .B0(un2_spram_address), 
    .F0(\vga_inst.spram_address[1] ), .F1(\vga_inst.N_88 ));
  vga_inst_SLICE_127 \vga_inst.SLICE_127 ( .D1(\vga_inst.valid ), 
    .C1(\vga_inst.spram_data_out_pmux ), .A1(un2_spram_address), 
    .D0(\vga_inst.N_88 ), .C0(\vga_inst.spram_address[0] ), 
    .A0(\vga_inst.N_81 ), .F0(\vga_inst.spram_data_out_pmux ), .F1(\RGB_c[5] ));
  SLICE_130 SLICE_130( .DI1(fsm_state_scalar), .D1(\fsm_state[2] ), 
    .C1(fsm_state_1_sqmuxa_1), .B1(N_155_1), .A1(un1_write_address), 
    .D0(pixel_valid), .C0(N_155_1), .B0(prev_pixel_valid), .A0(\fsm_state[2] ), 
    .CLK(clk_25MHz_c), .Q1(\fsm_state[2] ), .F0(un1_fsm_state30_1_0_0), 
    .F1(fsm_state_scalar));
  vga_inst_SLICE_131 \vga_inst.SLICE_131 ( .D1(\vga_inst.col_Z[4] ), 
    .C1(\col[9] ), .B1(\col[8] ), .A1(\col[7] ), .D0(\col[7] ), .C0(\col[8] ), 
    .F0(\vga_inst.un10_validlt9_0 ), .F1(\vga_inst.m22_5 ));
  vga_inst_SLICE_132 \vga_inst.SLICE_132 ( .D1(\col[9] ), 
    .C1(\vga_inst.un5_validlt9 ), .B1(\vga_inst.un10_validlt9_0 ), 
    .A1(\row[9] ), .D0(\row[5] ), .C0(\row[6] ), .B0(\row[7] ), .A0(\row[8] ), 
    .F0(\vga_inst.un5_validlt9 ), .F1(\vga_inst.valid ));
  vga_inst_SLICE_133 \vga_inst.SLICE_133 ( .D1(\row[6] ), 
    .C1(\vga_inst.N_90_mux ), .B1(\row[8] ), .A1(\row[9] ), .D0(\row[3] ), 
    .C0(\row[4] ), .F0(\vga_inst.N_90_mux ), .F1(\vga_inst.m37_5 ));
  vga_inst_SLICE_136 \vga_inst.SLICE_136 ( .D1(\vga_inst.col_Z[6] ), 
    .C1(\vga_inst.m22_4 ), .B1(\vga_inst.m22_5 ), .A1(\vga_inst.col_Z[5] ), 
    .D0(\vga_inst.col_Z[2] ), .C0(\vga_inst.col_Z[3] ), 
    .B0(\vga_inst.col_Z[1] ), .A0(\vga_inst.col_Z[0] ), .F0(\vga_inst.m22_4 ), 
    .F1(\vga_inst.col11 ));
  vga_inst_SLICE_137 \vga_inst.SLICE_137 ( .D1(\vga_inst.m37_5 ), 
    .C1(\vga_inst.m37_4 ), .B1(\row[0] ), .A1(\row[2] ), .D0(\row[1] ), 
    .C0(\row[5] ), .A0(\row[7] ), .F0(\vga_inst.m37_4 ), .F1(VGA_VSYNC_0_i));
  vga_inst_SLICE_139 \vga_inst.SLICE_139 ( .D1(\pixel_data[4] ), 
    .C1(\vga_inst.un3_spram_data_inlto6_4 ), .B1(\pixel_data[5] ), 
    .A1(\pixel_data[6] ), .D0(\pixel_data[0] ), .C0(\pixel_data[1] ), 
    .B0(\pixel_data[2] ), .A0(\pixel_data[3] ), 
    .F0(\vga_inst.un3_spram_data_inlto6_4 ), 
    .F1(\vga_inst.un3_spram_data_inlt7_0 ));
  vga_inst_SLICE_141 \vga_inst.SLICE_141 ( .D1(pixel_valid), 
    .C1(spram_data_in12), .B1(prev_pixel_valid), .D0(\bit_count[1] ), 
    .C0(\bit_count[3] ), .B0(\bit_count[0] ), .A0(\bit_count[2] ), 
    .F0(spram_data_in12), .F1(N_155_2));
  vga_inst_SLICE_143 \vga_inst.SLICE_143 ( .D1(\col[8] ), 
    .C1(\vga_inst.N_27_0 ), .B1(\col[7] ), .A1(\col[9] ), 
    .D0(\vga_inst.col_Z[5] ), .C0(\vga_inst.col_Z[6] ), 
    .A0(\vga_inst.col_Z[4] ), .F0(\vga_inst.N_27_0 ), .F1(VGA_HSYNC_c));
  vga_inst_SLICE_145 \vga_inst.SLICE_145 ( .D1(\data_out2[1] ), 
    .C1(\vga_inst.N_89 ), .A1(\spram_address[19] ), .D0(\spram_address[18] ), 
    .C0(\data_out1[1] ), .B0(\data_out0[1] ), .F0(\vga_inst.N_89 ), 
    .F1(\vga_inst.N_71 ));
  vga_inst_SLICE_147 \vga_inst.SLICE_147 ( .D1(\data_out2[5] ), 
    .C1(\vga_inst.N_164 ), .B1(\spram_address[19] ), .D0(\data_out1[5] ), 
    .C0(\data_out0[5] ), .B0(\spram_address[18] ), .F0(\vga_inst.N_164 ), 
    .F1(\vga_inst.N_68 ));
  vga_inst_SLICE_149 \vga_inst.SLICE_149 ( .D1(\data_out2[6] ), 
    .C1(\vga_inst.N_83_0 ), .B1(\spram_address[19] ), .D0(\data_out1[6] ), 
    .C0(\spram_address[18] ), .B0(\data_out0[6] ), .F0(\vga_inst.N_83_0 ), 
    .F1(\vga_inst.N_65 ));
  vga_inst_SLICE_151 \vga_inst.SLICE_151 ( .D1(\data_out2[2] ), 
    .C1(\vga_inst.N_43 ), .A1(\spram_address[19] ), .D0(\data_out1[2] ), 
    .C0(\data_out0[2] ), .B0(\spram_address[18] ), .F0(\vga_inst.N_43 ), 
    .F1(\vga_inst.spram_data_out[2] ));
  vga_inst_SLICE_153 \vga_inst.SLICE_153 ( .D1(\data_out2[3] ), 
    .C1(\vga_inst.N_44 ), .A1(\spram_address[19] ), .D0(\data_out1[3] ), 
    .C0(\data_out0[3] ), .B0(\spram_address[18] ), .F0(\vga_inst.N_44 ), 
    .F1(\vga_inst.spram_data_out[3] ));
  vga_inst_SLICE_155 \vga_inst.SLICE_155 ( .D1(\data_out2[4] ), 
    .C1(\vga_inst.N_45 ), .B1(\spram_address[19] ), .D0(\data_out1[4] ), 
    .C0(\data_out0[4] ), .A0(\spram_address[18] ), .F0(\vga_inst.N_45 ), 
    .F1(\vga_inst.spram_data_out[4] ));
  vga_inst_SLICE_157 \vga_inst.SLICE_157 ( .D1(\data_out2[7] ), 
    .C1(\vga_inst.N_48 ), .A1(\spram_address[19] ), .D0(\data_out0[7] ), 
    .C0(\data_out1[7] ), .B0(\spram_address[18] ), .F0(\vga_inst.N_48 ), 
    .F1(\vga_inst.spram_data_out[7] ));
  vga_inst_SLICE_159 \vga_inst.SLICE_159 ( .D1(\data_out2[8] ), 
    .C1(\vga_inst.N_49 ), .B1(\spram_address[19] ), .D0(\data_out1[8] ), 
    .C0(\data_out0[8] ), .B0(\spram_address[18] ), .F0(\vga_inst.N_49 ), 
    .F1(\vga_inst.spram_data_out[8] ));
  SLICE_161 SLICE_161( .DI1(fsm_state_0), .D1(\fsm_state_e_1_0[0] ), 
    .C1(fsm_state_1_sqmuxa_1), .B1(\fsm_state_e_1[0] ), .A1(\fsm_state[2] ), 
    .D0(\fsm_state[2] ), .C0(fsm_state6), .B0(\debug_state_c[0] ), 
    .A0(\debug_state_c[1] ), .CLK(clk_25MHz_c), .Q1(\debug_state_c[0] ), 
    .F0(fsm_state_1_sqmuxa_1), .F1(fsm_state_0));
  SLICE_162 SLICE_162( .DI1(\fsm_state_cnst[1] ), .D1(un1_write_address), 
    .C1(\debug_state_c[1] ), .B1(\fsm_state[2] ), .A1(\debug_state_c[0] ), 
    .D0(\debug_state_c[0] ), .C0(\fsm_state[2] ), .B0(fsm_state6), 
    .A0(\debug_state_c[1] ), .CE(fsm_state_1_sqmuxa_1_i), .CLK(clk_25MHz_c), 
    .Q1(\debug_state_c[1] ), .F0(fsm_state_1_sqmuxa_1_i), 
    .F1(\fsm_state_cnst[1] ));
  vga_inst_SLICE_163 \vga_inst.SLICE_163 ( .D1(\bit_count[1] ), 
    .C1(\bit_count[0] ), .D0(\pixel_data[7] ), 
    .C0(\vga_inst.un3_spram_data_inlt7_0 ), .B0(\bit_count[0] ), 
    .A0(\bit_count[1] ), .F0(\vga_inst.m3_0_03 ), .F1(un1_bit_count_axbxc3_1));
  vga_inst_SLICE_164 \vga_inst.SLICE_164 ( .D1(\pixel_data[7] ), 
    .C1(\bit_count[1] ), .B1(\bit_count[0] ), 
    .A1(\vga_inst.un3_spram_data_inlt7_0 ), .D0(\bit_count[1] ), 
    .C0(\bit_count[0] ), .B0(\vga_inst.un3_spram_data_inlt7_0 ), 
    .A0(\pixel_data[7] ), .F0(\vga_inst.m0_0_03 ), .F1(\vga_inst.m1_0_03 ));
  vga_inst_SLICE_165 \vga_inst.SLICE_165 ( .DI1(\spram_data_in_2_0_i[14]$n0 ), 
    .D1(\pixel_accum[14] ), .C1(\vga_inst.m2_0_03 ), .B1(\bit_count[3] ), 
    .A1(\bit_count[2] ), .D0(\bit_count[1] ), .C0(\bit_count[0] ), 
    .B0(\vga_inst.un3_spram_data_inlt7_0 ), .A0(\pixel_data[7] ), 
    .CE(un1_fsm_state30_1_0_0), .LSR(pixel_accum_30), .CLK(clk_25MHz_c), 
    .Q1(\pixel_accum[14] ), .F0(\vga_inst.m2_0_03 ), 
    .F1(\spram_data_in_2_0_i[14]$n0 ));
  vga_inst_SLICE_167 \vga_inst.SLICE_167 ( .D0(\row[2] ), .C0(\row[6] ), 
    .B0(\row[8] ), .A0(\row[7] ), .F0(\vga_inst.m10_4 ));
  vga_inst_SLICE_169 \vga_inst.SLICE_169 ( .D1(\debug_state_c[0] ), 
    .C1(\fsm_state[2] ), .A1(\debug_state_c[1] ), .D0(\fsm_state[2] ), 
    .C0(\debug_state_c[0] ), .B0(\debug_state_c[1] ), .F0(un1_fsm_state_3), 
    .F1(\carry_pack.un2_spram_address_i ));
  vga_inst_SLICE_171 \vga_inst.SLICE_171 ( .D1(N_155_2), .C1(\fsm_state[2] ), 
    .B1(\debug_state_c[0] ), .A1(\debug_state_c[1] ), .D0(\fsm_state[2] ), 
    .C0(\debug_state_c[0] ), .B0(\debug_state_c[1] ), .F0(un1_fsm_state_2), 
    .F1(write_address_0_sqmuxa));
  vga_inst_SLICE_173 \vga_inst.SLICE_173 ( .D1(\spram_address[19] ), 
    .C1(\spram_address[18] ), .B1(WR), .D0(\spram_address[18] ), 
    .C0(\spram_address[19] ), .A0(WR), .F0(WR1), .F1(WR2));
  vga_inst_SLICE_175 \vga_inst.SLICE_175 ( .D0(\row[9] ), .C0(\row[5] ), 
    .B0(\row[1] ), .A0(\vga_inst.N_90_mux ), .F0(\vga_inst.m10_5 ));
  fsm_state_cnst_1_0__SLICE_180 \fsm_state_cnst_1_0_.SLICE_180 ( 
    .D0(\write_address[3] ), .C0(\write_address[2] ), .F0(m3_N_4L5));
  vga_inst_SLICE_183 \vga_inst.SLICE_183 ( .DI1(prev_pixel_valid_0), 
    .D1(prev_pixel_valid_3), .C1(\debug_state_c[0] ), .B1(prev_pixel_valid), 
    .A1(\fsm_state[2] ), .D0(pixel_valid), .B0(prev_pixel_valid), 
    .CLK(clk_25MHz_c), .Q1(prev_pixel_valid), 
    .F0(\vga_inst.un1_fsm_state27_2_1 ), .F1(prev_pixel_valid_0));
  vga_inst_SLICE_184 \vga_inst.SLICE_184 ( .D1(\vga_inst.col_Z[6] ), 
    .C1(\write_address[6] ), .B1(un2_spram_address), .D0(\write_address[9] ), 
    .C0(\carry_pack.read_address[9] ), .A0(un2_spram_address), 
    .F0(\spram_address[9] ), .F1(\spram_address[6] ));
  vga_inst_SLICE_187 \vga_inst.SLICE_187 ( .D1(\write_address[8] ), 
    .C1(\carry_pack.read_address[8] ), .B1(un2_spram_address), 
    .D0(\write_address[6] ), .C0(\write_address[8] ), .B0(\write_address[9] ), 
    .A0(\write_address[7] ), .F0(\vga_inst.un1_write_addresslto19_a0_12_x1 ), 
    .F1(\spram_address[8] ));
  reader_SLICE_190 \reader.SLICE_190 ( .DI1(\reader.pixel_half_1 ), 
    .D1(\reader.pixel_half ), .C1(\reader.FSM_state[0] ), 
    .B1(CAMERA_HREF_IN_c), .D0(\reader.FSM_state[0] ), 
    .C0(\reader.pixel_half ), .A0(CAMERA_HREF_IN_c), .CLK(CAMERA_PCLOCK_c), 
    .Q1(\reader.pixel_half ), .F0(\reader.pixel_half_RNIKJ0O ), 
    .F1(\reader.pixel_half_1 ));
  vga_inst_SLICE_191 \vga_inst.SLICE_191 ( .DI1(\reader.pixel_datace_0[0] ), 
    .D1(\reader.pixel_half ), .C1(CAMERA_HREF_IN_c), .D0(pixel_valid), 
    .C0(\debug_state_c[1] ), .CE(\reader.FSM_state[0] ), .CLK(CAMERA_PCLOCK_c), 
    .Q1(pixel_valid), .F0(prev_pixel_valid_3), .F1(\reader.pixel_datace_0[0] ));
  vga_inst_SLICE_192 \vga_inst.SLICE_192 ( .D0(\write_address[11] ), 
    .C0(\write_address[10] ), .B0(\write_address[1] ), .A0(\write_address[0] ), 
    .F0(\vga_inst.un1_write_addresslto19_a0_8 ));
  vga_inst_SLICE_195 \vga_inst.SLICE_195 ( .D1(\vga_inst.col_Z[5] ), 
    .C1(\write_address[5] ), .B1(un2_spram_address), .D0(\write_address[4] ), 
    .C0(un2_spram_address), .B0(\vga_inst.col_Z[4] ), .F0(\spram_address[4] ), 
    .F1(\spram_address[5] ));
  vga_inst_SLICE_205 \vga_inst.SLICE_205 ( .DI1(WR_0), .D1(WR), 
    .C1(un1_fsm_state27_0), .B1(N_155_2), .A1(N_155_1), 
    .D0(\spram_address[19] ), .C0(\spram_address[18] ), .A0(WR), 
    .CLK(clk_25MHz_c), .Q1(WR), .F0(WR0), .F1(WR_0));
  SLICE_206 SLICE_206( .F0(VCC));
  un1_read_address_mulonly_0_12_0_ \un1_read_address_mulonly_0[12:0] ( 
    .CE(VCC), .A9(\row[9] ), .A8(\row[8] ), .A7(\row[7] ), .A6(\row[6] ), 
    .A5(\row[5] ), .A4(\row[4] ), .A3(\row[3] ), .A2(\row[2] ), .A1(\row[1] ), 
    .A0(\row[0] ), .B2(VCC), .B0(VCC), .AHOLD(VCC), .BHOLD(VCC), .O12(O12), 
    .O11(O11), .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), 
    .O3(O3), .O2(O2));
  my_pll_lscc_pll_inst_u_PLL_B \my_pll.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(clk_12MHz_c), .FEEDBACK(\my_pll.lscc_pll_inst.intfbout_w ), 
    .RESET_N(VCC), .INTFBOUT(\my_pll.lscc_pll_inst.intfbout_w ), 
    .OUTCORE(clk_25MHz_c));
  clk_12MHz clk_12MHz_I( .PADDI(clk_12MHz_c), .clk_12MHz(clk_12MHz));
  start start_I( .PADDI(start_c), .start(start));
  CAMERA_VSYNC_IN CAMERA_VSYNC_IN_I( .PADDI(CAMERA_VSYNC_IN_c), 
    .CAMERA_VSYNC_IN(CAMERA_VSYNC_IN));
  CAMERA_HREF_IN CAMERA_HREF_IN_I( .PADDI(CAMERA_HREF_IN_c), 
    .CAMERA_HREF_IN(CAMERA_HREF_IN));
  CAMERA_DATA_IN_0_ \CAMERA_DATA_IN[0]_I ( .PADDI(\CAMERA_DATA_IN_c[0] ), 
    .CAMERADATAIN0(CAMERA_DATA_IN[0]));
  CAMERA_DATA_IN_1_ \CAMERA_DATA_IN[1]_I ( .PADDI(\CAMERA_DATA_IN_c[1] ), 
    .CAMERADATAIN1(CAMERA_DATA_IN[1]));
  CAMERA_DATA_IN_2_ \CAMERA_DATA_IN[2]_I ( .PADDI(\CAMERA_DATA_IN_c[2] ), 
    .CAMERADATAIN2(CAMERA_DATA_IN[2]));
  CAMERA_DATA_IN_3_ \CAMERA_DATA_IN[3]_I ( .PADDI(\CAMERA_DATA_IN_c[3] ), 
    .CAMERADATAIN3(CAMERA_DATA_IN[3]));
  CAMERA_DATA_IN_4_ \CAMERA_DATA_IN[4]_I ( .PADDI(\CAMERA_DATA_IN_c[4] ), 
    .CAMERADATAIN4(CAMERA_DATA_IN[4]));
  CAMERA_DATA_IN_5_ \CAMERA_DATA_IN[5]_I ( .PADDI(\CAMERA_DATA_IN_c[5] ), 
    .CAMERADATAIN5(CAMERA_DATA_IN[5]));
  CAMERA_DATA_IN_6_ \CAMERA_DATA_IN[6]_I ( .PADDI(\CAMERA_DATA_IN_c[6] ), 
    .CAMERADATAIN6(CAMERA_DATA_IN[6]));
  CAMERA_DATA_IN_7_ \CAMERA_DATA_IN[7]_I ( .PADDI(\CAMERA_DATA_IN_c[7] ), 
    .CAMERADATAIN7(CAMERA_DATA_IN[7]));
  CAMERA_PCLOCK CAMERA_PCLOCK_I( .PADDI(CAMERA_PCLOCK_c), 
    .CAMERA_PCLOCK(CAMERA_PCLOCK));
  debug_state_0_ \debug_state[0]_I ( .PADDO(\debug_state_c[0] ), 
    .debugstate0(debug_state[0]));
  debug_state_1_ \debug_state[1]_I ( .PADDO(\debug_state_c[1] ), 
    .debugstate1(debug_state[1]));
  RGB_0_ \RGB[0]_I ( .PADDO(\RGB_c[1] ), .RGB0(RGB[0]));
  RGB_1_ \RGB[1]_I ( .PADDO(\RGB_c[1] ), .RGB1(RGB[1]));
  RGB_2_ \RGB[2]_I ( .PADDO(\RGB_c[3] ), .RGB2(RGB[2]));
  RGB_3_ \RGB[3]_I ( .PADDO(\RGB_c[3] ), .RGB3(RGB[3]));
  RGB_4_ \RGB[4]_I ( .PADDO(\RGB_c[5] ), .RGB4(RGB[4]));
  RGB_5_ \RGB[5]_I ( .PADDO(\RGB_c[5] ), .RGB5(RGB[5]));
  VGA_HSYNC VGA_HSYNC_I( .PADDO(VGA_HSYNC_c), .VGA_HSYNC(VGA_HSYNC));
  VGA_VSYNC VGA_VSYNC_I( .PADDO(VGA_VSYNC_0_i), .VGA_VSYNC(VGA_VSYNC));
  clk_25MHz clk_25MHz_I( .PADDO(clk_25MHz_c), .clk_25MHz(clk_25MHz));
  SPRAM2_vfb_b_inst \SPRAM2.vfb_b_inst ( .ADDRESS13(\spram_address[17] ), 
    .ADDRESS12(\spram_address[16] ), .ADDRESS11(\spram_address[15] ), 
    .ADDRESS10(\spram_address[14] ), .ADDRESS9(\spram_address[13] ), 
    .ADDRESS8(\spram_address[12] ), .ADDRESS7(\spram_address[11] ), 
    .ADDRESS6(\spram_address[10] ), .ADDRESS5(\spram_address[9] ), 
    .ADDRESS4(\spram_address[8] ), .ADDRESS3(\spram_address[7] ), 
    .ADDRESS2(\spram_address[6] ), .ADDRESS1(\spram_address[5] ), 
    .ADDRESS0(\spram_address[4] ), .DATAIN15(\spram_data_in[15] ), 
    .DATAIN14(\spram_data_in[14] ), .DATAIN13(\spram_data_in[13] ), 
    .DATAIN12(\spram_data_in[12] ), .DATAIN11(\spram_data_in[11] ), 
    .DATAIN10(\spram_data_in[10] ), .DATAIN9(\spram_data_in[9] ), 
    .DATAIN8(\spram_data_in[8] ), .DATAIN7(\spram_data_in[7] ), 
    .DATAIN6(\spram_data_in[6] ), .DATAIN5(\spram_data_in[5] ), 
    .DATAIN4(\spram_data_in[4] ), .DATAIN3(\spram_data_in[3] ), 
    .DATAIN2(\spram_data_in[2] ), .DATAIN1(\spram_data_in[1] ), 
    .DATAIN0(\spram_data_in[0] ), .MASKWREN3(VCC), .MASKWREN2(VCC), 
    .MASKWREN1(VCC), .MASKWREN0(VCC), .WREN(WR2), .CHIPSELECT(VCC), 
    .CLOCK(clk_25MHz_c), .POWEROFF_N(VCC), .DATAOUT15(\data_out2[15] ), 
    .DATAOUT14(\data_out2[14] ), .DATAOUT13(\data_out2[13] ), 
    .DATAOUT12(\data_out2[12] ), .DATAOUT11(\data_out2[11] ), 
    .DATAOUT10(\data_out2[10] ), .DATAOUT9(\data_out2[9] ), 
    .DATAOUT8(\data_out2[8] ), .DATAOUT7(\data_out2[7] ), 
    .DATAOUT6(\data_out2[6] ), .DATAOUT5(\data_out2[5] ), 
    .DATAOUT4(\data_out2[4] ), .DATAOUT3(\data_out2[3] ), 
    .DATAOUT2(\data_out2[2] ), .DATAOUT1(\data_out2[1] ), 
    .DATAOUT0(\data_out2[0] ));
  SPRAM1_vfb_b_inst \SPRAM1.vfb_b_inst ( .ADDRESS13(\spram_address[17] ), 
    .ADDRESS12(\spram_address[16] ), .ADDRESS11(\spram_address[15] ), 
    .ADDRESS10(\spram_address[14] ), .ADDRESS9(\spram_address[13] ), 
    .ADDRESS8(\spram_address[12] ), .ADDRESS7(\spram_address[11] ), 
    .ADDRESS6(\spram_address[10] ), .ADDRESS5(\spram_address[9] ), 
    .ADDRESS4(\spram_address[8] ), .ADDRESS3(\spram_address[7] ), 
    .ADDRESS2(\spram_address[6] ), .ADDRESS1(\spram_address[5] ), 
    .ADDRESS0(\spram_address[4] ), .DATAIN15(\spram_data_in[15] ), 
    .DATAIN14(\spram_data_in[14] ), .DATAIN13(\spram_data_in[13] ), 
    .DATAIN12(\spram_data_in[12] ), .DATAIN11(\spram_data_in[11] ), 
    .DATAIN10(\spram_data_in[10] ), .DATAIN9(\spram_data_in[9] ), 
    .DATAIN8(\spram_data_in[8] ), .DATAIN7(\spram_data_in[7] ), 
    .DATAIN6(\spram_data_in[6] ), .DATAIN5(\spram_data_in[5] ), 
    .DATAIN4(\spram_data_in[4] ), .DATAIN3(\spram_data_in[3] ), 
    .DATAIN2(\spram_data_in[2] ), .DATAIN1(\spram_data_in[1] ), 
    .DATAIN0(\spram_data_in[0] ), .MASKWREN3(VCC), .MASKWREN2(VCC), 
    .MASKWREN1(VCC), .MASKWREN0(VCC), .WREN(WR1), .CHIPSELECT(VCC), 
    .CLOCK(clk_25MHz_c), .POWEROFF_N(VCC), .DATAOUT15(\data_out1[15] ), 
    .DATAOUT14(\data_out1[14] ), .DATAOUT13(\data_out1[13] ), 
    .DATAOUT12(\data_out1[12] ), .DATAOUT11(\data_out1[11] ), 
    .DATAOUT10(\data_out1[10] ), .DATAOUT9(\data_out1[9] ), 
    .DATAOUT8(\data_out1[8] ), .DATAOUT7(\data_out1[7] ), 
    .DATAOUT6(\data_out1[6] ), .DATAOUT5(\data_out1[5] ), 
    .DATAOUT4(\data_out1[4] ), .DATAOUT3(\data_out1[3] ), 
    .DATAOUT2(\data_out1[2] ), .DATAOUT1(\data_out1[1] ), 
    .DATAOUT0(\data_out1[0] ));
  SPRAM0_vfb_b_inst \SPRAM0.vfb_b_inst ( .ADDRESS13(\spram_address[17] ), 
    .ADDRESS12(\spram_address[16] ), .ADDRESS11(\spram_address[15] ), 
    .ADDRESS10(\spram_address[14] ), .ADDRESS9(\spram_address[13] ), 
    .ADDRESS8(\spram_address[12] ), .ADDRESS7(\spram_address[11] ), 
    .ADDRESS6(\spram_address[10] ), .ADDRESS5(\spram_address[9] ), 
    .ADDRESS4(\spram_address[8] ), .ADDRESS3(\spram_address[7] ), 
    .ADDRESS2(\spram_address[6] ), .ADDRESS1(\spram_address[5] ), 
    .ADDRESS0(\spram_address[4] ), .DATAIN15(\spram_data_in[15] ), 
    .DATAIN14(\spram_data_in[14] ), .DATAIN13(\spram_data_in[13] ), 
    .DATAIN12(\spram_data_in[12] ), .DATAIN11(\spram_data_in[11] ), 
    .DATAIN10(\spram_data_in[10] ), .DATAIN9(\spram_data_in[9] ), 
    .DATAIN8(\spram_data_in[8] ), .DATAIN7(\spram_data_in[7] ), 
    .DATAIN6(\spram_data_in[6] ), .DATAIN5(\spram_data_in[5] ), 
    .DATAIN4(\spram_data_in[4] ), .DATAIN3(\spram_data_in[3] ), 
    .DATAIN2(\spram_data_in[2] ), .DATAIN1(\spram_data_in[1] ), 
    .DATAIN0(\spram_data_in[0] ), .MASKWREN3(VCC), .MASKWREN2(VCC), 
    .MASKWREN1(VCC), .MASKWREN0(VCC), .WREN(WR0), .CHIPSELECT(VCC), 
    .CLOCK(clk_25MHz_c), .POWEROFF_N(VCC), .DATAOUT15(\data_out0[15] ), 
    .DATAOUT14(\data_out0[14] ), .DATAOUT13(\data_out0[13] ), 
    .DATAOUT12(\data_out0[12] ), .DATAOUT11(\data_out0[11] ), 
    .DATAOUT10(\data_out0[10] ), .DATAOUT9(\data_out0[9] ), 
    .DATAOUT8(\data_out0[8] ), .DATAOUT7(\data_out0[7] ), 
    .DATAOUT6(\data_out0[6] ), .DATAOUT5(\data_out0[5] ), 
    .DATAOUT4(\data_out0[4] ), .DATAOUT3(\data_out0[3] ), 
    .DATAOUT2(\data_out0[2] ), .DATAOUT1(\data_out0[1] ), 
    .DATAOUT0(\data_out0[0] ));
endmodule

module vga_inst_SLICE_0 ( input DI0, D1, A1, D0, B0, CE, CLK, CIN0, CIN1, 
    output Q0, F0, F1, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  fa2 \vga_inst/un3_row_1_cry_8_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_Z[8].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x9966";
  defparam inst1.INIT1 = "0x55AA";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module vga_inst_SLICE_1 ( input DI1, DI0, D1, B1, D0, B0, CE, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa20001 \vga_inst/un3_row_1_cry_6_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_Z[6].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  ffsre2 \vga_inst/row_Z[7].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fa20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x9966";
  defparam inst1.INIT1 = "0x9966";
endmodule

module vga_inst_SLICE_2 ( input DI1, DI0, D1, B1, D0, B0, CE, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa20001 \vga_inst/un3_row_1_cry_4_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_Z[4].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  ffsre2 \vga_inst/row_Z[5].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module vga_inst_un3_row_1_cry_2_c_0_SLICE_3 ( input D1, B1, D0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \vga_inst/un3_row_1_cry_2_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_4 ( input DI1, D1, B1, C0, B0, CE, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly;

  fa20002 \vga_inst/un3_row_1_cry_1_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/row_Z[1].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fa20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xC33C";
  defparam inst1.INIT1 = "0x9966";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module vga_inst_SLICE_5 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20003 \vga_inst/un2_col_cry_8_c_0.fa22_inst ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(A1), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col_Z[8].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col_Z[9].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module fa20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x1144";
  defparam inst1.INIT1 = "0x050A";
endmodule

module vga_inst_SLICE_6 ( input DI1, DI0, D1, B1, D0, B0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20001 \vga_inst/un2_col_cry_6_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col[6].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col_Z[7].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module vga_inst_SLICE_7 ( input DI1, DI0, D1, B1, A1, D0, B0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20004 \vga_inst/un2_col_cry_4_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(A1), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col[4].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col[5].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module fa20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x9966";
  defparam inst1.INIT1 = "0x1144";
endmodule

module vga_inst_SLICE_8 ( input DI1, DI0, D1, B1, D0, B0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20001 \vga_inst/un2_col_cry_2_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col[2].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col[3].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module vga_inst_SLICE_9 ( input DI1, D1, B1, C0, B0, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa20002 \vga_inst/un2_col_cry_1_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col[1].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module read_address_cry_18_c_0_SLICE_10 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    CIN0, CIN1, output F0, F1, COUT0 );

  fa20005 \read_address_cry_18_c_0.fa22_inst ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xA3AC";
  defparam inst1.INIT1 = "0x5CAC";
endmodule

module read_address_cry_16_c_0_SLICE_11 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );

  fa20006 \read_address_cry_16_c_0.fa22_inst ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xA3AC";
  defparam inst1.INIT1 = "0xA3AC";
endmodule

module read_address_cry_14_c_0_SLICE_12 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );

  fa20006 \read_address_cry_14_c_0.fa22_inst ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module read_address_cry_12_c_0_SLICE_13 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );

  fa20006 \read_address_cry_12_c_0.fa22_inst ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module read_address_cry_10_c_0_SLICE_14 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    CIN0, CIN1, output F0, F1, COUT1, COUT0 );

  fa20006 \read_address_cry_10_c_0.fa22_inst ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module read_address_cry_8_c_0_SLICE_15 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20007 \read_address_cry_8_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xC33C";
  defparam inst1.INIT1 = "0xC33C";
endmodule

module read_address_cry_7_c_0_SLICE_16 ( input D1, C1, B1, CIN1, output F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa20007 \read_address_cry_7_c_0.fa22_inst ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_17 ( input DI0, D1, D0, A0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa20008 \write_address_RNO[19].fa22_inst ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20009 \write_address_Z[19].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x55AA";
  defparam inst1.INIT1 = "0xC33C";
endmodule

module ffsre20009 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_18 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_17_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20009 \write_address_Z[17].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20009 \write_address_Z[18].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_19 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_15_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20009 \write_address_Z[15].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20009 \write_address_Z[16].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_20 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_13_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20009 \write_address_Z[13].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20009 \write_address_Z[14].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_21 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_11_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20009 \write_address_Z[11].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20009 \write_address_Z[12].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_22 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_9_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20009 \write_address_Z[9].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20009 \write_address_Z[10].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_23 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_7_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20009 \write_address_Z[7].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20009 \write_address_Z[8].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_24 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_5_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20009 \write_address_Z[5].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20009 \write_address_Z[6].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_25 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_3_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20009 \write_address_Z[3].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20009 \write_address_Z[4].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_26 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_1_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20009 \write_address_Z[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20009 \write_address_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_27 ( input DI1, D1, B1, C0, B0, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa20002 \un1_write_address_1_cry_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20009 \write_address_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module reader_SLICE_29 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \reader/FSM_state_RNO[0] ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \reader/FSM_state_Z[0].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_31 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 SLICE_31_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_31_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \reader/pixel_data_Z[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \reader/pixel_data_Z[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_33 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 SLICE_33_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_33_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \reader/pixel_data_Z[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \reader/pixel_data_Z[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_35 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 SLICE_35_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_35_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \reader/pixel_data_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \reader/pixel_data_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_37 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 SLICE_37_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_37_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \reader/pixel_data_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \reader/pixel_data_Z[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module vga_inst_SLICE_39 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40012 \vga_inst/row_RNO[9] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \vga_inst/row_RNO[3] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \vga_inst/row_Z[9].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xBF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xAA2A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_40 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40014 \vga_inst/row_RNO[0] ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \vga_inst/row_RNO[2] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \vga_inst/row_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \vga_inst/row_Z[2].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x0555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x8AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_42 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \vga_inst/col_RNO_cZ[0] ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col[0].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_44 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40016 \bit_count_RNO_cZ[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40017 \bit_count_RNO_cZ[3] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \bit_count_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \bit_count_Z[3].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x6AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xCC6C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_46 ( input DI1, DI0, D1, C1, D0, C0, B0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40018 \bit_count_RNO_cZ[0] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 \bit_count_RNO_cZ[1] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \bit_count_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \bit_count_Z[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x3FC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_50 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, CE, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40020 \vga_inst/spram_data_in_2_0_i_cZ[14] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40021 \vga_inst/m15_2_03_3 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spram_data_in_Z[14].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \spram_data_in_Z[15].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xFF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_52 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40022 \vga_inst/spram_data_in_2_0_i_cZ[12] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40023 \vga_inst/spram_data_in_2_0_i_cZ[13] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[12].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spram_data_in_Z[13].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xFF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xFF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_54 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40024 \vga_inst/spram_data_in_2_0_i_cZ[10] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40025 \vga_inst/spram_data_in_2_0_i_cZ[11] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[10].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spram_data_in_Z[11].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xFF40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xFF20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_56 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40024 \vga_inst/spram_data_in_2_0_i_cZ[8] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40025 \vga_inst/spram_data_in_2_0_i_cZ[9] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[8].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spram_data_in_Z[9].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_58 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40026 \vga_inst/spram_data_in_2_0_i_cZ[6] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40027 \vga_inst/spram_data_in_2_0_i_cZ[7] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spram_data_in_Z[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xFF20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xFF40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_60 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40026 \vga_inst/spram_data_in_2_0_i_cZ[4] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40027 \vga_inst/spram_data_in_2_0_i_cZ[5] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spram_data_in_Z[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_62 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40028 \vga_inst/spram_data_in_2_0_i_cZ[2] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40029 \vga_inst/spram_data_in_2_0_i_cZ[3] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spram_data_in_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xFF10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_64 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40028 \vga_inst/spram_data_in_2_0_i_cZ[0] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40030 \vga_inst/spram_data_in_2_0_i_cZ[1] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spram_data_in_Z[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xFF10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_70 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40022 SLICE_70_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 SLICE_70_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20009 \pixel_accum_esr[12].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20009 \pixel_accum_esr[13].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_72 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40024 SLICE_72_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 SLICE_72_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20009 \pixel_accum_esr[10].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20009 \pixel_accum_esr[11].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_74 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40024 SLICE_74_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 SLICE_74_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20009 \pixel_accum_esr[8].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20009 \pixel_accum_esr[9].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_76 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40026 SLICE_76_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 SLICE_76_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20009 \pixel_accum_esr[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20009 \pixel_accum_esr[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_78 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40026 SLICE_78_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 SLICE_78_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20009 \pixel_accum_esr[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20009 \pixel_accum_esr[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_80 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40028 SLICE_80_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 SLICE_80_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20009 \pixel_accum_esr[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20009 \pixel_accum_esr[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_82 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40028 SLICE_82_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 SLICE_82_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20009 \pixel_accum_esr[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20009 \pixel_accum_esr[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_84 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40011 SLICE_84_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \start_prev_e_0.ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fsm_state_cnst_1_0__SLICE_85 ( input D0, C0, B0, A0, output F0 );

  lut40031 \fsm_state_cnst_1_0_.m3_N_7L11 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0x2A6E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module fsm_state_cnst_1_0__SLICE_86 ( input D0, C0, B0, A0, output F0 );

  lut40032 \fsm_state_cnst_1_0_.m3 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xEAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_87 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40033 \vga_inst/row_RNIK477T[9] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 \vga_inst/row_RNI20A71[9] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xD8F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_89 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40035 start_prev_e_0_RNIG5DE( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 \fsm_state_RNO_0[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0x5551") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module fsm_state_cnst_1_0__SLICE_91 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40037 \fsm_state_cnst_1_0_.m3_N_6L9 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40038 \fsm_state_cnst_1_0_.m3_N_2L1 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x3733") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x7FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_93 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40039 pixel_accum_30_cZ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_94 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40040 \vga_inst/fsm_state30_1 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 \vga_inst/un1_fsm_state30_1 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_95 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40040 \vga_inst/un1_write_addresslto19_a0_12_ns ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \vga_inst/un1_write_addresslto19_a0_10_cZ ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_97 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40043 \vga_inst/un1_write_addresslto19_0_1_ns ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_98 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40044 \fsm_state_cnst_1_0_.m3_N_5L7 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \vga_inst/un1_write_addresslto19_0_1_x1_cZ ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x3033") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x557F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_99 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40046 \vga_inst/spram_address[7] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_100 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 \vga_inst/col_RNIK0IO[0] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \vga_inst/un2_spram_address ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x0500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_101 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40049 \vga_inst/un1_fsm_state27_2 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40050 \vga_inst/un3_spram_address_0_0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x03FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_103 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40051 \vga_inst/un1_write_addresslto19_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \vga_inst/un1_write_addresslto19_0_1_0_cZ ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xC400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x7FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_104 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \fsm_state_cnst_1_0_.m3_N_3L3 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \vga_inst/un1_write_addresslto19_0_0_cZ ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x1115") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_105 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40055 \vga_inst/col_RNIK7N36[2] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \vga_inst/col_RNIEHIL2[3] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_106 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40057 \vga_inst/spram_data_out_cZ[15] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \vga_inst/spram_data_out_0[15] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_107 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40056 \vga_inst/col_RNIEHIL2_1[3] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_108 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40059 \vga_inst/spram_data_out_cZ[11] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \vga_inst/spram_data_out_0[11] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_109 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40056 \vga_inst/col_RNIEHIL2_2[3] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_110 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40059 \vga_inst/spram_data_out_cZ[10] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 \vga_inst/spram_data_out_0[10] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_111 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40055 \vga_inst/col_RNIK7N36_1[2] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \vga_inst/col_RNIEHIL2_0[3] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_112 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40061 \vga_inst/spram_data_out_cZ[12] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \vga_inst/spram_data_out_0[12] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xAAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_113 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40063 \vga_inst/col_RNIEHIL2_3[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_114 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40064 \vga_inst/spram_data_out_u[0] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \vga_inst/spram_data_out_0[0] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_115 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40065 \vga_inst/col_RNIEHIL2_6[3] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 \vga_inst/col_RNIQ6IO[3] ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_116 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40067 \vga_inst/m58 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \vga_inst/m76 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xCF03") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x03CF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_117 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40069 \vga_inst/col_RNIK7N36_2[2] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 \vga_inst/col_RNIEHIL2_5[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xAAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_118 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40071 \vga_inst/m61 ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 \vga_inst/m79 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xAF05") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0x0F55") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_119 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 \vga_inst/col_RNIK7N36_0[2] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \vga_inst/col_RNIEHIL2_4[3] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_120 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40067 \vga_inst/m55 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \vga_inst/m73 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0x0C3F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_122 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40076 \vga_inst/row_RNII4TVR_0[9] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \vga_inst/col_RNIO4IO[2] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_124 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40078 \vga_inst/col_RNIUH00D_0[1] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_126 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/col_RNIUH00D[1] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \vga_inst/col_RNIM2IO[1] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_127 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40080 \vga_inst/row_RNII4TVR[9] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 \vga_inst/col_RNIG4JOQ[0] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xF500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_130 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output Q1, 
    F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40082 \fsm_state_RNO[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40083 \pixel_accum_esr_ctle[14] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \fsm_state_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xF004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_131 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40084 \vga_inst/col_RNIO6P71[4] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 \vga_inst/col_RNIDKSJ[7] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_132 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40086 \vga_inst/row_RNILGM11[9] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40087 \vga_inst/row_RNIUN23[5] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x0405") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_133 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40088 \vga_inst/row_RNIBBR3[6] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40089 \vga_inst/row_RNIP5H1[3] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_136 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40090 \vga_inst/col_RNI37E33[5] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 \vga_inst/col_RNI2GO71[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_137 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \vga_inst/row_RNI77M7[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 \vga_inst/row_RNI8R92[1] ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xBFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_139 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40094 \vga_inst/un3_spram_data_inlto6 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40095 \vga_inst/un3_spram_data_inlto6_4_cZ ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_141 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40096 \vga_inst/bit_count_0_sqmuxa ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \vga_inst/spram_data_in12 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0x3000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_143 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 \vga_inst/col_RNI1NLR1[7] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 \vga_inst/col_RNISMQT[4] ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0x5FFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_145 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40071 \vga_inst/m70 ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \vga_inst/m88 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0x0F33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_147 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40067 \vga_inst/m67 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \vga_inst/m85 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_149 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40067 \vga_inst/m64 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40101 \vga_inst/m82 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x03F3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_151 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40059 \vga_inst/spram_data_out_cZ[2] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \vga_inst/spram_data_out_0[2] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_153 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40059 \vga_inst/spram_data_out_cZ[3] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \vga_inst/spram_data_out_0[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_155 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 \vga_inst/spram_data_out_cZ[4] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \vga_inst/spram_data_out_0[4] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_157 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40059 \vga_inst/spram_data_out_cZ[7] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 \vga_inst/spram_data_out_0[7] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_159 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40057 \vga_inst/spram_data_out_cZ[8] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \vga_inst/spram_data_out_0[8] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_161 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output Q1, 
    F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40103 \fsm_state_RNO[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40104 \fsm_state_RNITK0K[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \fsm_state[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0x3A37") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0x0104") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_162 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, output 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40105 \fsm_state_cnst_1_0_.m8 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40106 \fsm_state_RNO[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \fsm_state[1].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x3616") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xFEEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_163 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40107 \bit_count_RNO_0[3] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40108 \vga_inst/m3_0_03_3 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0x0FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0x0800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_164 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40109 \vga_inst/m1_0_03_cZ ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40110 \vga_inst/m0_0_03_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_165 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, 
    CLK, output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40022 \vga_inst.SLICE_165_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40111 \vga_inst/m2_0_03_2 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20009 \pixel_accum_esr[14].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_167 ( input D0, C0, B0, A0, output F0 );

  lut40112 \vga_inst/row_RNIRK23[2] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_169 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40113 un2_spram_address_sbtinv( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40114 \vga_inst/un1_fsm_state_3 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0x003C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_171 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40115 \vga_inst.write_address_0_sqmuxa ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40116 \vga_inst/un1_fsm_state_2 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0x0800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0x0330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_173 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40117 \vga_inst/WR2 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40118 \vga_inst/m24 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0x0C00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0x0A00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_175 ( input D0, C0, B0, A0, output F0 );

  lut40119 \vga_inst/row_RNI33R3[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module fsm_state_cnst_1_0__SLICE_180 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40120 \fsm_state_cnst_1_0_.m3_N_4L5 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0x0FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_183 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40121 prev_pixel_valid_RNO( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40122 \vga_inst/un1_fsm_state27_2_1_cZ ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \prev_pixel_valid_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0xDC8C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_184 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40123 \vga_inst/col_RNI0DIO[6] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40124 \vga_inst/spram_address[9] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_187 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40125 \vga_inst/spram_address[8] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40126 \vga_inst/un1_write_addresslto19_a0_12_x1_cZ ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_190 ( input DI1, D1, C1, B1, D0, C0, A0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40127 \reader/pixel_half_RNO ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40128 \reader/pixel_half_RNIKJ0O_cZ ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \reader/pixel_half_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0x30C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_191 ( input DI1, D1, C1, D0, C0, CE, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40040 \reader/pixel_valid_RNO ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40129 \vga_inst/prev_pixel_valid_3 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \reader/pixel_valid.ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_192 ( input D0, C0, B0, A0, output F0 );

  lut40130 \vga_inst/un1_write_addresslto19_a0_8_cZ ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_195 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40123 \vga_inst/col_RNIUAIO[5] ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40131 \vga_inst/col_RNIS8IO[4] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_205 ( input DI1, D1, C1, B1, A1, D0, C0, A0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40132 WR_RNO( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40133 \vga_inst/WR0 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \WR_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0x8F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0x000A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_206 ( output F0 );
  wire   GNDI;

  lut40134 VCC_cZ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module un1_read_address_mulonly_0_12_0_ ( input CE, A9, A8, A7, A6, A5, A4, A3, 
    A2, A1, A0, B2, B0, AHOLD, BHOLD, output O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2 );
  wire   GNDI;

  MAC16_B \un1_read_address_mulonly_0[12:0] ( .CLK(GNDI), .CE(CE), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(GNDI), 
    .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), .B9(GNDI), 
    .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), .B3(GNDI), .B2(B2), 
    .B1(GNDI), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), .D12(GNDI), 
    .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), .D6(GNDI), 
    .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), .D0(GNDI), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(GNDI), .DHOLD(GNDI), .IRSTTOP(GNDI), 
    .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), .OLOADTOP(GNDI), 
    .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), .OHOLDTOP(GNDI), 
    .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), .SIGNEXTIN(GNDI), .O31(), 
    .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), .O24(), .O23(), .O22(), 
    .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), .O15(), .O14(), .O13(), 
    .O12(O12), .O11(O11), .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), 
    .O5(O5), .O4(O4), .O3(O3), .O2(O2), .O1(), .O0(), .CO(), .ACCUMCO(), 
    .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A9 => O12) = (0:0:0,0:0:0);
    (A9 => O11) = (0:0:0,0:0:0);
    (A9 => O10) = (0:0:0,0:0:0);
    (A9 => O9) = (0:0:0,0:0:0);
    (A8 => O12) = (0:0:0,0:0:0);
    (A8 => O11) = (0:0:0,0:0:0);
    (A8 => O10) = (0:0:0,0:0:0);
    (A8 => O9) = (0:0:0,0:0:0);
    (A8 => O8) = (0:0:0,0:0:0);
    (A7 => O12) = (0:0:0,0:0:0);
    (A7 => O11) = (0:0:0,0:0:0);
    (A7 => O10) = (0:0:0,0:0:0);
    (A7 => O9) = (0:0:0,0:0:0);
    (A7 => O8) = (0:0:0,0:0:0);
    (A7 => O7) = (0:0:0,0:0:0);
    (A6 => O12) = (0:0:0,0:0:0);
    (A6 => O11) = (0:0:0,0:0:0);
    (A6 => O10) = (0:0:0,0:0:0);
    (A6 => O9) = (0:0:0,0:0:0);
    (A6 => O8) = (0:0:0,0:0:0);
    (A6 => O7) = (0:0:0,0:0:0);
    (A6 => O6) = (0:0:0,0:0:0);
    (A5 => O12) = (0:0:0,0:0:0);
    (A5 => O11) = (0:0:0,0:0:0);
    (A5 => O10) = (0:0:0,0:0:0);
    (A5 => O9) = (0:0:0,0:0:0);
    (A5 => O8) = (0:0:0,0:0:0);
    (A5 => O7) = (0:0:0,0:0:0);
    (A5 => O6) = (0:0:0,0:0:0);
    (A5 => O5) = (0:0:0,0:0:0);
    (A4 => O12) = (0:0:0,0:0:0);
    (A4 => O11) = (0:0:0,0:0:0);
    (A4 => O10) = (0:0:0,0:0:0);
    (A4 => O9) = (0:0:0,0:0:0);
    (A4 => O8) = (0:0:0,0:0:0);
    (A4 => O7) = (0:0:0,0:0:0);
    (A4 => O6) = (0:0:0,0:0:0);
    (A4 => O5) = (0:0:0,0:0:0);
    (A4 => O4) = (0:0:0,0:0:0);
    (A3 => O12) = (0:0:0,0:0:0);
    (A3 => O11) = (0:0:0,0:0:0);
    (A3 => O10) = (0:0:0,0:0:0);
    (A3 => O9) = (0:0:0,0:0:0);
    (A3 => O8) = (0:0:0,0:0:0);
    (A3 => O7) = (0:0:0,0:0:0);
    (A3 => O6) = (0:0:0,0:0:0);
    (A3 => O5) = (0:0:0,0:0:0);
    (A3 => O4) = (0:0:0,0:0:0);
    (A3 => O3) = (0:0:0,0:0:0);
    (A2 => O12) = (0:0:0,0:0:0);
    (A2 => O11) = (0:0:0,0:0:0);
    (A2 => O10) = (0:0:0,0:0:0);
    (A2 => O9) = (0:0:0,0:0:0);
    (A2 => O8) = (0:0:0,0:0:0);
    (A2 => O7) = (0:0:0,0:0:0);
    (A2 => O6) = (0:0:0,0:0:0);
    (A2 => O5) = (0:0:0,0:0:0);
    (A2 => O4) = (0:0:0,0:0:0);
    (A2 => O3) = (0:0:0,0:0:0);
    (A2 => O2) = (0:0:0,0:0:0);
    (A1 => O12) = (0:0:0,0:0:0);
    (A1 => O11) = (0:0:0,0:0:0);
    (A1 => O10) = (0:0:0,0:0:0);
    (A1 => O9) = (0:0:0,0:0:0);
    (A1 => O8) = (0:0:0,0:0:0);
    (A1 => O7) = (0:0:0,0:0:0);
    (A1 => O6) = (0:0:0,0:0:0);
    (A1 => O5) = (0:0:0,0:0:0);
    (A1 => O4) = (0:0:0,0:0:0);
    (A1 => O3) = (0:0:0,0:0:0);
    (A1 => O2) = (0:0:0,0:0:0);
    (A0 => O12) = (0:0:0,0:0:0);
    (A0 => O11) = (0:0:0,0:0:0);
    (A0 => O10) = (0:0:0,0:0:0);
    (A0 => O9) = (0:0:0,0:0:0);
    (A0 => O8) = (0:0:0,0:0:0);
    (A0 => O7) = (0:0:0,0:0:0);
    (A0 => O6) = (0:0:0,0:0:0);
    (A0 => O5) = (0:0:0,0:0:0);
    (A0 => O4) = (0:0:0,0:0:0);
    (A0 => O3) = (0:0:0,0:0:0);
    (A0 => O2) = (0:0:0,0:0:0);
    (B2 => O12) = (0:0:0,0:0:0);
    (B2 => O11) = (0:0:0,0:0:0);
    (B2 => O10) = (0:0:0,0:0:0);
    (B2 => O9) = (0:0:0,0:0:0);
    (B2 => O8) = (0:0:0,0:0:0);
    (B2 => O7) = (0:0:0,0:0:0);
    (B2 => O6) = (0:0:0,0:0:0);
    (B2 => O5) = (0:0:0,0:0:0);
    (B2 => O4) = (0:0:0,0:0:0);
    (B2 => O3) = (0:0:0,0:0:0);
    (B2 => O2) = (0:0:0,0:0:0);
    (B0 => O12) = (0:0:0,0:0:0);
    (B0 => O11) = (0:0:0,0:0:0);
    (B0 => O10) = (0:0:0,0:0:0);
    (B0 => O9) = (0:0:0,0:0:0);
    (B0 => O8) = (0:0:0,0:0:0);
    (B0 => O7) = (0:0:0,0:0:0);
    (B0 => O6) = (0:0:0,0:0:0);
    (B0 => O5) = (0:0:0,0:0:0);
    (B0 => O4) = (0:0:0,0:0:0);
    (B0 => O3) = (0:0:0,0:0:0);
    (B0 => O2) = (0:0:0,0:0:0);
  endspecify

endmodule

module MAC16_B ( input CLK, CE, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, 
    C5, C4, C3, C2, C1, C0, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, 
    A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, B6, B5, B4, 
    B3, B2, B1, B0, D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, 
    D2, D1, D0, AHOLD, BHOLD, CHOLD, DHOLD, IRSTTOP, IRSTBOT, ORSTTOP, ORSTBOT, 
    OLOADTOP, OLOADBOT, ADDSUBTOP, ADDSUBBOT, OHOLDTOP, OHOLDBOT, CI, ACCUMCI, 
    SIGNEXTIN, output O31, O30, O29, O28, O27, O26, O25, O24, O23, O22, O21, 
    O20, O19, O18, O17, O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0, CO, ACCUMCO, SIGNEXTOUT );

  MAC16 INST10( .CLK(CLK), .CE(CE), .C15(C15), .C14(C14), .C13(C13), .C12(C12), 
    .C11(C11), .C10(C10), .C9(C9), .C8(C8), .C7(C7), .C6(C6), .C5(C5), .C4(C4), 
    .C3(C3), .C2(C2), .C1(C1), .C0(C0), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(D15), 
    .D14(D14), .D13(D13), .D12(D12), .D11(D11), .D10(D10), .D9(D9), .D8(D8), 
    .D7(D7), .D6(D6), .D5(D5), .D4(D4), .D3(D3), .D2(D2), .D1(D1), .D0(D0), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(CHOLD), .DHOLD(DHOLD), 
    .IRSTTOP(IRSTTOP), .IRSTBOT(IRSTBOT), .ORSTTOP(ORSTTOP), .ORSTBOT(ORSTBOT), 
    .OLOADTOP(OLOADTOP), .OLOADBOT(OLOADBOT), .ADDSUBTOP(ADDSUBTOP), 
    .ADDSUBBOT(ADDSUBBOT), .OHOLDTOP(OHOLDTOP), .OHOLDBOT(OHOLDBOT), .CI(CI), 
    .ACCUMCI(ACCUMCI), .SIGNEXTIN(SIGNEXTIN), .O31(O31), .O30(O30), .O29(O29), 
    .O28(O28), .O27(O27), .O26(O26), .O25(O25), .O24(O24), .O23(O23), 
    .O22(O22), .O21(O21), .O20(O20), .O19(O19), .O18(O18), .O17(O17), 
    .O16(O16), .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), 
    .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(O0), .CO(CO), .ACCUMCO(ACCUMCO), 
    .SIGNEXTOUT(SIGNEXTOUT));
  defparam INST10.NEG_TRIGGER = "0b0";
  defparam INST10.A_REG = "0b0";
  defparam INST10.B_REG = "0b0";
  defparam INST10.C_REG = "0b0";
  defparam INST10.D_REG = "0b0";
  defparam INST10.TOP_8x8_MULT_REG = "0b0";
  defparam INST10.BOT_8x8_MULT_REG = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG1 = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG2 = "0b0";
  defparam INST10.TOPOUTPUT_SELECT = "0b11";
  defparam INST10.TOPADDSUB_LOWERINPUT = "0b00";
  defparam INST10.TOPADDSUB_UPPERINPUT = "0b0";
  defparam INST10.TOPADDSUB_CARRYSELECT = "0b00";
  defparam INST10.BOTOUTPUT_SELECT = "0b11";
  defparam INST10.BOTADDSUB_LOWERINPUT = "0b00";
  defparam INST10.BOTADDSUB_UPPERINPUT = "0b0";
  defparam INST10.BOTADDSUB_CARRYSELECT = "0b00";
  defparam INST10.MODE_8x8 = "0b0";
  defparam INST10.A_SIGNED = "0b0";
  defparam INST10.B_SIGNED = "0b0";
endmodule

module my_pll_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTCORE );
  wire   GNDI;

  PLL_B_B \my_pll/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTCORE) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.DIVR = "0";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module clk_12MHz ( output PADDI, input clk_12MHz );
  wire   GNDI;

  BB_B_B \clk_12MHz_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(clk_12MHz));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (clk_12MHz => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module start ( output PADDI, input start );
  wire   GNDI;

  BB_B_B \start_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(start));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (start => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_VSYNC_IN ( output PADDI, input CAMERA_VSYNC_IN );
  wire   GNDI;

  BB_B_B \CAMERA_VSYNC_IN_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERA_VSYNC_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERA_VSYNC_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_HREF_IN ( output PADDI, input CAMERA_HREF_IN );
  wire   GNDI;

  BB_B_B \CAMERA_HREF_IN_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERA_HREF_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERA_HREF_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_0_ ( output PADDI, input CAMERADATAIN0 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_1_ ( output PADDI, input CAMERADATAIN1 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_2_ ( output PADDI, input CAMERADATAIN2 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[2].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN2 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_3_ ( output PADDI, input CAMERADATAIN3 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[3].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN3 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_4_ ( output PADDI, input CAMERADATAIN4 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[4].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN4 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_5_ ( output PADDI, input CAMERADATAIN5 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[5].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN5 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_6_ ( output PADDI, input CAMERADATAIN6 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[6].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN6 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_7_ ( output PADDI, input CAMERADATAIN7 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[7].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN7 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_PCLOCK ( output PADDI, input CAMERA_PCLOCK );
  wire   GNDI;

  BB_B_B \CAMERA_PCLOCK_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERA_PCLOCK));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERA_PCLOCK => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_state_0_ ( input PADDO, output debugstate0 );
  wire   VCCI;

  BB_B_B \debug_state_obuf[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(debugstate0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debugstate0) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_state_1_ ( input PADDO, output debugstate1 );
  wire   VCCI;

  BB_B_B \debug_state_obuf[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(debugstate1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debugstate1) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_0_ ( input PADDO, output RGB0 );
  wire   VCCI;

  BB_B_B \RGB_obuf[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB0) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_1_ ( input PADDO, output RGB1 );
  wire   VCCI;

  BB_B_B \RGB_obuf[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB1) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_2_ ( input PADDO, output RGB2 );
  wire   VCCI;

  BB_B_B \RGB_obuf[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB2) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_3_ ( input PADDO, output RGB3 );
  wire   VCCI;

  BB_B_B \RGB_obuf[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB3) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_4_ ( input PADDO, output RGB4 );
  wire   VCCI;

  BB_B_B \RGB_obuf[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB4) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_5_ ( input PADDO, output RGB5 );
  wire   VCCI;

  BB_B_B \RGB_obuf[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB5) = (0:0:0,0:0:0);
  endspecify

endmodule

module VGA_HSYNC ( input PADDO, output VGA_HSYNC );
  wire   VCCI;

  BB_B_B \VGA_HSYNC_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VGA_HSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VGA_HSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module VGA_VSYNC ( input PADDO, output VGA_VSYNC );
  wire   VCCI;

  BB_B_B \VGA_VSYNC_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VGA_VSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VGA_VSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module clk_25MHz ( input PADDO, output clk_25MHz );
  wire   VCCI;

  BB_B_B \clk_25MHz_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(clk_25MHz));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => clk_25MHz) = (0:0:0,0:0:0);
  endspecify

endmodule

module SPRAM2_vfb_b_inst ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, 
    ADDRESS9, ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, 
    ADDRESS2, ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, 
    DATAIN11, DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, 
    DATAIN3, DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, 
    MASKWREN0, WREN, CHIPSELECT, CLOCK, POWEROFF_N, output DATAOUT15, 
    DATAOUT14, DATAOUT13, DATAOUT12, DATAOUT11, DATAOUT10, DATAOUT9, DATAOUT8, 
    DATAOUT7, DATAOUT6, DATAOUT5, DATAOUT4, DATAOUT3, DATAOUT2, DATAOUT1, 
    DATAOUT0 );
  wire   GNDI, ADDRESS13_dly, CLOCK_dly, ADDRESS12_dly, ADDRESS11_dly, 
         ADDRESS10_dly, ADDRESS9_dly, ADDRESS8_dly, ADDRESS7_dly, ADDRESS6_dly, 
         ADDRESS5_dly, ADDRESS4_dly, ADDRESS3_dly, ADDRESS2_dly, ADDRESS1_dly, 
         ADDRESS0_dly, DATAIN15_dly, DATAIN14_dly, DATAIN13_dly, DATAIN12_dly, 
         DATAIN11_dly, DATAIN10_dly, DATAIN9_dly, DATAIN8_dly, DATAIN7_dly, 
         DATAIN6_dly, DATAIN5_dly, DATAIN4_dly, DATAIN3_dly, DATAIN2_dly, 
         DATAIN1_dly, DATAIN0_dly, MASKWREN3_dly, MASKWREN2_dly, MASKWREN1_dly, 
         MASKWREN0_dly, WREN_dly, CHIPSELECT_dly, POWEROFF_N_dly;

  VFB_B_B \SPRAM2.vfb_b_inst ( .ADDRESS13(ADDRESS13_dly), 
    .ADDRESS12(ADDRESS12_dly), .ADDRESS11(ADDRESS11_dly), 
    .ADDRESS10(ADDRESS10_dly), .ADDRESS9(ADDRESS9_dly), 
    .ADDRESS8(ADDRESS8_dly), .ADDRESS7(ADDRESS7_dly), .ADDRESS6(ADDRESS6_dly), 
    .ADDRESS5(ADDRESS5_dly), .ADDRESS4(ADDRESS4_dly), .ADDRESS3(ADDRESS3_dly), 
    .ADDRESS2(ADDRESS2_dly), .ADDRESS1(ADDRESS1_dly), .ADDRESS0(ADDRESS0_dly), 
    .DATAIN15(DATAIN15_dly), .DATAIN14(DATAIN14_dly), .DATAIN13(DATAIN13_dly), 
    .DATAIN12(DATAIN12_dly), .DATAIN11(DATAIN11_dly), .DATAIN10(DATAIN10_dly), 
    .DATAIN9(DATAIN9_dly), .DATAIN8(DATAIN8_dly), .DATAIN7(DATAIN7_dly), 
    .DATAIN6(DATAIN6_dly), .DATAIN5(DATAIN5_dly), .DATAIN4(DATAIN4_dly), 
    .DATAIN3(DATAIN3_dly), .DATAIN2(DATAIN2_dly), .DATAIN1(DATAIN1_dly), 
    .DATAIN0(DATAIN0_dly), .MASKWREN3(MASKWREN3_dly), 
    .MASKWREN2(MASKWREN2_dly), .MASKWREN1(MASKWREN1_dly), 
    .MASKWREN0(MASKWREN0_dly), .WREN(WREN_dly), .CHIPSELECT(CHIPSELECT_dly), 
    .CLOCK(CLOCK_dly), .RDMARGINEN(GNDI), .RDMARGIN3(GNDI), .RDMARGIN2(GNDI), 
    .RDMARGIN1(GNDI), .RDMARGIN0(GNDI), .STANDBY(GNDI), .SLEEP(GNDI), 
    .POWEROFF_N(POWEROFF_N_dly), .TEST(GNDI), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(DATAOUT13), .DATAOUT12(DATAOUT12), 
    .DATAOUT11(DATAOUT11), .DATAOUT10(DATAOUT10), .DATAOUT9(DATAOUT9), 
    .DATAOUT8(DATAOUT8), .DATAOUT7(DATAOUT7), .DATAOUT6(DATAOUT6), 
    .DATAOUT5(DATAOUT5), .DATAOUT4(DATAOUT4), .DATAOUT3(DATAOUT3), 
    .DATAOUT2(DATAOUT2), .DATAOUT1(DATAOUT1), .DATAOUT0(DATAOUT0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLOCK => DATAOUT15) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT14) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT13) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT12) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT11) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT10) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT9) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT8) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT7) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT6) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT5) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT4) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT3) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT2) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT1) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT0) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT15) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT14) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT13) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT12) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT11) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT10) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT9) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT8) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT7) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT6) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT5) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT4) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT3) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT2) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT1) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT0) = (0:0:0,0:0:0);
    $setuphold 
      (posedge CLOCK, ADDRESS13, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS13_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS12, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS12_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS11, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS11_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS10, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS10_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS9, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS9_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS8, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS8_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS7, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS7_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS6, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS6_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS5, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS5_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS4, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS4_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS3, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS3_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS2, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS2_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS1, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS1_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS0, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS0_dly);
    $setuphold 
      (posedge CLOCK, DATAIN15, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN15_dly);
    $setuphold 
      (posedge CLOCK, DATAIN14, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN14_dly);
    $setuphold 
      (posedge CLOCK, DATAIN13, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN13_dly);
    $setuphold 
      (posedge CLOCK, DATAIN12, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN12_dly);
    $setuphold 
      (posedge CLOCK, DATAIN11, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN11_dly);
    $setuphold 
      (posedge CLOCK, DATAIN10, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN10_dly);
    $setuphold 
      (posedge CLOCK, DATAIN9, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN9_dly);
    $setuphold 
      (posedge CLOCK, DATAIN8, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN8_dly);
    $setuphold 
      (posedge CLOCK, DATAIN7, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN7_dly);
    $setuphold 
      (posedge CLOCK, DATAIN6, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN6_dly);
    $setuphold 
      (posedge CLOCK, DATAIN5, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN5_dly);
    $setuphold 
      (posedge CLOCK, DATAIN4, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN4_dly);
    $setuphold 
      (posedge CLOCK, DATAIN3, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN3_dly);
    $setuphold 
      (posedge CLOCK, DATAIN2, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN2_dly);
    $setuphold 
      (posedge CLOCK, DATAIN1, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN1_dly);
    $setuphold 
      (posedge CLOCK, DATAIN0, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN0_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN3, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN3_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN2, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN2_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN1, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN1_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN0, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN0_dly);
    $setuphold (posedge CLOCK, WREN, 0:0:0, 0:0:0,,,, CLOCK_dly, WREN_dly);
    $setuphold 
      (posedge CLOCK, CHIPSELECT, 0:0:0, 0:0:0,,,, CLOCK_dly, CHIPSELECT_dly);
    $setuphold 
      (posedge CLOCK, POWEROFF_N, 0:0:0, 0:0:0,,,, CLOCK_dly, POWEROFF_N_dly);
    $width (posedge CLOCK, 0:0:0);
    $width (negedge CLOCK, 0:0:0);
  endspecify

endmodule

module VFB_B_B ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, ADDRESS9, 
    ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, ADDRESS2, 
    ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, DATAIN11, 
    DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, DATAIN3, 
    DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, MASKWREN0, 
    WREN, CHIPSELECT, CLOCK, RDMARGINEN, RDMARGIN3, RDMARGIN2, RDMARGIN1, 
    RDMARGIN0, STANDBY, SLEEP, POWEROFF_N, TEST, output DATAOUT15, DATAOUT14, 
    DATAOUT13, DATAOUT12, DATAOUT11, DATAOUT10, DATAOUT9, DATAOUT8, DATAOUT7, 
    DATAOUT6, DATAOUT5, DATAOUT4, DATAOUT3, DATAOUT2, DATAOUT1, DATAOUT0 );

  VFB_B INST10( .ADDRESS13(ADDRESS13), .ADDRESS12(ADDRESS12), 
    .ADDRESS11(ADDRESS11), .ADDRESS10(ADDRESS10), .ADDRESS9(ADDRESS9), 
    .ADDRESS8(ADDRESS8), .ADDRESS7(ADDRESS7), .ADDRESS6(ADDRESS6), 
    .ADDRESS5(ADDRESS5), .ADDRESS4(ADDRESS4), .ADDRESS3(ADDRESS3), 
    .ADDRESS2(ADDRESS2), .ADDRESS1(ADDRESS1), .ADDRESS0(ADDRESS0), 
    .DATAIN15(DATAIN15), .DATAIN14(DATAIN14), .DATAIN13(DATAIN13), 
    .DATAIN12(DATAIN12), .DATAIN11(DATAIN11), .DATAIN10(DATAIN10), 
    .DATAIN9(DATAIN9), .DATAIN8(DATAIN8), .DATAIN7(DATAIN7), .DATAIN6(DATAIN6), 
    .DATAIN5(DATAIN5), .DATAIN4(DATAIN4), .DATAIN3(DATAIN3), .DATAIN2(DATAIN2), 
    .DATAIN1(DATAIN1), .DATAIN0(DATAIN0), .MASKWREN3(MASKWREN3), 
    .MASKWREN2(MASKWREN2), .MASKWREN1(MASKWREN1), .MASKWREN0(MASKWREN0), 
    .WREN(WREN), .CHIPSELECT(CHIPSELECT), .CLOCK(CLOCK), 
    .RDMARGINEN(RDMARGINEN), .RDMARGIN3(RDMARGIN3), .RDMARGIN2(RDMARGIN2), 
    .RDMARGIN1(RDMARGIN1), .RDMARGIN0(RDMARGIN0), .STANDBY(STANDBY), 
    .SLEEP(SLEEP), .POWEROFF_N(POWEROFF_N), .TEST(TEST), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(DATAOUT13), .DATAOUT12(DATAOUT12), 
    .DATAOUT11(DATAOUT11), .DATAOUT10(DATAOUT10), .DATAOUT9(DATAOUT9), 
    .DATAOUT8(DATAOUT8), .DATAOUT7(DATAOUT7), .DATAOUT6(DATAOUT6), 
    .DATAOUT5(DATAOUT5), .DATAOUT4(DATAOUT4), .DATAOUT3(DATAOUT3), 
    .DATAOUT2(DATAOUT2), .DATAOUT1(DATAOUT1), .DATAOUT0(DATAOUT0));
endmodule

module SPRAM1_vfb_b_inst ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, 
    ADDRESS9, ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, 
    ADDRESS2, ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, 
    DATAIN11, DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, 
    DATAIN3, DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, 
    MASKWREN0, WREN, CHIPSELECT, CLOCK, POWEROFF_N, output DATAOUT15, 
    DATAOUT14, DATAOUT13, DATAOUT12, DATAOUT11, DATAOUT10, DATAOUT9, DATAOUT8, 
    DATAOUT7, DATAOUT6, DATAOUT5, DATAOUT4, DATAOUT3, DATAOUT2, DATAOUT1, 
    DATAOUT0 );
  wire   GNDI, ADDRESS13_dly, CLOCK_dly, ADDRESS12_dly, ADDRESS11_dly, 
         ADDRESS10_dly, ADDRESS9_dly, ADDRESS8_dly, ADDRESS7_dly, ADDRESS6_dly, 
         ADDRESS5_dly, ADDRESS4_dly, ADDRESS3_dly, ADDRESS2_dly, ADDRESS1_dly, 
         ADDRESS0_dly, DATAIN15_dly, DATAIN14_dly, DATAIN13_dly, DATAIN12_dly, 
         DATAIN11_dly, DATAIN10_dly, DATAIN9_dly, DATAIN8_dly, DATAIN7_dly, 
         DATAIN6_dly, DATAIN5_dly, DATAIN4_dly, DATAIN3_dly, DATAIN2_dly, 
         DATAIN1_dly, DATAIN0_dly, MASKWREN3_dly, MASKWREN2_dly, MASKWREN1_dly, 
         MASKWREN0_dly, WREN_dly, CHIPSELECT_dly, POWEROFF_N_dly;

  VFB_B_B \SPRAM1.vfb_b_inst ( .ADDRESS13(ADDRESS13_dly), 
    .ADDRESS12(ADDRESS12_dly), .ADDRESS11(ADDRESS11_dly), 
    .ADDRESS10(ADDRESS10_dly), .ADDRESS9(ADDRESS9_dly), 
    .ADDRESS8(ADDRESS8_dly), .ADDRESS7(ADDRESS7_dly), .ADDRESS6(ADDRESS6_dly), 
    .ADDRESS5(ADDRESS5_dly), .ADDRESS4(ADDRESS4_dly), .ADDRESS3(ADDRESS3_dly), 
    .ADDRESS2(ADDRESS2_dly), .ADDRESS1(ADDRESS1_dly), .ADDRESS0(ADDRESS0_dly), 
    .DATAIN15(DATAIN15_dly), .DATAIN14(DATAIN14_dly), .DATAIN13(DATAIN13_dly), 
    .DATAIN12(DATAIN12_dly), .DATAIN11(DATAIN11_dly), .DATAIN10(DATAIN10_dly), 
    .DATAIN9(DATAIN9_dly), .DATAIN8(DATAIN8_dly), .DATAIN7(DATAIN7_dly), 
    .DATAIN6(DATAIN6_dly), .DATAIN5(DATAIN5_dly), .DATAIN4(DATAIN4_dly), 
    .DATAIN3(DATAIN3_dly), .DATAIN2(DATAIN2_dly), .DATAIN1(DATAIN1_dly), 
    .DATAIN0(DATAIN0_dly), .MASKWREN3(MASKWREN3_dly), 
    .MASKWREN2(MASKWREN2_dly), .MASKWREN1(MASKWREN1_dly), 
    .MASKWREN0(MASKWREN0_dly), .WREN(WREN_dly), .CHIPSELECT(CHIPSELECT_dly), 
    .CLOCK(CLOCK_dly), .RDMARGINEN(GNDI), .RDMARGIN3(GNDI), .RDMARGIN2(GNDI), 
    .RDMARGIN1(GNDI), .RDMARGIN0(GNDI), .STANDBY(GNDI), .SLEEP(GNDI), 
    .POWEROFF_N(POWEROFF_N_dly), .TEST(GNDI), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(DATAOUT13), .DATAOUT12(DATAOUT12), 
    .DATAOUT11(DATAOUT11), .DATAOUT10(DATAOUT10), .DATAOUT9(DATAOUT9), 
    .DATAOUT8(DATAOUT8), .DATAOUT7(DATAOUT7), .DATAOUT6(DATAOUT6), 
    .DATAOUT5(DATAOUT5), .DATAOUT4(DATAOUT4), .DATAOUT3(DATAOUT3), 
    .DATAOUT2(DATAOUT2), .DATAOUT1(DATAOUT1), .DATAOUT0(DATAOUT0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLOCK => DATAOUT15) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT14) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT13) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT12) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT11) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT10) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT9) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT8) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT7) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT6) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT5) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT4) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT3) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT2) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT1) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT0) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT15) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT14) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT13) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT12) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT11) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT10) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT9) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT8) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT7) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT6) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT5) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT4) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT3) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT2) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT1) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT0) = (0:0:0,0:0:0);
    $setuphold 
      (posedge CLOCK, ADDRESS13, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS13_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS12, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS12_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS11, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS11_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS10, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS10_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS9, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS9_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS8, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS8_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS7, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS7_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS6, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS6_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS5, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS5_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS4, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS4_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS3, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS3_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS2, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS2_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS1, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS1_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS0, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS0_dly);
    $setuphold 
      (posedge CLOCK, DATAIN15, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN15_dly);
    $setuphold 
      (posedge CLOCK, DATAIN14, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN14_dly);
    $setuphold 
      (posedge CLOCK, DATAIN13, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN13_dly);
    $setuphold 
      (posedge CLOCK, DATAIN12, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN12_dly);
    $setuphold 
      (posedge CLOCK, DATAIN11, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN11_dly);
    $setuphold 
      (posedge CLOCK, DATAIN10, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN10_dly);
    $setuphold 
      (posedge CLOCK, DATAIN9, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN9_dly);
    $setuphold 
      (posedge CLOCK, DATAIN8, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN8_dly);
    $setuphold 
      (posedge CLOCK, DATAIN7, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN7_dly);
    $setuphold 
      (posedge CLOCK, DATAIN6, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN6_dly);
    $setuphold 
      (posedge CLOCK, DATAIN5, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN5_dly);
    $setuphold 
      (posedge CLOCK, DATAIN4, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN4_dly);
    $setuphold 
      (posedge CLOCK, DATAIN3, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN3_dly);
    $setuphold 
      (posedge CLOCK, DATAIN2, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN2_dly);
    $setuphold 
      (posedge CLOCK, DATAIN1, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN1_dly);
    $setuphold 
      (posedge CLOCK, DATAIN0, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN0_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN3, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN3_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN2, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN2_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN1, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN1_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN0, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN0_dly);
    $setuphold (posedge CLOCK, WREN, 0:0:0, 0:0:0,,,, CLOCK_dly, WREN_dly);
    $setuphold 
      (posedge CLOCK, CHIPSELECT, 0:0:0, 0:0:0,,,, CLOCK_dly, CHIPSELECT_dly);
    $setuphold 
      (posedge CLOCK, POWEROFF_N, 0:0:0, 0:0:0,,,, CLOCK_dly, POWEROFF_N_dly);
    $width (posedge CLOCK, 0:0:0);
    $width (negedge CLOCK, 0:0:0);
  endspecify

endmodule

module SPRAM0_vfb_b_inst ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, 
    ADDRESS9, ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, 
    ADDRESS2, ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, 
    DATAIN11, DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, 
    DATAIN3, DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, 
    MASKWREN0, WREN, CHIPSELECT, CLOCK, POWEROFF_N, output DATAOUT15, 
    DATAOUT14, DATAOUT13, DATAOUT12, DATAOUT11, DATAOUT10, DATAOUT9, DATAOUT8, 
    DATAOUT7, DATAOUT6, DATAOUT5, DATAOUT4, DATAOUT3, DATAOUT2, DATAOUT1, 
    DATAOUT0 );
  wire   GNDI, ADDRESS13_dly, CLOCK_dly, ADDRESS12_dly, ADDRESS11_dly, 
         ADDRESS10_dly, ADDRESS9_dly, ADDRESS8_dly, ADDRESS7_dly, ADDRESS6_dly, 
         ADDRESS5_dly, ADDRESS4_dly, ADDRESS3_dly, ADDRESS2_dly, ADDRESS1_dly, 
         ADDRESS0_dly, DATAIN15_dly, DATAIN14_dly, DATAIN13_dly, DATAIN12_dly, 
         DATAIN11_dly, DATAIN10_dly, DATAIN9_dly, DATAIN8_dly, DATAIN7_dly, 
         DATAIN6_dly, DATAIN5_dly, DATAIN4_dly, DATAIN3_dly, DATAIN2_dly, 
         DATAIN1_dly, DATAIN0_dly, MASKWREN3_dly, MASKWREN2_dly, MASKWREN1_dly, 
         MASKWREN0_dly, WREN_dly, CHIPSELECT_dly, POWEROFF_N_dly;

  VFB_B_B \SPRAM0.vfb_b_inst ( .ADDRESS13(ADDRESS13_dly), 
    .ADDRESS12(ADDRESS12_dly), .ADDRESS11(ADDRESS11_dly), 
    .ADDRESS10(ADDRESS10_dly), .ADDRESS9(ADDRESS9_dly), 
    .ADDRESS8(ADDRESS8_dly), .ADDRESS7(ADDRESS7_dly), .ADDRESS6(ADDRESS6_dly), 
    .ADDRESS5(ADDRESS5_dly), .ADDRESS4(ADDRESS4_dly), .ADDRESS3(ADDRESS3_dly), 
    .ADDRESS2(ADDRESS2_dly), .ADDRESS1(ADDRESS1_dly), .ADDRESS0(ADDRESS0_dly), 
    .DATAIN15(DATAIN15_dly), .DATAIN14(DATAIN14_dly), .DATAIN13(DATAIN13_dly), 
    .DATAIN12(DATAIN12_dly), .DATAIN11(DATAIN11_dly), .DATAIN10(DATAIN10_dly), 
    .DATAIN9(DATAIN9_dly), .DATAIN8(DATAIN8_dly), .DATAIN7(DATAIN7_dly), 
    .DATAIN6(DATAIN6_dly), .DATAIN5(DATAIN5_dly), .DATAIN4(DATAIN4_dly), 
    .DATAIN3(DATAIN3_dly), .DATAIN2(DATAIN2_dly), .DATAIN1(DATAIN1_dly), 
    .DATAIN0(DATAIN0_dly), .MASKWREN3(MASKWREN3_dly), 
    .MASKWREN2(MASKWREN2_dly), .MASKWREN1(MASKWREN1_dly), 
    .MASKWREN0(MASKWREN0_dly), .WREN(WREN_dly), .CHIPSELECT(CHIPSELECT_dly), 
    .CLOCK(CLOCK_dly), .RDMARGINEN(GNDI), .RDMARGIN3(GNDI), .RDMARGIN2(GNDI), 
    .RDMARGIN1(GNDI), .RDMARGIN0(GNDI), .STANDBY(GNDI), .SLEEP(GNDI), 
    .POWEROFF_N(POWEROFF_N_dly), .TEST(GNDI), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(DATAOUT13), .DATAOUT12(DATAOUT12), 
    .DATAOUT11(DATAOUT11), .DATAOUT10(DATAOUT10), .DATAOUT9(DATAOUT9), 
    .DATAOUT8(DATAOUT8), .DATAOUT7(DATAOUT7), .DATAOUT6(DATAOUT6), 
    .DATAOUT5(DATAOUT5), .DATAOUT4(DATAOUT4), .DATAOUT3(DATAOUT3), 
    .DATAOUT2(DATAOUT2), .DATAOUT1(DATAOUT1), .DATAOUT0(DATAOUT0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLOCK => DATAOUT15) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT14) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT13) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT12) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT11) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT10) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT9) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT8) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT7) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT6) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT5) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT4) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT3) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT2) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT1) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT0) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT15) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT14) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT13) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT12) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT11) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT10) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT9) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT8) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT7) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT6) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT5) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT4) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT3) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT2) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT1) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT0) = (0:0:0,0:0:0);
    $setuphold 
      (posedge CLOCK, ADDRESS13, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS13_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS12, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS12_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS11, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS11_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS10, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS10_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS9, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS9_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS8, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS8_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS7, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS7_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS6, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS6_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS5, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS5_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS4, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS4_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS3, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS3_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS2, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS2_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS1, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS1_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS0, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS0_dly);
    $setuphold 
      (posedge CLOCK, DATAIN15, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN15_dly);
    $setuphold 
      (posedge CLOCK, DATAIN14, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN14_dly);
    $setuphold 
      (posedge CLOCK, DATAIN13, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN13_dly);
    $setuphold 
      (posedge CLOCK, DATAIN12, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN12_dly);
    $setuphold 
      (posedge CLOCK, DATAIN11, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN11_dly);
    $setuphold 
      (posedge CLOCK, DATAIN10, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN10_dly);
    $setuphold 
      (posedge CLOCK, DATAIN9, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN9_dly);
    $setuphold 
      (posedge CLOCK, DATAIN8, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN8_dly);
    $setuphold 
      (posedge CLOCK, DATAIN7, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN7_dly);
    $setuphold 
      (posedge CLOCK, DATAIN6, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN6_dly);
    $setuphold 
      (posedge CLOCK, DATAIN5, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN5_dly);
    $setuphold 
      (posedge CLOCK, DATAIN4, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN4_dly);
    $setuphold 
      (posedge CLOCK, DATAIN3, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN3_dly);
    $setuphold 
      (posedge CLOCK, DATAIN2, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN2_dly);
    $setuphold 
      (posedge CLOCK, DATAIN1, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN1_dly);
    $setuphold 
      (posedge CLOCK, DATAIN0, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN0_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN3, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN3_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN2, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN2_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN1, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN1_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN0, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN0_dly);
    $setuphold (posedge CLOCK, WREN, 0:0:0, 0:0:0,,,, CLOCK_dly, WREN_dly);
    $setuphold 
      (posedge CLOCK, CHIPSELECT, 0:0:0, 0:0:0,,,, CLOCK_dly, CHIPSELECT_dly);
    $setuphold 
      (posedge CLOCK, POWEROFF_N, 0:0:0, 0:0:0,,,, CLOCK_dly, POWEROFF_N_dly);
    $width (posedge CLOCK, 0:0:0);
    $width (negedge CLOCK, 0:0:0);
  endspecify

endmodule
