
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o full_vga_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui full_vga_impl_1.udb 
// Netlist created on Wed Apr 16 23:48:28 2025
// Netlist written on Wed Apr 16 23:48:34 2025
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( clk_12MHz, start, CAMERA_VSYNC_IN, CAMERA_HREF_IN, CAMERA_DATA_IN, 
             CAMERA_PCLOCK, debug_state, RGB, VGA_HSYNC, VGA_VSYNC, clk_25MHz );
  input  clk_12MHz, start, CAMERA_VSYNC_IN, CAMERA_HREF_IN;
  input  [7:0] CAMERA_DATA_IN;
  input  CAMERA_PCLOCK;
  output [1:0] debug_state;
  output [5:0] RGB;
  output VGA_HSYNC, VGA_VSYNC, clk_25MHz;
  wire   \vga_inst.un3_row_1_cry_8_c_0_S0 , \vga_inst.un3_row_1_cry_8_c_0.CO0 , 
         \row[9] , \vga_inst.un3_row_1_cry_7 , \row[8] , \vga_inst.col11 , 
         clk_25MHz_c, \vga_inst.N_501 , \vga_inst.un3_row_1_cry_6_c_0_S1 , 
         \vga_inst.un3_row_1_cry_6_c_0_S0 , \vga_inst.un3_row_1_cry_6_c_0.CO0 , 
         \row[7] , \vga_inst.un3_row_1_cry_5 , \row[6] , 
         \vga_inst.un3_row_1_cry_4_c_0_S1 , \vga_inst.un3_row_1_cry_4_c_0_S0 , 
         \vga_inst.un3_row_1_cry_4_c_0.CO0 , \row[5] , 
         \vga_inst.un3_row_1_cry_3 , \row[4] , 
         \vga_inst.un3_row_1_cry_2_c_0.CO0 , \row[3] , 
         \vga_inst.un3_row_1_cry_1 , \row[2] , \vga_inst.N_494 , 
         \vga_inst.N_495 , \vga_inst.un3_row_1_cry_1_c_0_S1 , 
         \vga_inst.un3_row_1_cry_1_c_0.CO0 , \row[1] , \row[0] , 
         \vga_inst.col_3[9] , \vga_inst.col_3[8] , 
         \vga_inst.un2_col_cry_8_c_0.CO0 , \col[9] , \vga_inst.un2_col_cry_7 , 
         \col[8] , \vga_inst.un2_col_cry_6_c_0_S1 , 
         \vga_inst.un2_col_cry_6_c_0_S0 , \vga_inst.un2_col_cry_6_c_0.CO0 , 
         \col[7] , \vga_inst.un2_col_cry_5 , \vga_inst.col_Z[6] , 
         \vga_inst.col_3[5] , \vga_inst.un2_col_cry_4_c_0_S0 , 
         \vga_inst.un2_col_cry_4_c_0.CO0 , \vga_inst.col_Z[5] , 
         \vga_inst.un2_col_cry_3 , \vga_inst.col_Z[4] , 
         \vga_inst.un2_col_cry_2_c_0_S1 , \vga_inst.un2_col_cry_2_c_0_S0 , 
         \vga_inst.un2_col_cry_2_c_0.CO0 , \vga_inst.col_Z[3] , 
         \vga_inst.un2_col_cry_1 , \vga_inst.col_Z[2] , 
         \vga_inst.un2_col_cry_1_c_0_S1 , \vga_inst.un2_col_cry_1_c_0.CO0 , 
         \vga_inst.col_Z[1] , \vga_inst.col_Z[0] , 
         \read_address_cry_11_c_0.CO0 , read_address_cry_10, 
         \read_address[18] , \read_address[19] , 
         \read_address_cry_9_0_c_0.CO0 , read_address_cry_9_0_c_0_RNO_1, 
         read_address_cry_8, read_address_cry_9_0_c_0_RNO_0, 
         read_address_cry_9_0_c_0_RNO, \read_address[16] , \read_address[17] , 
         \read_address_cry_7_0_c_0.CO0 , read_address_cry_7_0_c_0_RNO_2, 
         read_address_cry_7_0_c_0_RNO_0, read_address_cry_6, 
         read_address_cry_7_0_c_0_RNO_1, read_address_cry_7_0_c_0_RNO, 
         \read_address[14] , \read_address[15] , 
         \read_address_cry_5_0_c_0.CO0 , read_address_cry_5_0_c_0_RNO_2, 
         read_address_cry_5_0_c_0_RNO_0, read_address_cry_4, 
         read_address_cry_5_0_c_0_RNO_1, read_address_cry_5_0_c_0_RNO, 
         \read_address[12] , \read_address[13] , \read_address_cry_3_c_0.CO0 , 
         read_address_cry_3_c_0_RNO_2, read_address_cry_3_c_0_RNO_0, 
         read_address_cry_2, read_address_cry_3_c_0_RNO_1, 
         read_address_cry_3_c_0_RNO, \read_address[10] , \read_address[11] , 
         \read_address_cry_1_c_0.CO0 , read_address_axb_2, read_address_cry_0, 
         \read_address[8] , \read_address[9] , \read_address_cry_0_c_0.CO0 , 
         \read_address[7] , \write_address_RNO_S0[19] , 
         \write_address_RNO[19].CO0 , \carry_pack.un1_write_address_1_cry_18 , 
         \write_address[19] , un1_fsm_state27_2_0_a2, 
         un1_write_address_1_cry_17_c_0_S0, 
         \un1_write_address_1_cry_17_c_0.CO0 , \write_address[18] , 
         \carry_pack.un1_write_address_1_cry_16 , \write_address[17] , 
         un1_write_address_1_cry_17_c_0_S1, un1_write_address_1_cry_15_c_0_S1, 
         un1_write_address_1_cry_15_c_0_S0, 
         \un1_write_address_1_cry_15_c_0.CO0 , \write_address[16] , 
         \carry_pack.un1_write_address_1_cry_14 , \write_address[15] , 
         un1_write_address_1_cry_13_c_0_S1, un1_write_address_1_cry_13_c_0_S0, 
         \un1_write_address_1_cry_13_c_0.CO0 , \write_address[14] , 
         \carry_pack.un1_write_address_1_cry_12 , \write_address[13] , 
         un1_write_address_1_cry_11_c_0_S1, un1_write_address_1_cry_11_c_0_S0, 
         \un1_write_address_1_cry_11_c_0.CO0 , \write_address[12] , 
         \carry_pack.un1_write_address_1_cry_10 , \write_address[11] , 
         un1_write_address_1_cry_9_c_0_S1, un1_write_address_1_cry_9_c_0_S0, 
         \un1_write_address_1_cry_9_c_0.CO0 , \write_address[10] , 
         \carry_pack.un1_write_address_1_cry_8 , \write_address[9] , 
         un1_write_address_1_cry_7_c_0_S1, un1_write_address_1_cry_7_c_0_S0, 
         \un1_write_address_1_cry_7_c_0.CO0 , \write_address[8] , 
         \carry_pack.un1_write_address_1_cry_6 , \write_address[7] , 
         un1_write_address_1_cry_5_c_0_S1, un1_write_address_1_cry_5_c_0_S0, 
         \un1_write_address_1_cry_5_c_0.CO0 , \write_address[6] , 
         \carry_pack.un1_write_address_1_cry_4 , \write_address[5] , 
         un1_write_address_1_cry_3_c_0_S1, un1_write_address_1_cry_3_c_0_S0, 
         \un1_write_address_1_cry_3_c_0.CO0 , \write_address[4] , 
         \carry_pack.un1_write_address_1_cry_2 , \write_address[3] , 
         un1_write_address_1_cry_1_c_0_S1, un1_write_address_1_cry_1_c_0_S0, 
         \un1_write_address_1_cry_1_c_0.CO0 , \write_address[2] , 
         \carry_pack.un1_write_address_1_cry_0 , \write_address[1] , 
         un1_write_address_1_cry_0_c_0_S1, \un1_write_address_1_cry_0_c_0.CO0 , 
         \write_address[0] , un1_fsm_state27_2_0, \reader.CAMERA_VSYNC_IN_c_i , 
         CAMERA_VSYNC_IN_c, CAMERA_PCLOCK_c, \reader.FSM_state[0] , 
         \CAMERA_DATA_IN_c[6].sig_001.FeedThruLUT , 
         \CAMERA_DATA_IN_c[7].sig_000.FeedThruLUT , \CAMERA_DATA_IN_c[6] , 
         \CAMERA_DATA_IN_c[7] , \reader.pixel_half_RNIKJ0O , 
         \reader.pixel_data[7] , \reader.pixel_data[6] , 
         \CAMERA_DATA_IN_c[4].sig_003.FeedThruLUT , 
         \CAMERA_DATA_IN_c[5].sig_002.FeedThruLUT , \CAMERA_DATA_IN_c[4] , 
         \CAMERA_DATA_IN_c[5] , \reader.pixel_data[5] , \reader.pixel_data[4] , 
         \CAMERA_DATA_IN_c[2].sig_005.FeedThruLUT , 
         \CAMERA_DATA_IN_c[3].sig_004.FeedThruLUT , \CAMERA_DATA_IN_c[2] , 
         \CAMERA_DATA_IN_c[3] , \reader.pixel_data[3] , \reader.pixel_data[2] , 
         \CAMERA_DATA_IN_c[0].sig_007.FeedThruLUT , 
         \CAMERA_DATA_IN_c[1].sig_006.FeedThruLUT , \CAMERA_DATA_IN_c[0] , 
         \CAMERA_DATA_IN_c[1] , \reader.pixel_data[1] , \reader.pixel_data[0] , 
         \vga_inst.row_3[9] , \vga_inst.row_3[3] , \vga_inst.m8_6 , 
         \vga_inst.m8_5 , \vga_inst.row_3[0] , \vga_inst.row_3[2] , 
         bit_count_1_fast, bit_count_scalar, \bit_count_fast[0] , P3, 
         \bit_count_r_1_0[1] , spram_data_in_0_sqmuxa, 
         fsm_state_1_rep1_RNIVN0A1, \bit_count_fast[2] , fsm_state_1_fast, 
         fsm_state_0_fast, \vga_inst.g0_1_a5_2_1 , \vga_inst.N_6 , 
         \vga_inst.N_5_0 , \vga_inst.g0_1_1 , g0_i_1, 
         \write_address_RNIA0204[0] , \write_address_RNIHBQO1_0[16] , 
         \write_address_RNICH3I[18] , \debug_state_c_fast[1] , 
         \debug_state_c_fast[0] , 
         \un1_write_address_1_cry_17_c_0_S1.sig_009.FeedThruLUT , 
         \un1_write_address_1_cry_17_c_0_S1.sig_008.FeedThruLUT , 
         \write_address_fast[18] , bit_count_0, bit_count_1, 
         \bit_count_r_1[1] , \bit_count[1] , \bit_count[0] , start_prev_0, 
         un1_fsm_state28_1_0, \debug_state_c[1] , start_prev, start_c, 
         \pixel_accum[14].sig_010.FeedThruLUT , N_316_i, \pixel_accum[14] , 
         \pixel_accum[15] , \reader.un3_spram_data_inlt7 , \spram_data_in[15] , 
         \spram_data_in[14] , \pixel_accum[12].sig_012.FeedThruLUT , 
         \pixel_accum[13].sig_011.FeedThruLUT , \pixel_accum[12] , 
         \pixel_accum[13] , \spram_data_in[13] , \spram_data_in[12] , 
         \pixel_accum[10].sig_014.FeedThruLUT , 
         \pixel_accum[11].sig_013.FeedThruLUT , \pixel_accum[10] , 
         \pixel_accum[11] , \spram_data_in[11] , \spram_data_in[10] , 
         \pixel_accum[8].sig_016.FeedThruLUT , 
         \pixel_accum[9].sig_015.FeedThruLUT , \pixel_accum[8] , 
         \pixel_accum[9] , \spram_data_in[9] , \spram_data_in[8] , 
         \pixel_accum[6].sig_018.FeedThruLUT , 
         \pixel_accum[7].sig_017.FeedThruLUT , \pixel_accum[6] , 
         \pixel_accum[7] , \spram_data_in[7] , \spram_data_in[6] , 
         \pixel_accum[4].sig_020.FeedThruLUT , 
         \pixel_accum[5].sig_019.FeedThruLUT , \pixel_accum[4] , 
         \pixel_accum[5] , \spram_data_in[5] , \spram_data_in[4] , 
         \pixel_accum[2].sig_022.FeedThruLUT , 
         \pixel_accum[3].sig_021.FeedThruLUT , \pixel_accum[2] , 
         \pixel_accum[3] , \spram_data_in[3] , \spram_data_in[2] , 
         \pixel_accum[0].sig_024.FeedThruLUT , 
         \pixel_accum[1].sig_023.FeedThruLUT , \pixel_accum[0] , 
         \pixel_accum[1] , \spram_data_in[1] , \spram_data_in[0] , N_291_0, 
         N_301_0, \reader.m14_2_03_2 , \reader.m15_2_03_2 , N_271_0, N_281_0, 
         \reader.m12_2_03_2 , \reader.m13_2_03_2 , N_327_6, N_251_0, N_261_0, 
         \reader.m10_2_03_1 , \reader.m11_2_03_1 , N_231_0, N_241_0, 
         \reader.m8_2_03_1 , \reader.m9_2_03_1 , N_211_0, N_221_0, 
         \reader.un9_spram_data_in[6] , \reader.un9_spram_data_in[7] , N_191_0, 
         N_201_0, \reader.un9_spram_data_in[4] , \reader.un9_spram_data_in[5] , 
         N_171_0, N_181_0, \reader.un9_spram_data_in[2] , 
         \reader.un9_spram_data_in[3] , N_151_0, N_161_0, 
         \reader.un9_spram_data_in[0] , \reader.un9_spram_data_in[1] , 
         fsm_state_1, fsm_state_0, \debug_state_c[0] , \fsm_state[2] , 
         \vga_inst.N_361 , \vga_inst.N_360 , \vga_inst.N_168 , 
         \vga_inst.N_196 , N_62_i, un1_bit_count_c2, \fsm_state28.fsm_state28 , 
         \bit_count[2] , debug_state_c_1_rep1, un1_bit_count_ac0_1_1, g0_1, 
         debug_state_c_0_rep1, \vga_inst.un1_fsm_state28_4_sx , 
         \bit_count_fast[3] , prev_pixel_valid, pixel_valid, 
         \vga_inst.g0_1_1_1 , \write_address_RNII3S51[12] , 
         \vga_inst.un1_write_addresslto19_i_a2_0_10 , g0_i_a3_2, g0_i_a3_3, 
         \vga_inst.un1_write_addresslto19_i_a2_0_9 , N_13_mux_i_1, N_355, 
         d_N_3_mux_0, \vga_inst.WR0_N_3_mux , \vga_inst.spram_address_Z[19] , 
         WR, WR1, d_N_3_mux, WR0, \fsm_state_e_1[2] , 
         \reader.spram_data_in_0_sqmuxa_sx , fsm_state30, 
         un1_fsm_state28_4_0_i, \reader.un3_spram_data_inlto5_3 , 
         \bit_count[3] , \reader.m1_0_03_0 , \reader.m0_0_03_0 , 
         \reader.m3_0_03 , \vga_inst.g2_0_0 , \vga_inst.g0_i_a5_0_4 , 
         \vga_inst.g0_i_a5_0_3 , \vga_inst.spram_data_out[15] , 
         \vga_inst.N_149 , \vga_inst.N_362 , \data_out2[15] , \vga_inst.N_58 , 
         \data_out1[15] , \data_out0[15] , \vga_inst.spram_address_Z[18] , 
         \vga_inst.N_363 , \vga_inst.N_153 , \vga_inst.spram_data_out[11] , 
         \vga_inst.N_143 , \data_out2[11] , \vga_inst.N_54 , \data_out1[11] , 
         \data_out0[11] , \vga_inst.N_145 , \vga_inst.N_150 , \vga_inst.N_364 , 
         \data_out2[14] , \vga_inst.N_156 , \data_out1[14] , \data_out0[14] , 
         \vga_inst.N_365 , \vga_inst.N_154 , \vga_inst.N_147 , 
         \vga_inst.N_372 , \data_out2[10] , \vga_inst.N_158 , \data_out1[10] , 
         \data_out0[10] , \vga_inst.N_151 , \vga_inst.spram_data_out[13] , 
         \vga_inst.N_366 , \data_out2[13] , \vga_inst.N_56 , \data_out1[13] , 
         \data_out0[13] , \vga_inst.N_367 , \vga_inst.N_155 , 
         \vga_inst.spram_data_out[9] , \vga_inst.N_371 , \data_out2[9] , 
         \vga_inst.N_52 , \data_out1[9] , \data_out0[9] , \vga_inst.N_146 , 
         \vga_inst.N_373 , \vga_inst.N_368 , \data_out2[12] , \vga_inst.N_157 , 
         \data_out1[12] , \data_out0[12] , \vga_inst.N_369 , \vga_inst.N_148 , 
         \vga_inst.N_163 , \vga_inst.N_370 , \data_out2[8] , \vga_inst.N_159 , 
         \data_out1[8] , \data_out0[8] , \vga_inst.N_166 , \vga_inst.N_165 , 
         \vga_inst.N_197 , N_64_i, \vga_inst.m8_0 , prev_pixel_valid_0, 
         \vga_inst.N_356 , \vga_inst.N_24_mux , \vga_inst.col_RNO[0] , 
         \vga_inst.col11_0_a2_6 , \vga_inst.col11_0_a2_5 , 
         \vga_inst.un1_write_addresslto19_i_a2_0_8 , 
         \vga_inst.un1_write_addresslto19_i_a2_0_7 , \vga_inst.N_285 , 
         \vga_inst.m17_3 , \vga_inst.un1_VSYNC_i , 
         \vga_inst.un2_spram_address , \spram_address[17] , \spram_address[4] , 
         \vga_inst.un1_HSYNC_i_0_1 , N_39, WR_0, 
         \reader.spram_data_in_0_sqmuxa_0_234_a2_0 , N_128_i, WR2, 
         \data_out2[7] , \vga_inst.N_50 , \data_out1[7] , \data_out0[7] , 
         \data_out2[1] , \vga_inst.N_44 , \data_out1[1] , \data_out0[1] , 
         \data_out2[0] , \vga_inst.N_164 , \data_out1[0] , \data_out0[0] , 
         \data_out2[2] , \vga_inst.N_374 , \data_out1[2] , \data_out0[2] , 
         \data_out2[4] , \vga_inst.N_161 , \data_out1[4] , \data_out0[4] , 
         \data_out2[6] , \vga_inst.N_160 , \data_out1[6] , \data_out0[6] , 
         \vga_inst.N_48 , \data_out2[5] , \data_out1[5] , \data_out0[5] , 
         \data_out2[3] , \vga_inst.N_46 , \data_out1[3] , \data_out0[3] , 
         N_60_i, \bit_count_scalar$n0 , \reader.pixel_data_0_sqmuxa , 
         \reader.pixel_half , CAMERA_HREF_IN_c, fsm_state_scalar, N_350, 
         \bit_count_RNO[3] , m2_e_0, N_515_fast, fsm_state_0_rep1, 
         \reader.pixel_half_1 , fsm_state_1_rep1, \spram_address[5] , 
         \spram_address[6] , \spram_address[7] , \spram_address[8] , 
         \spram_address[9] , \spram_address[10] , \spram_address[11] , 
         \spram_address[12] , \spram_address[13] , \spram_address[14] , 
         \spram_address[15] , \spram_address[16] , VCC, clk_12MHz_c, 
         \my_pll.lscc_pll_inst.intfbout_w ;

  vga_inst_SLICE_0 \vga_inst.SLICE_0 ( .DI0(\vga_inst.un3_row_1_cry_8_c_0_S0 ), 
    .D1(\vga_inst.un3_row_1_cry_8_c_0.CO0 ), .A1(\row[9] ), 
    .D0(\vga_inst.un3_row_1_cry_7 ), .B0(\row[8] ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .CIN0(\vga_inst.un3_row_1_cry_7 ), 
    .CIN1(\vga_inst.un3_row_1_cry_8_c_0.CO0 ), .Q0(\row[8] ), 
    .F0(\vga_inst.un3_row_1_cry_8_c_0_S0 ), .F1(\vga_inst.N_501 ), 
    .COUT0(\vga_inst.un3_row_1_cry_8_c_0.CO0 ));
  vga_inst_SLICE_1 \vga_inst.SLICE_1 ( .DI1(\vga_inst.un3_row_1_cry_6_c_0_S1 ), 
    .DI0(\vga_inst.un3_row_1_cry_6_c_0_S0 ), 
    .D1(\vga_inst.un3_row_1_cry_6_c_0.CO0 ), .B1(\row[7] ), 
    .D0(\vga_inst.un3_row_1_cry_5 ), .B0(\row[6] ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .CIN0(\vga_inst.un3_row_1_cry_5 ), 
    .CIN1(\vga_inst.un3_row_1_cry_6_c_0.CO0 ), .Q0(\row[6] ), .Q1(\row[7] ), 
    .F0(\vga_inst.un3_row_1_cry_6_c_0_S0 ), 
    .F1(\vga_inst.un3_row_1_cry_6_c_0_S1 ), .COUT1(\vga_inst.un3_row_1_cry_7 ), 
    .COUT0(\vga_inst.un3_row_1_cry_6_c_0.CO0 ));
  vga_inst_SLICE_2 \vga_inst.SLICE_2 ( .DI1(\vga_inst.un3_row_1_cry_4_c_0_S1 ), 
    .DI0(\vga_inst.un3_row_1_cry_4_c_0_S0 ), 
    .D1(\vga_inst.un3_row_1_cry_4_c_0.CO0 ), .B1(\row[5] ), 
    .D0(\vga_inst.un3_row_1_cry_3 ), .B0(\row[4] ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .CIN0(\vga_inst.un3_row_1_cry_3 ), 
    .CIN1(\vga_inst.un3_row_1_cry_4_c_0.CO0 ), .Q0(\row[4] ), .Q1(\row[5] ), 
    .F0(\vga_inst.un3_row_1_cry_4_c_0_S0 ), 
    .F1(\vga_inst.un3_row_1_cry_4_c_0_S1 ), .COUT1(\vga_inst.un3_row_1_cry_5 ), 
    .COUT0(\vga_inst.un3_row_1_cry_4_c_0.CO0 ));
  vga_inst_un3_row_1_cry_2_c_0_SLICE_3 \vga_inst.un3_row_1_cry_2_c_0.SLICE_3 
    ( .D1(\vga_inst.un3_row_1_cry_2_c_0.CO0 ), .B1(\row[3] ), 
    .D0(\vga_inst.un3_row_1_cry_1 ), .B0(\row[2] ), 
    .CIN0(\vga_inst.un3_row_1_cry_1 ), 
    .CIN1(\vga_inst.un3_row_1_cry_2_c_0.CO0 ), .F0(\vga_inst.N_494 ), 
    .F1(\vga_inst.N_495 ), .COUT1(\vga_inst.un3_row_1_cry_3 ), 
    .COUT0(\vga_inst.un3_row_1_cry_2_c_0.CO0 ));
  vga_inst_SLICE_4 \vga_inst.SLICE_4 ( .DI1(\vga_inst.un3_row_1_cry_1_c_0_S1 ), 
    .D1(\vga_inst.un3_row_1_cry_1_c_0.CO0 ), .B1(\row[1] ), .C0(\row[0] ), 
    .B0(\row[0] ), .CE(\vga_inst.col11 ), .CLK(clk_25MHz_c), 
    .CIN1(\vga_inst.un3_row_1_cry_1_c_0.CO0 ), .Q1(\row[1] ), 
    .F1(\vga_inst.un3_row_1_cry_1_c_0_S1 ), .COUT1(\vga_inst.un3_row_1_cry_1 ), 
    .COUT0(\vga_inst.un3_row_1_cry_1_c_0.CO0 ));
  vga_inst_SLICE_5 \vga_inst.SLICE_5 ( .DI1(\vga_inst.col_3[9] ), 
    .DI0(\vga_inst.col_3[8] ), .D1(\vga_inst.un2_col_cry_8_c_0.CO0 ), 
    .C1(\vga_inst.col11 ), .A1(\col[9] ), .D0(\vga_inst.un2_col_cry_7 ), 
    .B0(\col[8] ), .A0(\vga_inst.col11 ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_7 ), .CIN1(\vga_inst.un2_col_cry_8_c_0.CO0 ), 
    .Q0(\col[8] ), .Q1(\col[9] ), .F0(\vga_inst.col_3[8] ), 
    .F1(\vga_inst.col_3[9] ), .COUT0(\vga_inst.un2_col_cry_8_c_0.CO0 ));
  vga_inst_SLICE_6 \vga_inst.SLICE_6 ( .DI1(\vga_inst.un2_col_cry_6_c_0_S1 ), 
    .DI0(\vga_inst.un2_col_cry_6_c_0_S0 ), 
    .D1(\vga_inst.un2_col_cry_6_c_0.CO0 ), .B1(\col[7] ), 
    .D0(\vga_inst.un2_col_cry_5 ), .B0(\vga_inst.col_Z[6] ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_5 ), .CIN1(\vga_inst.un2_col_cry_6_c_0.CO0 ), 
    .Q0(\vga_inst.col_Z[6] ), .Q1(\col[7] ), 
    .F0(\vga_inst.un2_col_cry_6_c_0_S0 ), .F1(\vga_inst.un2_col_cry_6_c_0_S1 ), 
    .COUT1(\vga_inst.un2_col_cry_7 ), .COUT0(\vga_inst.un2_col_cry_6_c_0.CO0 ));
  vga_inst_SLICE_7 \vga_inst.SLICE_7 ( .DI1(\vga_inst.col_3[5] ), 
    .DI0(\vga_inst.un2_col_cry_4_c_0_S0 ), 
    .D1(\vga_inst.un2_col_cry_4_c_0.CO0 ), .B1(\vga_inst.col_Z[5] ), 
    .A1(\vga_inst.col11 ), .D0(\vga_inst.un2_col_cry_3 ), 
    .B0(\vga_inst.col_Z[4] ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_3 ), .CIN1(\vga_inst.un2_col_cry_4_c_0.CO0 ), 
    .Q0(\vga_inst.col_Z[4] ), .Q1(\vga_inst.col_Z[5] ), 
    .F0(\vga_inst.un2_col_cry_4_c_0_S0 ), .F1(\vga_inst.col_3[5] ), 
    .COUT1(\vga_inst.un2_col_cry_5 ), .COUT0(\vga_inst.un2_col_cry_4_c_0.CO0 ));
  vga_inst_SLICE_8 \vga_inst.SLICE_8 ( .DI1(\vga_inst.un2_col_cry_2_c_0_S1 ), 
    .DI0(\vga_inst.un2_col_cry_2_c_0_S0 ), 
    .D1(\vga_inst.un2_col_cry_2_c_0.CO0 ), .B1(\vga_inst.col_Z[3] ), 
    .D0(\vga_inst.un2_col_cry_1 ), .B0(\vga_inst.col_Z[2] ), .CLK(clk_25MHz_c), 
    .CIN0(\vga_inst.un2_col_cry_1 ), .CIN1(\vga_inst.un2_col_cry_2_c_0.CO0 ), 
    .Q0(\vga_inst.col_Z[2] ), .Q1(\vga_inst.col_Z[3] ), 
    .F0(\vga_inst.un2_col_cry_2_c_0_S0 ), .F1(\vga_inst.un2_col_cry_2_c_0_S1 ), 
    .COUT1(\vga_inst.un2_col_cry_3 ), .COUT0(\vga_inst.un2_col_cry_2_c_0.CO0 ));
  vga_inst_SLICE_9 \vga_inst.SLICE_9 ( .DI1(\vga_inst.un2_col_cry_1_c_0_S1 ), 
    .D1(\vga_inst.un2_col_cry_1_c_0.CO0 ), .B1(\vga_inst.col_Z[1] ), 
    .C0(\vga_inst.col_Z[0] ), .B0(\vga_inst.col_Z[0] ), .CLK(clk_25MHz_c), 
    .CIN1(\vga_inst.un2_col_cry_1_c_0.CO0 ), .Q1(\vga_inst.col_Z[1] ), 
    .F1(\vga_inst.un2_col_cry_1_c_0_S1 ), .COUT1(\vga_inst.un2_col_cry_1 ), 
    .COUT0(\vga_inst.un2_col_cry_1_c_0.CO0 ));
  read_address_cry_11_c_0_SLICE_10 \read_address_cry_11_c_0.SLICE_10 ( 
    .D1(\read_address_cry_11_c_0.CO0 ), .D0(read_address_cry_10), 
    .B0(\row[9] ), .CIN0(read_address_cry_10), 
    .CIN1(\read_address_cry_11_c_0.CO0 ), .F0(\read_address[18] ), 
    .F1(\read_address[19] ), .COUT0(\read_address_cry_11_c_0.CO0 ));
  read_address_cry_9_0_c_0_SLICE_11 \read_address_cry_9_0_c_0.SLICE_11 ( 
    .D1(\read_address_cry_9_0_c_0.CO0 ), .C1(read_address_cry_9_0_c_0_RNO_1), 
    .B1(\row[8] ), .D0(read_address_cry_8), 
    .C0(read_address_cry_9_0_c_0_RNO_0), .B0(read_address_cry_9_0_c_0_RNO), 
    .CIN0(read_address_cry_8), .CIN1(\read_address_cry_9_0_c_0.CO0 ), 
    .F0(\read_address[16] ), .F1(\read_address[17] ), 
    .COUT1(read_address_cry_10), .COUT0(\read_address_cry_9_0_c_0.CO0 ));
  read_address_cry_7_0_c_0_SLICE_12 \read_address_cry_7_0_c_0.SLICE_12 ( 
    .D1(\read_address_cry_7_0_c_0.CO0 ), .C1(read_address_cry_7_0_c_0_RNO_2), 
    .B1(read_address_cry_7_0_c_0_RNO_0), .D0(read_address_cry_6), 
    .C0(read_address_cry_7_0_c_0_RNO_1), .B0(read_address_cry_7_0_c_0_RNO), 
    .CIN0(read_address_cry_6), .CIN1(\read_address_cry_7_0_c_0.CO0 ), 
    .F0(\read_address[14] ), .F1(\read_address[15] ), 
    .COUT1(read_address_cry_8), .COUT0(\read_address_cry_7_0_c_0.CO0 ));
  read_address_cry_5_0_c_0_SLICE_13 \read_address_cry_5_0_c_0.SLICE_13 ( 
    .D1(\read_address_cry_5_0_c_0.CO0 ), .C1(read_address_cry_5_0_c_0_RNO_2), 
    .B1(read_address_cry_5_0_c_0_RNO_0), .D0(read_address_cry_4), 
    .C0(read_address_cry_5_0_c_0_RNO_1), .B0(read_address_cry_5_0_c_0_RNO), 
    .CIN0(read_address_cry_4), .CIN1(\read_address_cry_5_0_c_0.CO0 ), 
    .F0(\read_address[12] ), .F1(\read_address[13] ), 
    .COUT1(read_address_cry_6), .COUT0(\read_address_cry_5_0_c_0.CO0 ));
  read_address_cry_3_c_0_SLICE_14 \read_address_cry_3_c_0.SLICE_14 ( 
    .D1(\read_address_cry_3_c_0.CO0 ), .C1(read_address_cry_3_c_0_RNO_2), 
    .B1(read_address_cry_3_c_0_RNO_0), .D0(read_address_cry_2), 
    .C0(read_address_cry_3_c_0_RNO_1), .B0(read_address_cry_3_c_0_RNO), 
    .CIN0(read_address_cry_2), .CIN1(\read_address_cry_3_c_0.CO0 ), 
    .F0(\read_address[10] ), .F1(\read_address[11] ), 
    .COUT1(read_address_cry_4), .COUT0(\read_address_cry_3_c_0.CO0 ));
  read_address_cry_1_c_0_SLICE_15 \read_address_cry_1_c_0.SLICE_15 ( 
    .D1(\read_address_cry_1_c_0.CO0 ), .B1(read_address_axb_2), 
    .D0(read_address_cry_0), .C0(\col[8] ), .B0(\row[1] ), 
    .CIN0(read_address_cry_0), .CIN1(\read_address_cry_1_c_0.CO0 ), 
    .F0(\read_address[8] ), .F1(\read_address[9] ), .COUT1(read_address_cry_2), 
    .COUT0(\read_address_cry_1_c_0.CO0 ));
  read_address_cry_0_c_0_SLICE_16 \read_address_cry_0_c_0.SLICE_16 ( 
    .D1(\read_address_cry_0_c_0.CO0 ), .C1(\col[7] ), .B1(\row[0] ), 
    .CIN1(\read_address_cry_0_c_0.CO0 ), .F1(\read_address[7] ), 
    .COUT1(read_address_cry_0), .COUT0(\read_address_cry_0_c_0.CO0 ));
  SLICE_17 SLICE_17( .DI0(\write_address_RNO_S0[19] ), 
    .D1(\write_address_RNO[19].CO0 ), 
    .D0(\carry_pack.un1_write_address_1_cry_18 ), .A0(\write_address[19] ), 
    .LSR(un1_fsm_state27_2_0_a2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_18 ), 
    .CIN1(\write_address_RNO[19].CO0 ), .Q0(\write_address[19] ), 
    .F0(\write_address_RNO_S0[19] ), .COUT0(\write_address_RNO[19].CO0 ));
  SLICE_18 SLICE_18( .DI0(un1_write_address_1_cry_17_c_0_S0), 
    .D1(\un1_write_address_1_cry_17_c_0.CO0 ), .B1(\write_address[18] ), 
    .D0(\carry_pack.un1_write_address_1_cry_16 ), .B0(\write_address[17] ), 
    .LSR(un1_fsm_state27_2_0_a2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_16 ), 
    .CIN1(\un1_write_address_1_cry_17_c_0.CO0 ), .Q0(\write_address[17] ), 
    .F0(un1_write_address_1_cry_17_c_0_S0), 
    .F1(un1_write_address_1_cry_17_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_18 ), 
    .COUT0(\un1_write_address_1_cry_17_c_0.CO0 ));
  SLICE_19 SLICE_19( .DI1(un1_write_address_1_cry_15_c_0_S1), 
    .DI0(un1_write_address_1_cry_15_c_0_S0), 
    .D1(\un1_write_address_1_cry_15_c_0.CO0 ), .B1(\write_address[16] ), 
    .D0(\carry_pack.un1_write_address_1_cry_14 ), .B0(\write_address[15] ), 
    .LSR(un1_fsm_state27_2_0_a2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_14 ), 
    .CIN1(\un1_write_address_1_cry_15_c_0.CO0 ), .Q0(\write_address[15] ), 
    .Q1(\write_address[16] ), .F0(un1_write_address_1_cry_15_c_0_S0), 
    .F1(un1_write_address_1_cry_15_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_16 ), 
    .COUT0(\un1_write_address_1_cry_15_c_0.CO0 ));
  SLICE_20 SLICE_20( .DI1(un1_write_address_1_cry_13_c_0_S1), 
    .DI0(un1_write_address_1_cry_13_c_0_S0), 
    .D1(\un1_write_address_1_cry_13_c_0.CO0 ), .B1(\write_address[14] ), 
    .D0(\carry_pack.un1_write_address_1_cry_12 ), .B0(\write_address[13] ), 
    .LSR(un1_fsm_state27_2_0_a2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_12 ), 
    .CIN1(\un1_write_address_1_cry_13_c_0.CO0 ), .Q0(\write_address[13] ), 
    .Q1(\write_address[14] ), .F0(un1_write_address_1_cry_13_c_0_S0), 
    .F1(un1_write_address_1_cry_13_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_14 ), 
    .COUT0(\un1_write_address_1_cry_13_c_0.CO0 ));
  SLICE_21 SLICE_21( .DI1(un1_write_address_1_cry_11_c_0_S1), 
    .DI0(un1_write_address_1_cry_11_c_0_S0), 
    .D1(\un1_write_address_1_cry_11_c_0.CO0 ), .B1(\write_address[12] ), 
    .D0(\carry_pack.un1_write_address_1_cry_10 ), .B0(\write_address[11] ), 
    .LSR(un1_fsm_state27_2_0_a2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_10 ), 
    .CIN1(\un1_write_address_1_cry_11_c_0.CO0 ), .Q0(\write_address[11] ), 
    .Q1(\write_address[12] ), .F0(un1_write_address_1_cry_11_c_0_S0), 
    .F1(un1_write_address_1_cry_11_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_12 ), 
    .COUT0(\un1_write_address_1_cry_11_c_0.CO0 ));
  SLICE_22 SLICE_22( .DI1(un1_write_address_1_cry_9_c_0_S1), 
    .DI0(un1_write_address_1_cry_9_c_0_S0), 
    .D1(\un1_write_address_1_cry_9_c_0.CO0 ), .B1(\write_address[10] ), 
    .D0(\carry_pack.un1_write_address_1_cry_8 ), .B0(\write_address[9] ), 
    .LSR(un1_fsm_state27_2_0_a2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_8 ), 
    .CIN1(\un1_write_address_1_cry_9_c_0.CO0 ), .Q0(\write_address[9] ), 
    .Q1(\write_address[10] ), .F0(un1_write_address_1_cry_9_c_0_S0), 
    .F1(un1_write_address_1_cry_9_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_10 ), 
    .COUT0(\un1_write_address_1_cry_9_c_0.CO0 ));
  SLICE_23 SLICE_23( .DI1(un1_write_address_1_cry_7_c_0_S1), 
    .DI0(un1_write_address_1_cry_7_c_0_S0), 
    .D1(\un1_write_address_1_cry_7_c_0.CO0 ), .B1(\write_address[8] ), 
    .D0(\carry_pack.un1_write_address_1_cry_6 ), .B0(\write_address[7] ), 
    .LSR(un1_fsm_state27_2_0_a2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_6 ), 
    .CIN1(\un1_write_address_1_cry_7_c_0.CO0 ), .Q0(\write_address[7] ), 
    .Q1(\write_address[8] ), .F0(un1_write_address_1_cry_7_c_0_S0), 
    .F1(un1_write_address_1_cry_7_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_8 ), 
    .COUT0(\un1_write_address_1_cry_7_c_0.CO0 ));
  SLICE_24 SLICE_24( .DI1(un1_write_address_1_cry_5_c_0_S1), 
    .DI0(un1_write_address_1_cry_5_c_0_S0), 
    .D1(\un1_write_address_1_cry_5_c_0.CO0 ), .B1(\write_address[6] ), 
    .D0(\carry_pack.un1_write_address_1_cry_4 ), .B0(\write_address[5] ), 
    .LSR(un1_fsm_state27_2_0_a2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_4 ), 
    .CIN1(\un1_write_address_1_cry_5_c_0.CO0 ), .Q0(\write_address[5] ), 
    .Q1(\write_address[6] ), .F0(un1_write_address_1_cry_5_c_0_S0), 
    .F1(un1_write_address_1_cry_5_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_6 ), 
    .COUT0(\un1_write_address_1_cry_5_c_0.CO0 ));
  SLICE_25 SLICE_25( .DI1(un1_write_address_1_cry_3_c_0_S1), 
    .DI0(un1_write_address_1_cry_3_c_0_S0), 
    .D1(\un1_write_address_1_cry_3_c_0.CO0 ), .B1(\write_address[4] ), 
    .D0(\carry_pack.un1_write_address_1_cry_2 ), .B0(\write_address[3] ), 
    .LSR(un1_fsm_state27_2_0_a2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_2 ), 
    .CIN1(\un1_write_address_1_cry_3_c_0.CO0 ), .Q0(\write_address[3] ), 
    .Q1(\write_address[4] ), .F0(un1_write_address_1_cry_3_c_0_S0), 
    .F1(un1_write_address_1_cry_3_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_4 ), 
    .COUT0(\un1_write_address_1_cry_3_c_0.CO0 ));
  SLICE_26 SLICE_26( .DI1(un1_write_address_1_cry_1_c_0_S1), 
    .DI0(un1_write_address_1_cry_1_c_0_S0), 
    .D1(\un1_write_address_1_cry_1_c_0.CO0 ), .B1(\write_address[2] ), 
    .D0(\carry_pack.un1_write_address_1_cry_0 ), .B0(\write_address[1] ), 
    .LSR(un1_fsm_state27_2_0_a2), .CLK(clk_25MHz_c), 
    .CIN0(\carry_pack.un1_write_address_1_cry_0 ), 
    .CIN1(\un1_write_address_1_cry_1_c_0.CO0 ), .Q0(\write_address[1] ), 
    .Q1(\write_address[2] ), .F0(un1_write_address_1_cry_1_c_0_S0), 
    .F1(un1_write_address_1_cry_1_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_2 ), 
    .COUT0(\un1_write_address_1_cry_1_c_0.CO0 ));
  SLICE_27 SLICE_27( .DI1(un1_write_address_1_cry_0_c_0_S1), 
    .D1(\un1_write_address_1_cry_0_c_0.CO0 ), .B1(\write_address[0] ), 
    .C0(un1_fsm_state27_2_0), .B0(un1_fsm_state27_2_0), 
    .LSR(un1_fsm_state27_2_0_a2), .CLK(clk_25MHz_c), 
    .CIN1(\un1_write_address_1_cry_0_c_0.CO0 ), .Q1(\write_address[0] ), 
    .F1(un1_write_address_1_cry_0_c_0_S1), 
    .COUT1(\carry_pack.un1_write_address_1_cry_0 ), 
    .COUT0(\un1_write_address_1_cry_0_c_0.CO0 ));
  reader_SLICE_29 \reader.SLICE_29 ( .DI0(\reader.CAMERA_VSYNC_IN_c_i ), 
    .D0(CAMERA_VSYNC_IN_c), .CLK(CAMERA_PCLOCK_c), .Q0(\reader.FSM_state[0] ), 
    .F0(\reader.CAMERA_VSYNC_IN_c_i ));
  SLICE_31 SLICE_31( .DI1(\CAMERA_DATA_IN_c[6].sig_001.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[7].sig_000.FeedThruLUT ), 
    .D1(\CAMERA_DATA_IN_c[6] ), .D0(\CAMERA_DATA_IN_c[7] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\reader.pixel_data[7] ), .Q1(\reader.pixel_data[6] ), 
    .F0(\CAMERA_DATA_IN_c[7].sig_000.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[6].sig_001.FeedThruLUT ));
  SLICE_33 SLICE_33( .DI1(\CAMERA_DATA_IN_c[4].sig_003.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[5].sig_002.FeedThruLUT ), 
    .D1(\CAMERA_DATA_IN_c[4] ), .D0(\CAMERA_DATA_IN_c[5] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\reader.pixel_data[5] ), .Q1(\reader.pixel_data[4] ), 
    .F0(\CAMERA_DATA_IN_c[5].sig_002.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[4].sig_003.FeedThruLUT ));
  SLICE_35 SLICE_35( .DI1(\CAMERA_DATA_IN_c[2].sig_005.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[3].sig_004.FeedThruLUT ), 
    .D1(\CAMERA_DATA_IN_c[2] ), .D0(\CAMERA_DATA_IN_c[3] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\reader.pixel_data[3] ), .Q1(\reader.pixel_data[2] ), 
    .F0(\CAMERA_DATA_IN_c[3].sig_004.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[2].sig_005.FeedThruLUT ));
  SLICE_37 SLICE_37( .DI1(\CAMERA_DATA_IN_c[0].sig_007.FeedThruLUT ), 
    .DI0(\CAMERA_DATA_IN_c[1].sig_006.FeedThruLUT ), 
    .D1(\CAMERA_DATA_IN_c[0] ), .D0(\CAMERA_DATA_IN_c[1] ), 
    .CE(\reader.pixel_half_RNIKJ0O ), .CLK(CAMERA_PCLOCK_c), 
    .Q0(\reader.pixel_data[1] ), .Q1(\reader.pixel_data[0] ), 
    .F0(\CAMERA_DATA_IN_c[1].sig_006.FeedThruLUT ), 
    .F1(\CAMERA_DATA_IN_c[0].sig_007.FeedThruLUT ));
  vga_inst_SLICE_39 \vga_inst.SLICE_39 ( .DI1(\vga_inst.row_3[9] ), 
    .DI0(\vga_inst.row_3[3] ), .D1(\vga_inst.N_501 ), .C1(\vga_inst.m8_6 ), 
    .B1(\vga_inst.m8_5 ), .A1(\row[0] ), .D0(\row[0] ), .C0(\vga_inst.m8_5 ), 
    .B0(\vga_inst.m8_6 ), .A0(\vga_inst.N_495 ), .CE(\vga_inst.col11 ), 
    .CLK(clk_25MHz_c), .Q0(\row[3] ), .Q1(\row[9] ), .F0(\vga_inst.row_3[3] ), 
    .F1(\vga_inst.row_3[9] ));
  vga_inst_SLICE_40 \vga_inst.SLICE_40 ( .DI1(\vga_inst.row_3[0] ), 
    .DI0(\vga_inst.row_3[2] ), .D1(\vga_inst.m8_5 ), .C1(\vga_inst.m8_6 ), 
    .A1(\row[0] ), .D0(\vga_inst.m8_6 ), .C0(\vga_inst.m8_5 ), .B0(\row[0] ), 
    .A0(\vga_inst.N_494 ), .CE(\vga_inst.col11 ), .CLK(clk_25MHz_c), 
    .Q0(\row[2] ), .Q1(\row[0] ), .F0(\vga_inst.row_3[2] ), 
    .F1(\vga_inst.row_3[0] ));
  SLICE_44 SLICE_44( .DI1(bit_count_1_fast), .DI0(bit_count_scalar), 
    .D1(\bit_count_fast[0] ), .C1(P3), .B1(\bit_count_r_1_0[1] ), 
    .A1(spram_data_in_0_sqmuxa), .D0(fsm_state_1_rep1_RNIVN0A1), 
    .B0(spram_data_in_0_sqmuxa), .CLK(clk_25MHz_c), .Q0(\bit_count_fast[2] ), 
    .Q1(\bit_count_fast[0] ), .F0(bit_count_scalar), .F1(bit_count_1_fast));
  SLICE_46 SLICE_46( .DI1(fsm_state_1_fast), .DI0(fsm_state_0_fast), 
    .D1(\vga_inst.g0_1_a5_2_1 ), .C1(\vga_inst.N_6 ), .B1(\vga_inst.N_5_0 ), 
    .A1(\vga_inst.g0_1_1 ), .D0(g0_i_1), .C0(\write_address_RNIA0204[0] ), 
    .B0(\write_address_RNIHBQO1_0[16] ), .A0(\write_address_RNICH3I[18] ), 
    .CLK(clk_25MHz_c), .Q0(\debug_state_c_fast[1] ), 
    .Q1(\debug_state_c_fast[0] ), .F0(fsm_state_0_fast), .F1(fsm_state_1_fast));
  SLICE_48 SLICE_48( 
    .DI1(\un1_write_address_1_cry_17_c_0_S1.sig_009.FeedThruLUT ), 
    .DI0(\un1_write_address_1_cry_17_c_0_S1.sig_008.FeedThruLUT ), 
    .D1(un1_write_address_1_cry_17_c_0_S1), 
    .C0(un1_write_address_1_cry_17_c_0_S1), .LSR(un1_fsm_state27_2_0_a2), 
    .CLK(clk_25MHz_c), .Q0(\write_address_fast[18] ), .Q1(\write_address[18] ), 
    .F0(\un1_write_address_1_cry_17_c_0_S1.sig_008.FeedThruLUT ), 
    .F1(\un1_write_address_1_cry_17_c_0_S1.sig_009.FeedThruLUT ));
  SLICE_52 SLICE_52( .DI1(bit_count_0), .DI0(bit_count_1), 
    .D1(\bit_count_r_1[1] ), .C1(\bit_count[1] ), .B1(\bit_count_r_1_0[1] ), 
    .A1(\bit_count[0] ), .D0(spram_data_in_0_sqmuxa), 
    .C0(\bit_count_r_1_0[1] ), .B0(\bit_count[0] ), .A0(P3), .CLK(clk_25MHz_c), 
    .Q0(\bit_count[0] ), .Q1(\bit_count[1] ), .F0(bit_count_1), 
    .F1(bit_count_0));
  SLICE_58 SLICE_58( .DI0(start_prev_0), .D0(un1_fsm_state28_1_0), 
    .C0(\debug_state_c[1] ), .B0(start_prev), .A0(start_c), .CLK(clk_25MHz_c), 
    .Q0(start_prev), .F0(start_prev_0));
  SLICE_60 SLICE_60( .DI1(\pixel_accum[14].sig_010.FeedThruLUT ), 
    .DI0(N_316_i), .D1(\pixel_accum[14] ), .D0(\pixel_accum[15] ), 
    .C0(\reader.pixel_data[7] ), .B0(\reader.un3_spram_data_inlt7 ), 
    .CE(spram_data_in_0_sqmuxa), .CLK(clk_25MHz_c), .Q0(\spram_data_in[15] ), 
    .Q1(\spram_data_in[14] ), .F0(N_316_i), 
    .F1(\pixel_accum[14].sig_010.FeedThruLUT ));
  SLICE_62 SLICE_62( .DI1(\pixel_accum[12].sig_012.FeedThruLUT ), 
    .DI0(\pixel_accum[13].sig_011.FeedThruLUT ), .D1(\pixel_accum[12] ), 
    .D0(\pixel_accum[13] ), .CE(spram_data_in_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[13] ), .Q1(\spram_data_in[12] ), 
    .F0(\pixel_accum[13].sig_011.FeedThruLUT ), 
    .F1(\pixel_accum[12].sig_012.FeedThruLUT ));
  SLICE_64 SLICE_64( .DI1(\pixel_accum[10].sig_014.FeedThruLUT ), 
    .DI0(\pixel_accum[11].sig_013.FeedThruLUT ), .D1(\pixel_accum[10] ), 
    .D0(\pixel_accum[11] ), .CE(spram_data_in_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[11] ), .Q1(\spram_data_in[10] ), 
    .F0(\pixel_accum[11].sig_013.FeedThruLUT ), 
    .F1(\pixel_accum[10].sig_014.FeedThruLUT ));
  SLICE_66 SLICE_66( .DI1(\pixel_accum[8].sig_016.FeedThruLUT ), 
    .DI0(\pixel_accum[9].sig_015.FeedThruLUT ), .D1(\pixel_accum[8] ), 
    .D0(\pixel_accum[9] ), .CE(spram_data_in_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[9] ), .Q1(\spram_data_in[8] ), 
    .F0(\pixel_accum[9].sig_015.FeedThruLUT ), 
    .F1(\pixel_accum[8].sig_016.FeedThruLUT ));
  SLICE_68 SLICE_68( .DI1(\pixel_accum[6].sig_018.FeedThruLUT ), 
    .DI0(\pixel_accum[7].sig_017.FeedThruLUT ), .D1(\pixel_accum[6] ), 
    .C0(\pixel_accum[7] ), .CE(spram_data_in_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[7] ), .Q1(\spram_data_in[6] ), 
    .F0(\pixel_accum[7].sig_017.FeedThruLUT ), 
    .F1(\pixel_accum[6].sig_018.FeedThruLUT ));
  SLICE_70 SLICE_70( .DI1(\pixel_accum[4].sig_020.FeedThruLUT ), 
    .DI0(\pixel_accum[5].sig_019.FeedThruLUT ), .D1(\pixel_accum[4] ), 
    .D0(\pixel_accum[5] ), .CE(spram_data_in_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[5] ), .Q1(\spram_data_in[4] ), 
    .F0(\pixel_accum[5].sig_019.FeedThruLUT ), 
    .F1(\pixel_accum[4].sig_020.FeedThruLUT ));
  SLICE_72 SLICE_72( .DI1(\pixel_accum[2].sig_022.FeedThruLUT ), 
    .DI0(\pixel_accum[3].sig_021.FeedThruLUT ), .D1(\pixel_accum[2] ), 
    .C0(\pixel_accum[3] ), .CE(spram_data_in_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[3] ), .Q1(\spram_data_in[2] ), 
    .F0(\pixel_accum[3].sig_021.FeedThruLUT ), 
    .F1(\pixel_accum[2].sig_022.FeedThruLUT ));
  SLICE_74 SLICE_74( .DI1(\pixel_accum[0].sig_024.FeedThruLUT ), 
    .DI0(\pixel_accum[1].sig_023.FeedThruLUT ), .D1(\pixel_accum[0] ), 
    .D0(\pixel_accum[1] ), .CE(spram_data_in_0_sqmuxa), .CLK(clk_25MHz_c), 
    .Q0(\spram_data_in[1] ), .Q1(\spram_data_in[0] ), 
    .F0(\pixel_accum[1].sig_023.FeedThruLUT ), 
    .F1(\pixel_accum[0].sig_024.FeedThruLUT ));
  SLICE_76 SLICE_76( .DI1(N_291_0), .DI0(N_301_0), .D1(\pixel_accum[14] ), 
    .C1(\reader.m14_2_03_2 ), .B1(\debug_state_c[1] ), 
    .A1(spram_data_in_0_sqmuxa), .D0(\pixel_accum[15] ), 
    .C0(\reader.m15_2_03_2 ), .B0(spram_data_in_0_sqmuxa), 
    .A0(\debug_state_c[1] ), .CE(\bit_count_r_1_0[1] ), .CLK(clk_25MHz_c), 
    .Q0(\pixel_accum[15] ), .Q1(\pixel_accum[14] ), .F0(N_301_0), .F1(N_291_0));
  SLICE_78 SLICE_78( .DI1(N_271_0), .DI0(N_281_0), .D1(\pixel_accum[12] ), 
    .C1(\debug_state_c[1] ), .B1(\reader.m12_2_03_2 ), 
    .A1(spram_data_in_0_sqmuxa), .D0(\debug_state_c[1] ), 
    .C0(\reader.m13_2_03_2 ), .B0(N_327_6), .A0(\pixel_accum[13] ), 
    .CE(\bit_count_r_1_0[1] ), .CLK(clk_25MHz_c), .Q0(\pixel_accum[13] ), 
    .Q1(\pixel_accum[12] ), .F0(N_281_0), .F1(N_271_0));
  SLICE_80 SLICE_80( .DI1(N_251_0), .DI0(N_261_0), .D1(\pixel_accum[10] ), 
    .C1(\reader.m10_2_03_1 ), .B1(spram_data_in_0_sqmuxa), 
    .A1(\debug_state_c[1] ), .D0(\pixel_accum[11] ), .C0(\reader.m11_2_03_1 ), 
    .B0(\debug_state_c[1] ), .A0(spram_data_in_0_sqmuxa), 
    .CE(\bit_count_r_1_0[1] ), .CLK(clk_25MHz_c), .Q0(\pixel_accum[11] ), 
    .Q1(\pixel_accum[10] ), .F0(N_261_0), .F1(N_251_0));
  SLICE_82 SLICE_82( .DI1(N_231_0), .DI0(N_241_0), .D1(\pixel_accum[8] ), 
    .C1(\reader.m8_2_03_1 ), .B1(spram_data_in_0_sqmuxa), 
    .A1(\debug_state_c[1] ), .D0(\pixel_accum[9] ), .C0(\reader.m9_2_03_1 ), 
    .B0(\debug_state_c[1] ), .A0(spram_data_in_0_sqmuxa), 
    .CE(\bit_count_r_1_0[1] ), .CLK(clk_25MHz_c), .Q0(\pixel_accum[9] ), 
    .Q1(\pixel_accum[8] ), .F0(N_241_0), .F1(N_231_0));
  SLICE_84 SLICE_84( .DI1(N_211_0), .DI0(N_221_0), .D1(\pixel_accum[6] ), 
    .C1(\debug_state_c[1] ), .B1(\reader.un9_spram_data_in[6] ), 
    .A1(spram_data_in_0_sqmuxa), .D0(\debug_state_c[1] ), 
    .C0(\reader.un9_spram_data_in[7] ), .B0(spram_data_in_0_sqmuxa), 
    .A0(\pixel_accum[7] ), .CE(\bit_count_r_1_0[1] ), .CLK(clk_25MHz_c), 
    .Q0(\pixel_accum[7] ), .Q1(\pixel_accum[6] ), .F0(N_221_0), .F1(N_211_0));
  SLICE_86 SLICE_86( .DI1(N_191_0), .DI0(N_201_0), .D1(\pixel_accum[4] ), 
    .C1(\debug_state_c[1] ), .B1(\reader.un9_spram_data_in[4] ), 
    .A1(spram_data_in_0_sqmuxa), .D0(\debug_state_c[1] ), 
    .C0(\reader.un9_spram_data_in[5] ), .B0(spram_data_in_0_sqmuxa), 
    .A0(\pixel_accum[5] ), .CE(\bit_count_r_1_0[1] ), .CLK(clk_25MHz_c), 
    .Q0(\pixel_accum[5] ), .Q1(\pixel_accum[4] ), .F0(N_201_0), .F1(N_191_0));
  SLICE_88 SLICE_88( .DI1(N_171_0), .DI0(N_181_0), .D1(\pixel_accum[2] ), 
    .C1(N_327_6), .B1(\reader.un9_spram_data_in[2] ), .A1(\debug_state_c[1] ), 
    .D0(spram_data_in_0_sqmuxa), .C0(\reader.un9_spram_data_in[3] ), 
    .B0(\debug_state_c[1] ), .A0(\pixel_accum[3] ), .CE(\bit_count_r_1_0[1] ), 
    .CLK(clk_25MHz_c), .Q0(\pixel_accum[3] ), .Q1(\pixel_accum[2] ), 
    .F0(N_181_0), .F1(N_171_0));
  SLICE_90 SLICE_90( .DI1(N_151_0), .DI0(N_161_0), .D1(\pixel_accum[0] ), 
    .C1(\reader.un9_spram_data_in[0] ), .B1(spram_data_in_0_sqmuxa), 
    .A1(\debug_state_c[1] ), .D0(\pixel_accum[1] ), 
    .C0(\reader.un9_spram_data_in[1] ), .B0(\debug_state_c[1] ), 
    .A0(spram_data_in_0_sqmuxa), .CE(\bit_count_r_1_0[1] ), .CLK(clk_25MHz_c), 
    .Q0(\pixel_accum[1] ), .Q1(\pixel_accum[0] ), .F0(N_161_0), .F1(N_151_0));
  SLICE_93 SLICE_93( .DI1(fsm_state_1), .DI0(fsm_state_0), 
    .D1(\vga_inst.g0_1_a5_2_1 ), .C1(\vga_inst.N_6 ), .B1(\vga_inst.N_5_0 ), 
    .A1(\vga_inst.g0_1_1 ), .D0(g0_i_1), .C0(\write_address_RNIA0204[0] ), 
    .B0(\write_address_RNIHBQO1_0[16] ), .A0(\write_address_RNICH3I[18] ), 
    .CLK(clk_25MHz_c), .Q0(\debug_state_c[1] ), .Q1(\debug_state_c[0] ), 
    .F0(fsm_state_0), .F1(fsm_state_1));
  vga_inst_SLICE_95 \vga_inst.SLICE_95 ( .D1(\fsm_state[2] ), 
    .C1(\vga_inst.N_361 ), .D0(\vga_inst.N_360 ), .C0(\vga_inst.N_168 ), 
    .B0(\debug_state_c[1] ), .A0(\debug_state_c[0] ), .F0(\vga_inst.N_361 ), 
    .F1(\vga_inst.N_196 ));
  vga_inst_SLICE_96 \vga_inst.SLICE_96 ( .D0(\vga_inst.N_361 ), 
    .C0(\vga_inst.N_360 ), .B0(\debug_state_c[1] ), .A0(\fsm_state[2] ), 
    .F0(N_62_i));
  SLICE_97 SLICE_97( .D0(un1_bit_count_c2), .C0(\fsm_state28.fsm_state28 ), 
    .B0(\bit_count[2] ), .A0(debug_state_c_1_rep1), 
    .F0(fsm_state_1_rep1_RNIVN0A1));
  SLICE_98 SLICE_98( .D1(\debug_state_c_fast[0] ), .B1(\fsm_state[2] ), 
    .D0(un1_bit_count_ac0_1_1), .C0(\bit_count[1] ), .B0(\bit_count[0] ), 
    .A0(\fsm_state28.fsm_state28 ), .F0(un1_bit_count_c2), 
    .F1(\fsm_state28.fsm_state28 ));
  SLICE_99 SLICE_99( .D1(\fsm_state[2] ), .C1(g0_1), .B1(debug_state_c_1_rep1), 
    .A1(debug_state_c_0_rep1), .D0(\write_address[19] ), .C0(start_c), 
    .B0(start_prev), .A0(debug_state_c_1_rep1), .F0(g0_1), .F1(g0_i_1));
  vga_inst_SLICE_101 \vga_inst.SLICE_101 ( 
    .D1(\vga_inst.un1_fsm_state28_4_sx ), .C1(N_327_6), 
    .B1(\fsm_state28.fsm_state28 ), .A1(debug_state_c_1_rep1), 
    .D0(\bit_count_fast[2] ), .C0(\bit_count_fast[0] ), 
    .B0(\bit_count_fast[3] ), .A0(\bit_count[1] ), .F0(N_327_6), 
    .F1(\bit_count_r_1[1] ));
  vga_inst_SLICE_102 \vga_inst.SLICE_102 ( .D1(prev_pixel_valid), 
    .C1(pixel_valid), .B1(debug_state_c_1_rep1), .D0(\debug_state_c_fast[1] ), 
    .C0(prev_pixel_valid), .B0(pixel_valid), .A0(debug_state_c_1_rep1), 
    .F0(\vga_inst.un1_fsm_state28_4_sx ), .F1(un1_bit_count_ac0_1_1));
  vga_inst_SLICE_103 \vga_inst.SLICE_103 ( .D1(\fsm_state[2] ), 
    .C1(\vga_inst.g0_1_1_1 ), .B1(debug_state_c_1_rep1), 
    .A1(debug_state_c_0_rep1), .D0(debug_state_c_0_rep1), .C0(start_c), 
    .B0(start_prev), .A0(CAMERA_VSYNC_IN_c), .F0(\vga_inst.g0_1_1_1 ), 
    .F1(\vga_inst.g0_1_1 ));
  SLICE_105 SLICE_105( .D1(\write_address[16] ), 
    .C1(\write_address_RNII3S51[12] ), .A1(\write_address[17] ), 
    .D0(\write_address[14] ), .C0(\write_address[15] ), 
    .B0(\write_address[13] ), .A0(\write_address[12] ), 
    .F0(\write_address_RNII3S51[12] ), .F1(\write_address_RNIHBQO1_0[16] ));
  SLICE_107 SLICE_107( .D1(\vga_inst.un1_write_addresslto19_i_a2_0_10 ), 
    .C1(g0_i_a3_2), .B1(g0_i_a3_3), 
    .A1(\vga_inst.un1_write_addresslto19_i_a2_0_9 ), .D0(\write_address[2] ), 
    .C0(\write_address[1] ), .F0(g0_i_a3_2), .F1(\write_address_RNIA0204[0] ));
  vga_inst_SLICE_108 \vga_inst.SLICE_108 ( .D1(\write_address[11] ), 
    .C1(\write_address[15] ), .B1(\write_address[10] ), 
    .A1(\write_address[13] ), .D0(\write_address[9] ), .C0(\write_address[7] ), 
    .B0(\write_address[8] ), .A0(\write_address[6] ), 
    .F0(\vga_inst.un1_write_addresslto19_i_a2_0_9 ), 
    .F1(\vga_inst.un1_write_addresslto19_i_a2_0_10 ));
  SLICE_109 SLICE_109( .D1(\write_address[16] ), .C1(N_13_mux_i_1), 
    .B1(\write_address[15] ), .A1(\write_address[17] ), 
    .D0(\write_address[14] ), .C0(\write_address[12] ), 
    .B0(\write_address[13] ), .F0(N_13_mux_i_1), .F1(N_355));
  SLICE_111 SLICE_111( .D1(\read_address[18] ), .C1(d_N_3_mux_0), 
    .B1(\vga_inst.WR0_N_3_mux ), .A1(\vga_inst.spram_address_Z[19] ), 
    .D0(\write_address[18] ), .C0(WR), .F0(d_N_3_mux_0), .F1(WR1));
  SLICE_113 SLICE_113( .D1(\read_address[18] ), .C1(d_N_3_mux), 
    .B1(\vga_inst.WR0_N_3_mux ), .A1(\vga_inst.spram_address_Z[19] ), .D0(WR), 
    .B0(\write_address[18] ), .F0(d_N_3_mux), .F1(WR0));
  SLICE_115 SLICE_115( .D1(start_c), .C1(un1_fsm_state28_1_0), 
    .B1(debug_state_c_1_rep1), .A1(start_prev), .D0(debug_state_c_0_rep1), 
    .C0(\fsm_state[2] ), .F0(un1_fsm_state28_1_0), .F1(\fsm_state_e_1[2] ));
  reader_SLICE_117 \reader.SLICE_117 ( .D1(\reader.spram_data_in_0_sqmuxa_sx ), 
    .C1(fsm_state30), .B1(\bit_count_fast[3] ), .A1(prev_pixel_valid), 
    .C0(\debug_state_c_fast[0] ), .B0(\fsm_state[2] ), 
    .A0(\debug_state_c_fast[1] ), .F0(fsm_state30), 
    .F1(spram_data_in_0_sqmuxa));
  vga_inst_SLICE_118 \vga_inst.SLICE_118 ( .D0(\debug_state_c[1] ), 
    .C0(spram_data_in_0_sqmuxa), .B0(\fsm_state[2] ), 
    .A0(\debug_state_c_fast[0] ), .F0(un1_fsm_state28_4_0_i));
  reader_SLICE_119 \reader.SLICE_119 ( .D1(\reader.pixel_data[6] ), 
    .C1(\reader.un3_spram_data_inlto5_3 ), .B1(\reader.pixel_data[4] ), 
    .A1(\reader.pixel_data[5] ), .D0(\reader.pixel_data[3] ), 
    .C0(\reader.pixel_data[2] ), .B0(\reader.pixel_data[1] ), 
    .A0(\reader.pixel_data[0] ), .F0(\reader.un3_spram_data_inlto5_3 ), 
    .F1(\reader.un3_spram_data_inlt7 ));
  reader_SLICE_121 \reader.SLICE_121 ( .D1(\bit_count[3] ), 
    .C1(\reader.m1_0_03_0 ), .B1(\bit_count[1] ), .A1(\bit_count[2] ), 
    .D0(\reader.pixel_data[7] ), .C0(\reader.un3_spram_data_inlt7 ), 
    .B0(\bit_count[0] ), .F0(\reader.m1_0_03_0 ), .F1(\reader.m9_2_03_1 ));
  reader_SLICE_123 \reader.SLICE_123 ( .D1(\bit_count[3] ), 
    .C1(\reader.m0_0_03_0 ), .B1(\bit_count[1] ), .A1(\bit_count[2] ), 
    .D0(\reader.un3_spram_data_inlt7 ), .C0(\reader.pixel_data[7] ), 
    .A0(\bit_count[0] ), .F0(\reader.m0_0_03_0 ), .F1(\reader.m10_2_03_1 ));
  reader_SLICE_125 \reader.SLICE_125 ( .D1(\bit_count[3] ), 
    .C1(\reader.m3_0_03 ), .A1(\bit_count[2] ), 
    .D0(\reader.un3_spram_data_inlt7 ), .C0(\bit_count[0] ), 
    .B0(\reader.pixel_data[7] ), .A0(\bit_count[1] ), .F0(\reader.m3_0_03 ), 
    .F1(\reader.m11_2_03_1 ));
  vga_inst_SLICE_127 \vga_inst.SLICE_127 ( .D1(\write_address[16] ), 
    .C1(\vga_inst.g2_0_0 ), .B1(\write_address[18] ), .A1(\write_address[17] ), 
    .D0(\write_address[14] ), .C0(\write_address[15] ), 
    .B0(\write_address[13] ), .A0(\write_address[12] ), .F0(\vga_inst.g2_0_0 ), 
    .F1(\vga_inst.N_5_0 ));
  vga_inst_SLICE_129 \vga_inst.SLICE_129 ( .D0(\write_address[3] ), 
    .C0(\write_address[0] ), .B0(\write_address[2] ), .A0(\write_address[1] ), 
    .F0(\vga_inst.g0_i_a5_0_4 ));
  vga_inst_SLICE_130 \vga_inst.SLICE_130 ( .D1(\vga_inst.g0_i_a5_0_4 ), 
    .C1(\vga_inst.g0_i_a5_0_3 ), 
    .B1(\vga_inst.un1_write_addresslto19_i_a2_0_10 ), 
    .A1(\vga_inst.un1_write_addresslto19_i_a2_0_9 ), .D0(\write_address[5] ), 
    .C0(\write_address[4] ), .A0(\write_address[18] ), 
    .F0(\vga_inst.g0_i_a5_0_3 ), .F1(\vga_inst.N_6 ));
  vga_inst_SLICE_131 \vga_inst.SLICE_131 ( .D0(\vga_inst.col_Z[3] ), 
    .C0(\vga_inst.spram_data_out[15] ), .B0(\vga_inst.N_149 ), 
    .F0(\vga_inst.N_362 ));
  vga_inst_SLICE_132 \vga_inst.SLICE_132 ( .D1(\data_out2[15] ), 
    .C1(\vga_inst.N_58 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[15] ), .C0(\data_out0[15] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_58 ), 
    .F1(\vga_inst.spram_data_out[15] ));
  vga_inst_SLICE_133 \vga_inst.SLICE_133 ( .D1(\vga_inst.col_Z[2] ), 
    .C1(\vga_inst.N_363 ), .A1(\vga_inst.N_362 ), .D0(\vga_inst.N_153 ), 
    .C0(\vga_inst.spram_data_out[11] ), .B0(\vga_inst.col_Z[3] ), 
    .F0(\vga_inst.N_363 ), .F1(\vga_inst.N_143 ));
  vga_inst_SLICE_134 \vga_inst.SLICE_134 ( .D1(\data_out2[11] ), 
    .C1(\vga_inst.N_54 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[11] ), .C0(\data_out0[11] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_54 ), 
    .F1(\vga_inst.spram_data_out[11] ));
  vga_inst_SLICE_135 \vga_inst.SLICE_135 ( .D0(\vga_inst.N_145 ), 
    .C0(\vga_inst.N_150 ), .B0(\vga_inst.col_Z[3] ), .F0(\vga_inst.N_364 ));
  vga_inst_SLICE_136 \vga_inst.SLICE_136 ( .D1(\data_out2[14] ), 
    .C1(\vga_inst.N_156 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[14] ), .C0(\data_out0[14] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_156 ), 
    .F1(\vga_inst.N_145 ));
  vga_inst_SLICE_137 \vga_inst.SLICE_137 ( .D1(\vga_inst.col_Z[2] ), 
    .C1(\vga_inst.N_365 ), .B1(\vga_inst.N_364 ), .D0(\vga_inst.col_Z[3] ), 
    .C0(\vga_inst.N_154 ), .B0(\vga_inst.N_147 ), .F0(\vga_inst.N_365 ), 
    .F1(\vga_inst.N_372 ));
  vga_inst_SLICE_138 \vga_inst.SLICE_138 ( .D1(\data_out2[10] ), 
    .C1(\vga_inst.N_158 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[10] ), .C0(\data_out0[10] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_158 ), 
    .F1(\vga_inst.N_147 ));
  vga_inst_SLICE_139 \vga_inst.SLICE_139 ( .D0(\vga_inst.N_151 ), 
    .C0(\vga_inst.spram_data_out[13] ), .B0(\vga_inst.col_Z[3] ), 
    .F0(\vga_inst.N_366 ));
  vga_inst_SLICE_140 \vga_inst.SLICE_140 ( .D1(\data_out2[13] ), 
    .C1(\vga_inst.N_56 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[13] ), .C0(\data_out0[13] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_56 ), 
    .F1(\vga_inst.spram_data_out[13] ));
  vga_inst_SLICE_141 \vga_inst.SLICE_141 ( .D1(\vga_inst.col_Z[2] ), 
    .C1(\vga_inst.N_367 ), .B1(\vga_inst.N_366 ), .D0(\vga_inst.N_155 ), 
    .C0(\vga_inst.spram_data_out[9] ), .B0(\vga_inst.col_Z[3] ), 
    .F0(\vga_inst.N_367 ), .F1(\vga_inst.N_371 ));
  vga_inst_SLICE_142 \vga_inst.SLICE_142 ( .D1(\data_out2[9] ), 
    .C1(\vga_inst.N_52 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[9] ), .C0(\vga_inst.spram_address_Z[18] ), 
    .A0(\data_out0[9] ), .F0(\vga_inst.N_52 ), 
    .F1(\vga_inst.spram_data_out[9] ));
  vga_inst_SLICE_143 \vga_inst.SLICE_143 ( .D0(\vga_inst.N_146 ), 
    .C0(\vga_inst.N_373 ), .B0(\vga_inst.col_Z[3] ), .F0(\vga_inst.N_368 ));
  vga_inst_SLICE_144 \vga_inst.SLICE_144 ( .D1(\data_out2[12] ), 
    .C1(\vga_inst.N_157 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[12] ), .C0(\data_out0[12] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_157 ), 
    .F1(\vga_inst.N_146 ));
  vga_inst_SLICE_145 \vga_inst.SLICE_145 ( .D1(\vga_inst.col_Z[2] ), 
    .C1(\vga_inst.N_369 ), .A1(\vga_inst.N_368 ), .D0(\vga_inst.N_148 ), 
    .C0(\vga_inst.N_163 ), .B0(\vga_inst.col_Z[3] ), .F0(\vga_inst.N_369 ), 
    .F1(\vga_inst.N_370 ));
  vga_inst_SLICE_146 \vga_inst.SLICE_146 ( .D1(\data_out2[8] ), 
    .C1(\vga_inst.N_159 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[8] ), .C0(\data_out0[8] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_159 ), 
    .F1(\vga_inst.N_148 ));
  vga_inst_SLICE_148 \vga_inst.SLICE_148 ( .D1(\vga_inst.col_Z[1] ), 
    .C1(\vga_inst.N_166 ), .B1(\vga_inst.N_165 ), .D0(\vga_inst.N_370 ), 
    .C0(\vga_inst.N_371 ), .B0(\vga_inst.col_Z[0] ), .F0(\vga_inst.N_166 ), 
    .F1(\vga_inst.N_168 ));
  vga_inst_SLICE_150 \vga_inst.SLICE_150 ( .D0(\vga_inst.N_143 ), 
    .C0(\vga_inst.N_372 ), .B0(\vga_inst.col_Z[0] ), .F0(\vga_inst.N_165 ));
  vga_inst_SLICE_152 \vga_inst.SLICE_152 ( .D1(\fsm_state[2] ), 
    .C1(\vga_inst.N_197 ), .A1(\vga_inst.N_360 ), .D0(\vga_inst.N_168 ), 
    .C0(\debug_state_c[0] ), .B0(\debug_state_c[1] ), .F0(\vga_inst.N_197 ), 
    .F1(N_64_i));
  vga_inst_SLICE_153 \vga_inst.SLICE_153 ( .D1(\row[7] ), .C1(\vga_inst.m8_0 ), 
    .B1(\row[5] ), .A1(\row[4] ), .D0(\row[3] ), .C0(\row[1] ), 
    .F0(\vga_inst.m8_0 ), .F1(\vga_inst.m8_6 ));
  vga_inst_SLICE_156 \vga_inst.SLICE_156 ( .DI1(prev_pixel_valid_0), 
    .D1(\fsm_state28.fsm_state28 ), .C1(pixel_valid), .B1(prev_pixel_valid), 
    .A1(\debug_state_c[1] ), .D0(pixel_valid), .C0(prev_pixel_valid), 
    .B0(debug_state_c_1_rep1), .A0(\fsm_state28.fsm_state28 ), 
    .CLK(clk_25MHz_c), .Q1(prev_pixel_valid), .F0(\bit_count_r_1_0[1] ), 
    .F1(prev_pixel_valid_0));
  vga_inst_SLICE_157 \vga_inst.SLICE_157 ( .D0(\col[8] ), .C0(\col[7] ), 
    .F0(\vga_inst.N_356 ));
  vga_inst_SLICE_158 \vga_inst.SLICE_158 ( .D1(\vga_inst.N_356 ), 
    .C1(\vga_inst.N_24_mux ), .B1(\col[9] ), .A1(\row[9] ), .D0(\row[8] ), 
    .C0(\row[6] ), .B0(\row[7] ), .A0(\row[5] ), .F0(\vga_inst.N_24_mux ), 
    .F1(\vga_inst.N_360 ));
  vga_inst_SLICE_159 \vga_inst.SLICE_159 ( .DI1(\vga_inst.col_RNO[0] ), 
    .D1(\vga_inst.col_Z[0] ), .D0(\vga_inst.col_Z[6] ), 
    .C0(\vga_inst.col_Z[5] ), .B0(\vga_inst.col_Z[4] ), 
    .A0(\vga_inst.col_Z[2] ), .CLK(clk_25MHz_c), .Q1(\vga_inst.col_Z[0] ), 
    .F0(\vga_inst.col11_0_a2_6 ), .F1(\vga_inst.col_RNO[0] ));
  vga_inst_SLICE_160 \vga_inst.SLICE_160 ( .D1(\vga_inst.col11_0_a2_6 ), 
    .C1(\vga_inst.col11_0_a2_5 ), .B1(\col[9] ), .A1(\vga_inst.col_Z[3] ), 
    .D0(\col[8] ), .C0(\col[7] ), .B0(\vga_inst.col_Z[1] ), 
    .A0(\vga_inst.col_Z[0] ), .F0(\vga_inst.col11_0_a2_5 ), 
    .F1(\vga_inst.col11 ));
  vga_inst_SLICE_162 \vga_inst.SLICE_162 ( 
    .D1(\vga_inst.un1_write_addresslto19_i_a2_0_8 ), 
    .C1(\vga_inst.un1_write_addresslto19_i_a2_0_7 ), 
    .B1(\vga_inst.un1_write_addresslto19_i_a2_0_10 ), 
    .A1(\vga_inst.un1_write_addresslto19_i_a2_0_9 ), 
    .D0(\write_address_fast[18] ), .C0(\write_address[1] ), 
    .B0(\write_address[2] ), .F0(\vga_inst.un1_write_addresslto19_i_a2_0_7 ), 
    .F1(\vga_inst.N_285 ));
  vga_inst_SLICE_164 \vga_inst.SLICE_164 ( .D1(\row[9] ), 
    .C1(\vga_inst.m17_3 ), .A1(\row[3] ), .D0(\vga_inst.N_24_mux ), 
    .C0(\row[2] ), .B0(\row[4] ), .A0(\row[1] ), .F0(\vga_inst.m17_3 ), 
    .F1(\vga_inst.un1_VSYNC_i ));
  vga_inst_SLICE_165 \vga_inst.SLICE_165 ( .C1(\vga_inst.un2_spram_address ), 
    .B1(\write_address[18] ), .A1(\read_address[18] ), 
    .D0(\debug_state_c_fast[1] ), .C0(\fsm_state[2] ), 
    .B0(debug_state_c_0_rep1), .F0(\vga_inst.un2_spram_address ), 
    .F1(\vga_inst.spram_address_Z[18] ));
  vga_inst_SLICE_166 \vga_inst.SLICE_166 ( .D1(\vga_inst.un2_spram_address ), 
    .C1(\vga_inst.col_Z[4] ), .B1(\write_address[4] ), .D0(\read_address[17] ), 
    .C0(\vga_inst.un2_spram_address ), .B0(\write_address[17] ), 
    .F0(\spram_address[17] ), .F1(\spram_address[4] ));
  vga_inst_SLICE_167 \vga_inst.SLICE_167 ( .D1(\col[7] ), 
    .C1(\vga_inst.un1_HSYNC_i_0_1 ), .B1(\col[9] ), .A1(\col[8] ), 
    .D0(\vga_inst.col_Z[6] ), .C0(\vga_inst.col_Z[5] ), 
    .B0(\vga_inst.col_Z[4] ), .F0(\vga_inst.un1_HSYNC_i_0_1 ), .F1(N_39));
  vga_inst_SLICE_169 \vga_inst.SLICE_169 ( .DI1(WR_0), 
    .D1(\reader.spram_data_in_0_sqmuxa_0_234_a2_0 ), .C1(N_327_6), 
    .B1(N_128_i), .A1(WR), .D0(WR), .C0(\fsm_state[2] ), 
    .B0(\debug_state_c[0] ), .A0(debug_state_c_1_rep1), .CLK(clk_25MHz_c), 
    .Q1(WR), .F0(\vga_inst.WR0_N_3_mux ), .F1(WR_0));
  vga_inst_SLICE_170 \vga_inst.SLICE_170 ( .D1(\read_address[18] ), 
    .C1(\vga_inst.spram_address_Z[19] ), .B1(\vga_inst.WR0_N_3_mux ), 
    .A1(d_N_3_mux), .D0(\read_address[19] ), .C0(\vga_inst.un2_spram_address ), 
    .B0(\write_address[19] ), .F0(\vga_inst.spram_address_Z[19] ), .F1(WR2));
  vga_inst_SLICE_172 \vga_inst.SLICE_172 ( .D1(\data_out2[7] ), 
    .C1(\vga_inst.N_50 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[7] ), .C0(\data_out0[7] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_50 ), 
    .F1(\vga_inst.N_149 ));
  vga_inst_SLICE_174 \vga_inst.SLICE_174 ( .D1(\data_out2[1] ), 
    .C1(\vga_inst.N_44 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[1] ), .C0(\data_out0[1] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_44 ), 
    .F1(\vga_inst.N_155 ));
  vga_inst_SLICE_175 \vga_inst.SLICE_175 ( .D1(\data_out2[0] ), 
    .C1(\vga_inst.N_164 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[0] ), .C0(\data_out0[0] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_164 ), 
    .F1(\vga_inst.N_163 ));
  vga_inst_SLICE_177 \vga_inst.SLICE_177 ( .D1(\data_out2[2] ), 
    .C1(\vga_inst.N_374 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[2] ), .C0(\vga_inst.spram_address_Z[18] ), 
    .B0(\data_out0[2] ), .F0(\vga_inst.N_374 ), .F1(\vga_inst.N_154 ));
  vga_inst_SLICE_179 \vga_inst.SLICE_179 ( .D1(\data_out2[4] ), 
    .C1(\vga_inst.N_161 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\vga_inst.spram_address_Z[18] ), .C0(\data_out1[4] ), 
    .B0(\data_out0[4] ), .F0(\vga_inst.N_161 ), .F1(\vga_inst.N_373 ));
  vga_inst_SLICE_181 \vga_inst.SLICE_181 ( .D1(\data_out2[6] ), 
    .C1(\vga_inst.N_160 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[6] ), .C0(\data_out0[6] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_160 ), 
    .F1(\vga_inst.N_150 ));
  vga_inst_SLICE_183 \vga_inst.SLICE_183 ( .D1(\vga_inst.spram_address_Z[19] ), 
    .C1(\vga_inst.N_48 ), .A1(\data_out2[5] ), .D0(\data_out1[5] ), 
    .C0(\data_out0[5] ), .B0(\vga_inst.spram_address_Z[18] ), 
    .F0(\vga_inst.N_48 ), .F1(\vga_inst.N_151 ));
  vga_inst_SLICE_185 \vga_inst.SLICE_185 ( .D1(\data_out2[3] ), 
    .C1(\vga_inst.N_46 ), .B1(\vga_inst.spram_address_Z[19] ), 
    .D0(\data_out1[3] ), .C0(\data_out0[3] ), 
    .B0(\vga_inst.spram_address_Z[18] ), .F0(\vga_inst.N_46 ), 
    .F1(\vga_inst.N_153 ));
  vga_inst_SLICE_188 \vga_inst.SLICE_188 ( .D1(debug_state_c_1_rep1), 
    .C1(\debug_state_c[0] ), .B1(\fsm_state[2] ), .D0(\vga_inst.N_360 ), 
    .C0(\vga_inst.N_196 ), .B0(\debug_state_c[1] ), .A0(\debug_state_c[0] ), 
    .F0(N_60_i), .F1(N_128_i));
  SLICE_189 SLICE_189( .D1(\write_address[5] ), .C1(\write_address[3] ), 
    .B1(\write_address[4] ), .A1(\write_address[0] ), .D0(\write_address[3] ), 
    .C0(\write_address[5] ), .B0(\write_address[0] ), .A0(\write_address[4] ), 
    .F0(g0_i_a3_3), .F1(\vga_inst.un1_write_addresslto19_i_a2_0_8 ));
  reader_SLICE_191 \reader.SLICE_191 ( .D1(\bit_count_fast[0] ), 
    .C1(\bit_count_fast[2] ), .B1(pixel_valid), .A1(\bit_count[1] ), 
    .D0(\reader.m1_0_03_0 ), .C0(\bit_count[3] ), .B0(\bit_count[2] ), 
    .A0(\bit_count[1] ), .F0(\reader.m13_2_03_2 ), 
    .F1(\reader.spram_data_in_0_sqmuxa_sx ));
  reader_SLICE_192 \reader.SLICE_192 ( .D1(\bit_count[3] ), 
    .C1(\reader.m1_0_03_0 ), .B1(\bit_count[1] ), .A1(\bit_count[2] ), 
    .D0(\reader.m1_0_03_0 ), .C0(\bit_count[3] ), .B0(\bit_count[2] ), 
    .A0(\bit_count[1] ), .F0(\reader.un9_spram_data_in[1] ), 
    .F1(\reader.un9_spram_data_in[5] ));
  reader_SLICE_193 \reader.SLICE_193 ( .D1(\bit_count[3] ), 
    .C1(\reader.m0_0_03_0 ), .B1(\bit_count[1] ), .A1(\bit_count[2] ), 
    .D0(\reader.m0_0_03_0 ), .C0(\bit_count[3] ), .B0(\bit_count[2] ), 
    .A0(\bit_count[1] ), .F0(\reader.un9_spram_data_in[6] ), 
    .F1(\reader.m12_2_03_2 ));
  reader_SLICE_195 \reader.SLICE_195 ( .D1(\bit_count[3] ), 
    .C1(\reader.m0_0_03_0 ), .B1(\bit_count[1] ), .A1(\bit_count[2] ), 
    .D0(\reader.m0_0_03_0 ), .C0(\bit_count[3] ), .B0(\bit_count[2] ), 
    .A0(\bit_count[1] ), .F0(\reader.un9_spram_data_in[4] ), 
    .F1(\reader.m14_2_03_2 ));
  reader_SLICE_197 \reader.SLICE_197 ( .D1(\bit_count[3] ), 
    .C1(\reader.m0_0_03_0 ), .B1(\bit_count[1] ), .A1(\bit_count[2] ), 
    .D0(\reader.m0_0_03_0 ), .C0(\bit_count[3] ), .B0(\bit_count[2] ), 
    .A0(\bit_count[1] ), .F0(\reader.un9_spram_data_in[2] ), 
    .F1(\reader.un9_spram_data_in[0] ));
  reader_SLICE_198 \reader.SLICE_198 ( .DI1(\bit_count_scalar$n0 ), 
    .D1(fsm_state_1_rep1_RNIVN0A1), .C1(spram_data_in_0_sqmuxa), 
    .D0(\reader.m0_0_03_0 ), .C0(\bit_count[3] ), .B0(\bit_count[2] ), 
    .A0(\bit_count[1] ), .CLK(clk_25MHz_c), .Q1(\bit_count[2] ), 
    .F0(\reader.m8_2_03_1 ), .F1(\bit_count_scalar$n0 ));
  SLICE_199 SLICE_199( .D1(\row[8] ), .C1(\row[7] ), .B1(\row[6] ), 
    .A1(\row[5] ), .D0(\row[9] ), .C0(\row[8] ), .B0(\row[7] ), .A0(\row[6] ), 
    .F0(read_address_cry_9_0_c_0_RNO), .F1(read_address_cry_7_0_c_0_RNO_0));
  vga_inst_SLICE_200 \vga_inst.SLICE_200 ( .D1(\row[8] ), .B1(\row[6] ), 
    .D0(\row[9] ), .C0(\row[8] ), .B0(\row[2] ), .A0(\row[6] ), 
    .F0(\vga_inst.m8_5 ), .F1(read_address_cry_9_0_c_0_RNO_0));
  SLICE_202 SLICE_202( .D1(\row[6] ), .C1(\row[5] ), .B1(\row[4] ), 
    .A1(\row[3] ), .D0(\row[7] ), .C0(\row[6] ), .B0(\row[5] ), .A0(\row[4] ), 
    .F0(read_address_cry_7_0_c_0_RNO), .F1(read_address_cry_5_0_c_0_RNO_0));
  SLICE_204 SLICE_204( .D1(\row[2] ), .C1(\row[4] ), .B1(\row[1] ), 
    .A1(\row[3] ), .D0(\row[4] ), .C0(\row[5] ), .B0(\row[3] ), .A0(\row[2] ), 
    .F0(read_address_cry_5_0_c_0_RNO), .F1(read_address_cry_3_c_0_RNO_0));
  reader_SLICE_206 \reader.SLICE_206 ( .DI1(\reader.pixel_data_0_sqmuxa ), 
    .D1(\reader.pixel_half ), .C1(CAMERA_HREF_IN_c), .D0(\debug_state_c[0] ), 
    .C0(prev_pixel_valid), .B0(pixel_valid), .A0(debug_state_c_1_rep1), 
    .CE(\reader.FSM_state[0] ), .CLK(CAMERA_PCLOCK_c), .Q1(pixel_valid), 
    .F0(\reader.spram_data_in_0_sqmuxa_0_234_a2_0 ), 
    .F1(\reader.pixel_data_0_sqmuxa ));
  SLICE_207 SLICE_207( .DI1(fsm_state_scalar), .D1(fsm_state30), .C1(N_350), 
    .B1(\fsm_state[2] ), .A1(\fsm_state_e_1[2] ), .D0(\debug_state_c[0] ), 
    .C0(\fsm_state[2] ), .B0(debug_state_c_1_rep1), .CLK(clk_25MHz_c), 
    .Q1(\fsm_state[2] ), .F0(P3), .F1(fsm_state_scalar));
  SLICE_209 SLICE_209( .D1(\row[0] ), .C1(\col[9] ), .B1(\row[2] ), 
    .D0(\col[9] ), .C0(\row[0] ), .A0(\row[2] ), .F0(read_address_axb_2), 
    .F1(read_address_cry_3_c_0_RNO_1));
  reader_SLICE_213 \reader.SLICE_213 ( .D1(\reader.m3_0_03 ), 
    .C1(\bit_count[3] ), .B1(\bit_count[2] ), .D0(\bit_count[3] ), 
    .C0(\reader.m3_0_03 ), .A0(\bit_count[2] ), 
    .F0(\reader.un9_spram_data_in[7] ), .F1(\reader.un9_spram_data_in[3] ));
  reader_SLICE_214 \reader.SLICE_214 ( .DI1(\bit_count_RNO[3] ), 
    .D1(\bit_count[3] ), .C1(m2_e_0), .B1(\bit_count[2] ), 
    .A1(\bit_count_r_1_0[1] ), .D0(\reader.m3_0_03 ), .C0(\bit_count[3] ), 
    .A0(\bit_count[2] ), .LSR(un1_fsm_state28_4_0_i), .CLK(clk_25MHz_c), 
    .Q1(\bit_count[3] ), .F0(\reader.m15_2_03_2 ), .F1(\bit_count_RNO[3] ));
  vga_inst_SLICE_218 \vga_inst.SLICE_218 ( .D0(\vga_inst.N_285 ), .C0(N_355), 
    .B0(\write_address[19] ), .A0(\write_address[18] ), .F0(N_350));
  SLICE_222 SLICE_222( .DI1(N_515_fast), .D1(\bit_count_fast[3] ), .C1(m2_e_0), 
    .B1(\bit_count[2] ), .A1(\bit_count_r_1_0[1] ), .D0(\bit_count[1] ), 
    .C0(\bit_count[0] ), .LSR(un1_fsm_state28_4_0_i), .CLK(clk_25MHz_c), 
    .Q1(\bit_count_fast[3] ), .F0(m2_e_0), .F1(N_515_fast));
  SLICE_223 SLICE_223( .D1(\row[3] ), .B1(\row[1] ), .C0(\row[3] ), 
    .A0(\row[1] ), .F0(read_address_cry_3_c_0_RNO_2), 
    .F1(read_address_cry_3_c_0_RNO));
  SLICE_224 SLICE_224( .D1(\row[6] ), .B1(\row[4] ), .D0(\row[2] ), 
    .C0(\row[4] ), .F0(read_address_cry_5_0_c_0_RNO_1), 
    .F1(read_address_cry_7_0_c_0_RNO_1));
  SLICE_225 SLICE_225( .D0(\row[3] ), .C0(\row[5] ), 
    .F0(read_address_cry_5_0_c_0_RNO_2));
  SLICE_227 SLICE_227( .D1(\row[9] ), .B1(\row[7] ), .C0(\row[7] ), 
    .A0(\row[5] ), .F0(read_address_cry_7_0_c_0_RNO_2), 
    .F1(read_address_cry_9_0_c_0_RNO_1));
  SLICE_231 SLICE_231( .DI1(fsm_state_0_rep1), .D1(g0_i_1), 
    .C1(\write_address_RNICH3I[18] ), .B1(\write_address_RNIHBQO1_0[16] ), 
    .A1(\write_address_RNIA0204[0] ), .D0(\write_address[18] ), 
    .C0(\debug_state_c[0] ), .B0(debug_state_c_1_rep1), .CLK(clk_25MHz_c), 
    .Q1(debug_state_c_1_rep1), .F0(\write_address_RNICH3I[18] ), 
    .F1(fsm_state_0_rep1));
  reader_SLICE_234 \reader.SLICE_234 ( .DI1(\reader.pixel_half_1 ), 
    .D1(\reader.FSM_state[0] ), .C1(\reader.pixel_half ), 
    .B1(CAMERA_HREF_IN_c), .D0(\reader.pixel_half ), 
    .C0(\reader.FSM_state[0] ), .A0(CAMERA_HREF_IN_c), .CLK(CAMERA_PCLOCK_c), 
    .Q1(\reader.pixel_half ), .F0(\reader.pixel_half_RNIKJ0O ), 
    .F1(\reader.pixel_half_1 ));
  vga_inst_SLICE_236 \vga_inst.SLICE_236 ( .DI1(fsm_state_1_rep1), 
    .D1(\vga_inst.N_5_0 ), .C1(\vga_inst.g0_1_a5_2_1 ), .B1(\vga_inst.g0_1_1 ), 
    .A1(\vga_inst.N_6 ), .D0(\debug_state_c[0] ), .C0(\write_address[19] ), 
    .B0(debug_state_c_1_rep1), .CLK(clk_25MHz_c), .Q1(debug_state_c_0_rep1), 
    .F0(\vga_inst.g0_1_a5_2_1 ), .F1(fsm_state_1_rep1));
  vga_inst_SLICE_240 \vga_inst.SLICE_240 ( .D1(\debug_state_c[0] ), 
    .C1(prev_pixel_valid), .B1(pixel_valid), .A1(\fsm_state[2] ), 
    .D0(\fsm_state[2] ), .C0(\debug_state_c[1] ), .A0(\debug_state_c[0] ), 
    .F0(un1_fsm_state27_2_0_a2), .F1(un1_fsm_state27_2_0));
  vga_inst_SLICE_243 \vga_inst.SLICE_243 ( .D1(\vga_inst.un2_spram_address ), 
    .C1(\write_address[6] ), .B1(\vga_inst.col_Z[6] ), 
    .D0(\vga_inst.col_Z[5] ), .C0(\vga_inst.un2_spram_address ), 
    .B0(\write_address[5] ), .F0(\spram_address[5] ), .F1(\spram_address[6] ));
  vga_inst_SLICE_245 \vga_inst.SLICE_245 ( .D1(\read_address[8] ), 
    .C1(\vga_inst.un2_spram_address ), .B1(\write_address[8] ), 
    .D0(\vga_inst.un2_spram_address ), .C0(\read_address[7] ), 
    .B0(\write_address[7] ), .F0(\spram_address[7] ), .F1(\spram_address[8] ));
  vga_inst_SLICE_247 \vga_inst.SLICE_247 ( .D1(\read_address[10] ), 
    .C1(\vga_inst.un2_spram_address ), .A1(\write_address[10] ), 
    .D0(\read_address[9] ), .C0(\write_address[9] ), 
    .B0(\vga_inst.un2_spram_address ), .F0(\spram_address[9] ), 
    .F1(\spram_address[10] ));
  vga_inst_SLICE_249 \vga_inst.SLICE_249 ( .D1(\read_address[12] ), 
    .C1(\vga_inst.un2_spram_address ), .B1(\write_address[12] ), 
    .D0(\read_address[11] ), .C0(\write_address[11] ), 
    .B0(\vga_inst.un2_spram_address ), .F0(\spram_address[11] ), 
    .F1(\spram_address[12] ));
  vga_inst_SLICE_251 \vga_inst.SLICE_251 ( .D1(\read_address[14] ), 
    .C1(\vga_inst.un2_spram_address ), .B1(\write_address[14] ), 
    .D0(\read_address[13] ), .C0(\write_address[13] ), 
    .B0(\vga_inst.un2_spram_address ), .F0(\spram_address[13] ), 
    .F1(\spram_address[14] ));
  vga_inst_SLICE_253 \vga_inst.SLICE_253 ( .D1(\read_address[16] ), 
    .C1(\vga_inst.un2_spram_address ), .B1(\write_address[16] ), 
    .D0(\read_address[15] ), .C0(\write_address[15] ), 
    .B0(\vga_inst.un2_spram_address ), .F0(\spram_address[15] ), 
    .F1(\spram_address[16] ));
  SLICE_266 SLICE_266( .F0(VCC));
  my_pll_lscc_pll_inst_u_PLL_B \my_pll.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(clk_12MHz_c), .FEEDBACK(\my_pll.lscc_pll_inst.intfbout_w ), 
    .RESET_N(VCC), .INTFBOUT(\my_pll.lscc_pll_inst.intfbout_w ), 
    .OUTCORE(clk_25MHz_c));
  clk_12MHz clk_12MHz_I( .PADDI(clk_12MHz_c), .clk_12MHz(clk_12MHz));
  start start_I( .PADDI(start_c), .start(start));
  CAMERA_VSYNC_IN CAMERA_VSYNC_IN_I( .PADDI(CAMERA_VSYNC_IN_c), 
    .CAMERA_VSYNC_IN(CAMERA_VSYNC_IN));
  CAMERA_HREF_IN CAMERA_HREF_IN_I( .PADDI(CAMERA_HREF_IN_c), 
    .CAMERA_HREF_IN(CAMERA_HREF_IN));
  CAMERA_DATA_IN_0_ \CAMERA_DATA_IN[0]_I ( .PADDI(\CAMERA_DATA_IN_c[0] ), 
    .CAMERADATAIN0(CAMERA_DATA_IN[0]));
  CAMERA_DATA_IN_1_ \CAMERA_DATA_IN[1]_I ( .PADDI(\CAMERA_DATA_IN_c[1] ), 
    .CAMERADATAIN1(CAMERA_DATA_IN[1]));
  CAMERA_DATA_IN_2_ \CAMERA_DATA_IN[2]_I ( .PADDI(\CAMERA_DATA_IN_c[2] ), 
    .CAMERADATAIN2(CAMERA_DATA_IN[2]));
  CAMERA_DATA_IN_3_ \CAMERA_DATA_IN[3]_I ( .PADDI(\CAMERA_DATA_IN_c[3] ), 
    .CAMERADATAIN3(CAMERA_DATA_IN[3]));
  CAMERA_DATA_IN_4_ \CAMERA_DATA_IN[4]_I ( .PADDI(\CAMERA_DATA_IN_c[4] ), 
    .CAMERADATAIN4(CAMERA_DATA_IN[4]));
  CAMERA_DATA_IN_5_ \CAMERA_DATA_IN[5]_I ( .PADDI(\CAMERA_DATA_IN_c[5] ), 
    .CAMERADATAIN5(CAMERA_DATA_IN[5]));
  CAMERA_DATA_IN_6_ \CAMERA_DATA_IN[6]_I ( .PADDI(\CAMERA_DATA_IN_c[6] ), 
    .CAMERADATAIN6(CAMERA_DATA_IN[6]));
  CAMERA_DATA_IN_7_ \CAMERA_DATA_IN[7]_I ( .PADDI(\CAMERA_DATA_IN_c[7] ), 
    .CAMERADATAIN7(CAMERA_DATA_IN[7]));
  CAMERA_PCLOCK CAMERA_PCLOCK_I( .PADDI(CAMERA_PCLOCK_c), 
    .CAMERA_PCLOCK(CAMERA_PCLOCK));
  debug_state_0_ \debug_state[0]_I ( .PADDO(\debug_state_c[0] ), 
    .debugstate0(debug_state[0]));
  debug_state_1_ \debug_state[1]_I ( .PADDO(\debug_state_c[1] ), 
    .debugstate1(debug_state[1]));
  RGB_0_ \RGB[0]_I ( .PADDO(N_64_i), .RGB0(RGB[0]));
  RGB_1_ \RGB[1]_I ( .PADDO(N_64_i), .RGB1(RGB[1]));
  RGB_2_ \RGB[2]_I ( .PADDO(N_62_i), .RGB2(RGB[2]));
  RGB_3_ \RGB[3]_I ( .PADDO(N_62_i), .RGB3(RGB[3]));
  RGB_4_ \RGB[4]_I ( .PADDO(N_60_i), .RGB4(RGB[4]));
  RGB_5_ \RGB[5]_I ( .PADDO(N_60_i), .RGB5(RGB[5]));
  VGA_HSYNC VGA_HSYNC_I( .PADDO(N_39), .VGA_HSYNC(VGA_HSYNC));
  VGA_VSYNC VGA_VSYNC_I( .PADDO(\vga_inst.un1_VSYNC_i ), .VGA_VSYNC(VGA_VSYNC));
  clk_25MHz clk_25MHz_I( .PADDO(clk_25MHz_c), .clk_25MHz(clk_25MHz));
  SPRAM2_vfb_b_inst \SPRAM2.vfb_b_inst ( .ADDRESS13(\spram_address[17] ), 
    .ADDRESS12(\spram_address[16] ), .ADDRESS11(\spram_address[15] ), 
    .ADDRESS10(\spram_address[14] ), .ADDRESS9(\spram_address[13] ), 
    .ADDRESS8(\spram_address[12] ), .ADDRESS7(\spram_address[11] ), 
    .ADDRESS6(\spram_address[10] ), .ADDRESS5(\spram_address[9] ), 
    .ADDRESS4(\spram_address[8] ), .ADDRESS3(\spram_address[7] ), 
    .ADDRESS2(\spram_address[6] ), .ADDRESS1(\spram_address[5] ), 
    .ADDRESS0(\spram_address[4] ), .DATAIN15(\spram_data_in[15] ), 
    .DATAIN14(\spram_data_in[14] ), .DATAIN13(\spram_data_in[13] ), 
    .DATAIN12(\spram_data_in[12] ), .DATAIN11(\spram_data_in[11] ), 
    .DATAIN10(\spram_data_in[10] ), .DATAIN9(\spram_data_in[9] ), 
    .DATAIN8(\spram_data_in[8] ), .DATAIN7(\spram_data_in[7] ), 
    .DATAIN6(\spram_data_in[6] ), .DATAIN5(\spram_data_in[5] ), 
    .DATAIN4(\spram_data_in[4] ), .DATAIN3(\spram_data_in[3] ), 
    .DATAIN2(\spram_data_in[2] ), .DATAIN1(\spram_data_in[1] ), 
    .DATAIN0(\spram_data_in[0] ), .MASKWREN3(VCC), .MASKWREN2(VCC), 
    .MASKWREN1(VCC), .MASKWREN0(VCC), .WREN(WR2), .CHIPSELECT(VCC), 
    .CLOCK(clk_25MHz_c), .POWEROFF_N(VCC), .DATAOUT15(\data_out2[15] ), 
    .DATAOUT14(\data_out2[14] ), .DATAOUT13(\data_out2[13] ), 
    .DATAOUT12(\data_out2[12] ), .DATAOUT11(\data_out2[11] ), 
    .DATAOUT10(\data_out2[10] ), .DATAOUT9(\data_out2[9] ), 
    .DATAOUT8(\data_out2[8] ), .DATAOUT7(\data_out2[7] ), 
    .DATAOUT6(\data_out2[6] ), .DATAOUT5(\data_out2[5] ), 
    .DATAOUT4(\data_out2[4] ), .DATAOUT3(\data_out2[3] ), 
    .DATAOUT2(\data_out2[2] ), .DATAOUT1(\data_out2[1] ), 
    .DATAOUT0(\data_out2[0] ));
  SPRAM1_vfb_b_inst \SPRAM1.vfb_b_inst ( .ADDRESS13(\spram_address[17] ), 
    .ADDRESS12(\spram_address[16] ), .ADDRESS11(\spram_address[15] ), 
    .ADDRESS10(\spram_address[14] ), .ADDRESS9(\spram_address[13] ), 
    .ADDRESS8(\spram_address[12] ), .ADDRESS7(\spram_address[11] ), 
    .ADDRESS6(\spram_address[10] ), .ADDRESS5(\spram_address[9] ), 
    .ADDRESS4(\spram_address[8] ), .ADDRESS3(\spram_address[7] ), 
    .ADDRESS2(\spram_address[6] ), .ADDRESS1(\spram_address[5] ), 
    .ADDRESS0(\spram_address[4] ), .DATAIN15(\spram_data_in[15] ), 
    .DATAIN14(\spram_data_in[14] ), .DATAIN13(\spram_data_in[13] ), 
    .DATAIN12(\spram_data_in[12] ), .DATAIN11(\spram_data_in[11] ), 
    .DATAIN10(\spram_data_in[10] ), .DATAIN9(\spram_data_in[9] ), 
    .DATAIN8(\spram_data_in[8] ), .DATAIN7(\spram_data_in[7] ), 
    .DATAIN6(\spram_data_in[6] ), .DATAIN5(\spram_data_in[5] ), 
    .DATAIN4(\spram_data_in[4] ), .DATAIN3(\spram_data_in[3] ), 
    .DATAIN2(\spram_data_in[2] ), .DATAIN1(\spram_data_in[1] ), 
    .DATAIN0(\spram_data_in[0] ), .MASKWREN3(VCC), .MASKWREN2(VCC), 
    .MASKWREN1(VCC), .MASKWREN0(VCC), .WREN(WR1), .CHIPSELECT(VCC), 
    .CLOCK(clk_25MHz_c), .POWEROFF_N(VCC), .DATAOUT15(\data_out1[15] ), 
    .DATAOUT14(\data_out1[14] ), .DATAOUT13(\data_out1[13] ), 
    .DATAOUT12(\data_out1[12] ), .DATAOUT11(\data_out1[11] ), 
    .DATAOUT10(\data_out1[10] ), .DATAOUT9(\data_out1[9] ), 
    .DATAOUT8(\data_out1[8] ), .DATAOUT7(\data_out1[7] ), 
    .DATAOUT6(\data_out1[6] ), .DATAOUT5(\data_out1[5] ), 
    .DATAOUT4(\data_out1[4] ), .DATAOUT3(\data_out1[3] ), 
    .DATAOUT2(\data_out1[2] ), .DATAOUT1(\data_out1[1] ), 
    .DATAOUT0(\data_out1[0] ));
  SPRAM0_vfb_b_inst \SPRAM0.vfb_b_inst ( .ADDRESS13(\spram_address[17] ), 
    .ADDRESS12(\spram_address[16] ), .ADDRESS11(\spram_address[15] ), 
    .ADDRESS10(\spram_address[14] ), .ADDRESS9(\spram_address[13] ), 
    .ADDRESS8(\spram_address[12] ), .ADDRESS7(\spram_address[11] ), 
    .ADDRESS6(\spram_address[10] ), .ADDRESS5(\spram_address[9] ), 
    .ADDRESS4(\spram_address[8] ), .ADDRESS3(\spram_address[7] ), 
    .ADDRESS2(\spram_address[6] ), .ADDRESS1(\spram_address[5] ), 
    .ADDRESS0(\spram_address[4] ), .DATAIN15(\spram_data_in[15] ), 
    .DATAIN14(\spram_data_in[14] ), .DATAIN13(\spram_data_in[13] ), 
    .DATAIN12(\spram_data_in[12] ), .DATAIN11(\spram_data_in[11] ), 
    .DATAIN10(\spram_data_in[10] ), .DATAIN9(\spram_data_in[9] ), 
    .DATAIN8(\spram_data_in[8] ), .DATAIN7(\spram_data_in[7] ), 
    .DATAIN6(\spram_data_in[6] ), .DATAIN5(\spram_data_in[5] ), 
    .DATAIN4(\spram_data_in[4] ), .DATAIN3(\spram_data_in[3] ), 
    .DATAIN2(\spram_data_in[2] ), .DATAIN1(\spram_data_in[1] ), 
    .DATAIN0(\spram_data_in[0] ), .MASKWREN3(VCC), .MASKWREN2(VCC), 
    .MASKWREN1(VCC), .MASKWREN0(VCC), .WREN(WR0), .CHIPSELECT(VCC), 
    .CLOCK(clk_25MHz_c), .POWEROFF_N(VCC), .DATAOUT15(\data_out0[15] ), 
    .DATAOUT14(\data_out0[14] ), .DATAOUT13(\data_out0[13] ), 
    .DATAOUT12(\data_out0[12] ), .DATAOUT11(\data_out0[11] ), 
    .DATAOUT10(\data_out0[10] ), .DATAOUT9(\data_out0[9] ), 
    .DATAOUT8(\data_out0[8] ), .DATAOUT7(\data_out0[7] ), 
    .DATAOUT6(\data_out0[6] ), .DATAOUT5(\data_out0[5] ), 
    .DATAOUT4(\data_out0[4] ), .DATAOUT3(\data_out0[3] ), 
    .DATAOUT2(\data_out0[2] ), .DATAOUT1(\data_out0[1] ), 
    .DATAOUT0(\data_out0[0] ));
endmodule

module vga_inst_SLICE_0 ( input DI0, D1, A1, D0, B0, CE, CLK, CIN0, CIN1, 
    output Q0, F0, F1, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  fa2 \vga_inst/un3_row_1_cry_8_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_Z[8].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x9966";
  defparam inst1.INIT1 = "0x55AA";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module vga_inst_SLICE_1 ( input DI1, DI0, D1, B1, D0, B0, CE, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa20001 \vga_inst/un3_row_1_cry_6_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_Z[6].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  ffsre2 \vga_inst/row_Z[7].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fa20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x9966";
  defparam inst1.INIT1 = "0x9966";
endmodule

module vga_inst_SLICE_2 ( input DI1, DI0, D1, B1, D0, B0, CE, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa20001 \vga_inst/un3_row_1_cry_4_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_Z[4].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  ffsre2 \vga_inst/row_Z[5].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module vga_inst_un3_row_1_cry_2_c_0_SLICE_3 ( input D1, B1, D0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20001 \vga_inst/un3_row_1_cry_2_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_4 ( input DI1, D1, B1, C0, B0, CE, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly;

  fa20002 \vga_inst/un3_row_1_cry_1_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/row_Z[1].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module fa20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xC33C";
  defparam inst1.INIT1 = "0x9966";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module vga_inst_SLICE_5 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20003 \vga_inst/un2_col_cry_8_c_0.fa22_inst ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(A1), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col_Z[8].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col_Z[9].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module fa20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x1144";
  defparam inst1.INIT1 = "0x050A";
endmodule

module vga_inst_SLICE_6 ( input DI1, DI0, D1, B1, D0, B0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20001 \vga_inst/un2_col_cry_6_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col[6].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col_Z[7].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module vga_inst_SLICE_7 ( input DI1, DI0, D1, B1, A1, D0, B0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20004 \vga_inst/un2_col_cry_4_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(A1), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col[4].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col[5].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module fa20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x9966";
  defparam inst1.INIT1 = "0x1144";
endmodule

module vga_inst_SLICE_8 ( input DI1, DI0, D1, B1, D0, B0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa20001 \vga_inst/un2_col_cry_2_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col[2].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col[3].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module vga_inst_SLICE_9 ( input DI1, D1, B1, C0, B0, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa20002 \vga_inst/un2_col_cry_1_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col[1].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module read_address_cry_11_c_0_SLICE_10 ( input D1, D0, B0, CIN0, CIN1, 
    output F0, F1, COUT0 );
  wire   GNDI;

  fa20005 \read_address_cry_11_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xC33C";
  defparam inst1.INIT1 = "0xC33C";
endmodule

module read_address_cry_9_0_c_0_SLICE_11 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20005 \read_address_cry_9_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module read_address_cry_7_0_c_0_SLICE_12 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20005 \read_address_cry_7_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module read_address_cry_5_0_c_0_SLICE_13 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20005 \read_address_cry_5_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module read_address_cry_3_c_0_SLICE_14 ( input D1, C1, B1, D0, C0, B0, CIN0, 
    CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20005 \read_address_cry_3_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module read_address_cry_1_c_0_SLICE_15 ( input D1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa20005 \read_address_cry_1_c_0.fa22_inst ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module read_address_cry_0_c_0_SLICE_16 ( input D1, C1, B1, CIN1, output F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa20005 \read_address_cry_0_c_0.fa22_inst ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_17 ( input DI0, D1, D0, A0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa20006 \write_address_RNO[19].fa22_inst ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \write_address_Z[19].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0x55AA";
  defparam inst1.INIT1 = "0xC33C";
endmodule

module ffsre20007 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_18 ( input DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_17_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \write_address_Z[17].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_19 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_15_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \write_address_Z[15].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \write_address_Z[16].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_20 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_13_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \write_address_Z[13].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \write_address_Z[14].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_21 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_11_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \write_address_Z[11].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \write_address_Z[12].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_22 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_9_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \write_address_Z[9].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \write_address_Z[10].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_23 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_7_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \write_address_Z[7].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \write_address_Z[8].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_24 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_5_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \write_address_Z[5].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \write_address_Z[6].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_25 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_3_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \write_address_Z[3].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \write_address_Z[4].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_26 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa20001 \un1_write_address_1_cry_1_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \write_address_Z[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \write_address_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_27 ( input DI1, D1, B1, C0, B0, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa20002 \un1_write_address_1_cry_0_c_0.fa22_inst ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \write_address_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module reader_SLICE_29 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \reader/FSM_state_RNO[0] ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \reader/FSM_state_Z[0].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_31 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_31_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_31_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \reader/pixel_data_Z[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \reader/pixel_data_Z[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_33 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_33_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_33_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \reader/pixel_data_Z[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \reader/pixel_data_Z[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_35 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_35_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_35_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \reader/pixel_data_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \reader/pixel_data_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_37 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_37_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_37_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \reader/pixel_data_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \reader/pixel_data_Z[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module vga_inst_SLICE_39 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 \vga_inst/row_RNO[9] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 \vga_inst/row_RNO[3] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \vga_inst/row_Z[9].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xBF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xAA2A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_40 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40012 \vga_inst/row_RNO[0] ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \vga_inst/row_RNO[2] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \vga_inst/row_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \vga_inst/row_Z[2].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x0555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x8AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_44 ( input DI1, DI0, D1, C1, B1, A1, D0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40014 \bit_count_fast_RNO[0] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 fsm_state_1_rep1_RNIEVPM2( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \bit_count_fast_Z[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \bit_count_fast_Z[2].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x0104") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_46 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40016 \vga_inst/g0_1_fast ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40017 \fsm_state_fast_RNO[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \fsm_state_fast[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \fsm_state_fast[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xABAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x00BA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_48 ( input DI1, DI0, D1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40008 SLICE_48_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 SLICE_48_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20007 \write_address_Z[18].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \write_address_fast_Z[18].ff_inst ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_52 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 \bit_count_RNO[1] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 \bit_count_RNO[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \bit_count_Z[1].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \bit_count_Z[0].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x7800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x0014") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_58 ( input DI0, D0, C0, B0, A0, CLK, output Q0, F0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40021 start_prev_RNO( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \start_prev_Z.ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_60 ( input DI1, DI0, D1, D0, C0, B0, CE, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_60_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 \reader/pixel_data_RNI4ADK3[7] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \spram_data_in_Z[14].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \spram_data_in_Z[15].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_62 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_62_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_62_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[12].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \spram_data_in_Z[13].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_64 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_64_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_64_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[10].ff_inst ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \spram_data_in_Z[11].ff_inst ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_66 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_66_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_66_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[8].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \spram_data_in_Z[9].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_68 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_68_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 SLICE_68_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spram_data_in_Z[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \spram_data_in_Z[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_70 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_70_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_70_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \spram_data_in_Z[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_72 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_72_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 SLICE_72_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spram_data_in_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \spram_data_in_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_74 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 SLICE_74_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_74_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spram_data_in_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \spram_data_in_Z[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_76 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40023 \reader/pixel_data_RNI3VK85[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40024 \reader/pixel_data_RNI40L85[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \pixel_accum_Z[14].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \pixel_accum_Z[15].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0x4440") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0x2220") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_78 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40025 \reader/pixel_data_RNI1TK85[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40026 \reader/pixel_data_RNIS27I4[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \pixel_accum_Z[12].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \pixel_accum_Z[13].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x5040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x3200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_80 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40027 \reader/pixel_data_RNIVQK85[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40028 \reader/pixel_data_RNI0SK85[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \pixel_accum_Z[10].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \pixel_accum_Z[11].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x2220") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x4440") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_82 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40027 \reader/pixel_data_RNIMQ6D5[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40028 \reader/pixel_data_RNINR6D5[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \pixel_accum_Z[8].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \pixel_accum_Z[9].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_84 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40029 \reader/pixel_data_RNIKO6D5[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40030 \reader/pixel_data_RNILP6D5[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \pixel_accum_Z[6].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \pixel_accum_Z[7].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0x5040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x3200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_86 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40029 \reader/pixel_data_RNIIM6D5[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40030 \reader/pixel_data_RNIJN6D5[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \pixel_accum_Z[4].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \pixel_accum_Z[5].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_88 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40031 \reader/pixel_data_RNIAPOM4[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40032 \reader/pixel_data_RNIHL6D5[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \pixel_accum_Z[2].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \pixel_accum_Z[3].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0x0A08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x00C8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_90 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40033 \reader/pixel_data_RNIEI6D5[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40034 \reader/pixel_data_RNIFJ6D5[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \pixel_accum_Z[0].ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \pixel_accum_Z[1].ff_inst ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x2220") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0x4440") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_93 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40016 \vga_inst/g0_1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40017 \fsm_state_RNO[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \fsm_state[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \fsm_state[1].ff_inst ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module vga_inst_SLICE_95 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40035 \vga_inst/col_RNIKEMLK1[1] ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 \vga_inst/col_RNI4JQJK1[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_96 ( input D0, C0, B0, A0, output F0 );

  lut40037 \vga_inst/col_RNIOP8PL1[9] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x040E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_97 ( input D0, C0, B0, A0, output F0 );

  lut40038 fsm_state_1_rep1_RNIVN0A1_cZ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x238C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_98 ( input D1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 \vga_inst/fsm_state28.fsm_state28_0_a2 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \bit_count_RNIM2TQ[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_99 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40041 fsm_state_0_rep1_RNI512T1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 start_ibuf_RNIS5V71( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xEF1B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x04AE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_101 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40043 \vga_inst/un1_fsm_state28_4 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40044 \reader/spram_data_in_0_sqmuxa_0_234_a2_6 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xFF3B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_102 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 prev_pixel_valid_RNICD5H( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \vga_inst/un1_fsm_state28_4_sx_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x33F3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xA2AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_103 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40047 \vga_inst/g0_1_1_cZ ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 \vga_inst/g0_1_1_1_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xEE17") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x0C55") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_105 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40049 \write_address_RNIHBQO1_0_cZ[16] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 \write_address_RNII3S51_cZ[12] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x0F7F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_107 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40051 \write_address_RNIA0204_cZ[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \write_address_RNIJ01I[1] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x7FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_108 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40053 \vga_inst/un1_write_addresslto19_i_a2_0_10 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40054 \vga_inst/un1_write_addresslto19_i_a2_0_9 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_109 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40055 \write_address_RNIHBQO1[16] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40056 \write_address_RNI41DS[12] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x003F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_111 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40057 \vga_inst/WR1_0_a2 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 WR_RNIQ1I9( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x5410") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_113 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40058 \vga_inst/WR0_0_a2 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 WR_RNIQ1I9_0( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x1054") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_115 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40060 \fsm_state_RNO_0[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \vga_inst/un1_fsm_state28_1 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x0301") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xF00F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_117 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40062 \reader/pixel_valid_RNIF7PC1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40063 \reader/fsm_state30_0_a2 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x2020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_118 ( input D0, C0, B0, A0, output F0 );

  lut40064 \vga_inst.un1_fsm_state28_4_0_i ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_119 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40065 \reader/pixel_data_RNIHSMT2[4] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40066 \reader/pixel_data_RNIMEHL1[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xEF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_121 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40067 \reader/pixel_data_RNIU1MG3_4[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40068 \reader/pixel_data_RNIB1GC3[7] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_123 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40069 \reader/pixel_data_RNIU1MG3_9[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40070 \reader/pixel_data_RNIB1GC3_0[7] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x5550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_125 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40071 \reader/pixel_data_RNIU1MG3_0[7] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 \reader/pixel_data_RNIRLSD3[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0x5000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xA080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_127 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40073 \vga_inst/g0_2 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 \vga_inst/g0_3 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xF080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_129 ( input D0, C0, B0, A0, output F0 );

  lut40075 \vga_inst/g0_i_a5_0_4_cZ ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_130 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \vga_inst/g0_i_a5_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 \vga_inst/g0_i_a5_0_3_cZ ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_131 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40078 \vga_inst/col_RNIG6356_2[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_132 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_cZ[15] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0[15] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_133 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40081 \vga_inst/col_RNIHH4KC_2[2] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \vga_inst/col_RNIG6356_0[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xAAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_134 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_cZ[11] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0[11] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_135 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40083 \vga_inst/col_RNIG6356_5[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_136 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_i_m2[14] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0_i_m2[14] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_137 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40084 \vga_inst/col_RNIHH4KC_0[2] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \vga_inst/col_RNIG6356_3[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_138 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_i_m2[10] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0_i_m2[10] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_139 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40082 \vga_inst/col_RNIG6356_1[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_140 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_cZ[13] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0[13] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_141 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40084 \vga_inst/col_RNIHH4KC[2] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \vga_inst/col_RNIG6356[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_142 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_cZ[9] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40086 \vga_inst/spram_data_out_0[9] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_143 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40083 \vga_inst/col_RNIG6356_6[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_144 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_i_m2[12] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0_i_m2[12] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_145 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40081 \vga_inst/col_RNIHH4KC_1[2] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \vga_inst/col_RNIG6356_4[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_146 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_i_m2[8] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0_i_m2[8] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_148 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40084 \vga_inst/col_RNIIECEJ1[1] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \vga_inst/col_RNIH57IP[0] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_150 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40083 \vga_inst/col_RNIH57IP_0[0] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_152 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \vga_inst/col_RNIKEMLK1[9] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \vga_inst/col_RNIF24IJ1[1] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0x0500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0x0003") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_153 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40090 \vga_inst/row_RNI11R3[7] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 \vga_inst/row_RNIM2H1[1] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_156 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40092 prev_pixel_valid_RNO( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 \vga_inst/un1_fsm_state28_3_0_a2 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \prev_pixel_valid_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xA0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0x2A22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_157 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40094 \vga_inst/col_RNIDKSJ[7] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_158 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40095 \vga_inst/col_RNILGM11[9] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 \vga_inst/row_RNIUN23[8] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_159 ( input DI1, D1, D0, C0, B0, A0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40096 \vga_inst/col_RNO_cZ[0] ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \vga_inst/col_RNIDRO71[4] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \vga_inst/col[0].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_160 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40098 \vga_inst/col_RNI37E33[9] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 \vga_inst/col_RNICQO71[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0x0800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40076 \vga_inst/un1_write_addresslto19_i_a2_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40100 \vga_inst/un1_write_addresslto19_i_a2_0_7_cZ ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_164 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40101 \vga_inst/row_RNIUNT6[9] ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \vga_inst/row_RNI0DC5[1] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xFF5F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_165 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40103 \vga_inst/spram_address[18] ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \vga_inst/un2_spram_address_0_a2 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xACAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0x0030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_166 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40105 \vga_inst/col_RNI7LB61[4] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40106 \vga_inst/spram_address_cZ[17] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_167 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40107 \vga_inst/col_RNI1NLR1[7] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40108 \vga_inst/col_RNISMQT[4] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xC003") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_169 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40109 WR_RNO( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40110 \vga_inst/WR0_m1_e ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \WR_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xE222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_170 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40111 \vga_inst/WR2_0_a2 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40106 \vga_inst/spram_address[19] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0x20E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_172 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_i_m2[7] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0[7] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_174 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_i_m2[1] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0[1] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_175 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_u_i_m2[0] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0_i_m2[0] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_177 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_i_m2[2] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40112 \vga_inst/spram_data_out_0_i_m2[2] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_179 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_i_m2[4] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40113 \vga_inst/spram_data_out_0_i_m2[4] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_181 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_i_m2[6] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0_i_m2[6] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_183 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40114 \vga_inst/spram_data_out_i_m2[5] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0[5] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0xAAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_185 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \vga_inst/spram_data_out_i_m2[3] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \vga_inst/spram_data_out_0[3] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_188 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40115 \fsm_state_cnst_1_0_.m8_i_x2 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40116 \vga_inst/col_RNI6J4RL1[9] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0x333C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0x0007") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_189 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40117 \vga_inst/un1_write_addresslto19_i_a2_0_8_cZ ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40118 \write_address_RNIC7241[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_191 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40119 \reader/pixel_valid_RNIS0MN ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40120 \reader/pixel_data_RNIU1MG3_3[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0x7FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_192 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40121 \reader/pixel_data_RNIU1MG3_5[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40122 \reader/pixel_data_RNIU1MG3_6[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_193 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40123 \reader/pixel_data_RNIU1MG3_8[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40099 \reader/pixel_data_RNIU1MG3_11[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_195 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40124 \reader/pixel_data_RNIU1MG3_7[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40125 \reader/pixel_data_RNIU1MG3_12[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_197 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40126 \reader/pixel_data_RNIU1MG3_14[7] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40127 \reader/pixel_data_RNIU1MG3_13[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0x0200") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_198 ( input DI1, D1, C1, D0, C0, B0, A0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40128 \reader.SLICE_198_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40129 \reader/pixel_data_RNIU1MG3_10[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \bit_count_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_199 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40130 read_address_cry_7_0_c_0_RNO_0_cZ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40131 read_address_cry_9_0_c_0_RNO_cZ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0x33CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0x33CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_200 ( input D1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40132 read_address_cry_9_0_c_0_RNO_0_cZ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40133 \vga_inst/row_RNITM23[8] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_202 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40130 read_address_cry_5_0_c_0_RNO_0_cZ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40131 read_address_cry_7_0_c_0_RNO_cZ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_204 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40134 read_address_cry_3_c_0_RNO_0_cZ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40135 read_address_cry_5_0_c_0_RNO_cZ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0x3C3C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_206 ( input DI1, D1, C1, D0, C0, B0, A0, CE, CLK, output 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40035 \reader/pixel_valid_RNO ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40136 \reader/pixel_valid_RNIQ61J ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \reader/pixel_valid.ff_inst ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0x0800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_207 ( input DI1, D1, C1, B1, A1, D0, C0, B0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40137 \fsm_state_RNO[2] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40138 \fsm_state_RNIB7GA[0] ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \fsm_state_Z[2].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0xD888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_209 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40139 read_address_cry_3_c_0_RNO_1_cZ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40140 read_address_cry_1_c_0_RNO( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0xFCC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40140 ( input A, B, C, D, output Z );

  LUT4 #("0xA55A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_213 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40141 \reader/pixel_data_RNIU1MG3_2[7] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40142 \reader/pixel_data_RNIU1MG3_1[7] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40142 ( input A, B, C, D, output Z );

  LUT4 #("0x00A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_214 ( input DI1, D1, C1, B1, A1, D0, C0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40143 \bit_count_RNO_cZ[3] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40144 \reader/pixel_data_RNIU1MG3[7] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \bit_count_Z[3].ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_218 ( input D0, C0, B0, A0, output F0 );

  lut40145 \vga_inst/un1_write_addresslto19_i ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_222 ( input DI1, D1, C1, B1, A1, D0, C0, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40143 \bit_count_fast_RNO[3] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \bit_count_RNIV7P2[0] ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \bit_count_fast_Z[3].ff_inst ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_223 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40146 read_address_cry_3_c_0_RNO_cZ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40147 read_address_cry_3_c_0_RNO_2_cZ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40146 ( input A, B, C, D, output Z );

  LUT4 #("0x33CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40147 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_224 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40132 read_address_cry_7_0_c_0_RNO_1_cZ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40148 read_address_cry_5_0_c_0_RNO_1_cZ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40148 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_225 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40148 read_address_cry_5_0_c_0_RNO_2_cZ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_227 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40132 read_address_cry_9_0_c_0_RNO_1_cZ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40147 read_address_cry_7_0_c_0_RNO_2_cZ( .A(A0), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_231 ( input DI1, D1, C1, B1, A1, D0, C0, B0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40149 fsm_state_1_rep1_RNO( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40150 \write_address_RNICH3I_cZ[18] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \fsm_state_1_rep1_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  LUT4 #("0x00F2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  LUT4 #("0x3FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module reader_SLICE_234 ( input DI1, D1, C1, B1, D0, C0, A0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40151 \reader/pixel_half_RNO ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40144 \reader/pixel_half_RNIKJ0O_cZ ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \reader/pixel_half_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  LUT4 #("0x3C00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_236 ( input DI1, D1, C1, B1, A1, D0, C0, B0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40152 \vga_inst/g0_1_rep1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40153 \vga_inst/g0_1_a5_2_1_cZ ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \fsm_state_0_rep1_Z.ff_inst ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40152 ( input A, B, C, D, output Z );

  LUT4 #("0xCCDC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40153 ( input A, B, C, D, output Z );

  LUT4 #("0x0C00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_240 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40154 \vga_inst/un1_fsm_state27_2_0_a2_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40155 \vga_inst/un1_fsm_state27_2_0_a2 ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40155 ( input A, B, C, D, output Z );

  LUT4 #("0x005A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_243 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40156 \vga_inst/col_RNIBPB61[6] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40106 \vga_inst/col_RNI9NB61[5] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_245 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40157 \vga_inst/spram_address_cZ[8] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40158 \vga_inst/spram_address_cZ[7] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40157 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40158 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_247 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40159 \vga_inst/spram_address_cZ[10] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \vga_inst/spram_address_cZ[9] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40159 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40160 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module vga_inst_SLICE_249 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40157 \vga_inst/spram_address_cZ[12] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \vga_inst/spram_address_cZ[11] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_251 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40157 \vga_inst/spram_address_cZ[14] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \vga_inst/spram_address_cZ[13] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module vga_inst_SLICE_253 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40157 \vga_inst/spram_address_cZ[16] ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \vga_inst/spram_address_cZ[15] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_266 ( output F0 );
  wire   GNDI;

  lut40161 VCC_cZ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pll_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTCORE );
  wire   GNDI;

  PLL_B_B \my_pll/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTCORE) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.DIVR = "0";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module clk_12MHz ( output PADDI, input clk_12MHz );
  wire   GNDI;

  BB_B_B \clk_12MHz_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(clk_12MHz));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (clk_12MHz => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module start ( output PADDI, input start );
  wire   GNDI;

  BB_B_B \start_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(start));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (start => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_VSYNC_IN ( output PADDI, input CAMERA_VSYNC_IN );
  wire   GNDI;

  BB_B_B \CAMERA_VSYNC_IN_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERA_VSYNC_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERA_VSYNC_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_HREF_IN ( output PADDI, input CAMERA_HREF_IN );
  wire   GNDI;

  BB_B_B \CAMERA_HREF_IN_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERA_HREF_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERA_HREF_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_0_ ( output PADDI, input CAMERADATAIN0 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_1_ ( output PADDI, input CAMERADATAIN1 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_2_ ( output PADDI, input CAMERADATAIN2 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[2].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN2 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_3_ ( output PADDI, input CAMERADATAIN3 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[3].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN3 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_4_ ( output PADDI, input CAMERADATAIN4 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[4].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN4 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_5_ ( output PADDI, input CAMERADATAIN5 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[5].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN5 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_6_ ( output PADDI, input CAMERADATAIN6 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[6].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN6 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_DATA_IN_7_ ( output PADDI, input CAMERADATAIN7 );
  wire   GNDI;

  BB_B_B \CAMERA_DATA_IN_ibuf[7].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERADATAIN7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERADATAIN7 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module CAMERA_PCLOCK ( output PADDI, input CAMERA_PCLOCK );
  wire   GNDI;

  BB_B_B \CAMERA_PCLOCK_ibuf.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(CAMERA_PCLOCK));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CAMERA_PCLOCK => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_state_0_ ( input PADDO, output debugstate0 );
  wire   VCCI;

  BB_B_B \debug_state_obuf[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(debugstate0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debugstate0) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_state_1_ ( input PADDO, output debugstate1 );
  wire   VCCI;

  BB_B_B \debug_state_obuf[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(debugstate1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debugstate1) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_0_ ( input PADDO, output RGB0 );
  wire   VCCI;

  BB_B_B \RGB_obuf[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB0) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_1_ ( input PADDO, output RGB1 );
  wire   VCCI;

  BB_B_B \RGB_obuf[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB1) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_2_ ( input PADDO, output RGB2 );
  wire   VCCI;

  BB_B_B \RGB_obuf[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB2) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_3_ ( input PADDO, output RGB3 );
  wire   VCCI;

  BB_B_B \RGB_obuf[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB3) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_4_ ( input PADDO, output RGB4 );
  wire   VCCI;

  BB_B_B \RGB_obuf[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB4) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_5_ ( input PADDO, output RGB5 );
  wire   VCCI;

  BB_B_B \RGB_obuf[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB5) = (0:0:0,0:0:0);
  endspecify

endmodule

module VGA_HSYNC ( input PADDO, output VGA_HSYNC );
  wire   VCCI;

  BB_B_B \VGA_HSYNC_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VGA_HSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VGA_HSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module VGA_VSYNC ( input PADDO, output VGA_VSYNC );
  wire   VCCI;

  BB_B_B \VGA_VSYNC_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VGA_VSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VGA_VSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module clk_25MHz ( input PADDO, output clk_25MHz );
  wire   VCCI;

  BB_B_B \clk_25MHz_obuf.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(clk_25MHz));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => clk_25MHz) = (0:0:0,0:0:0);
  endspecify

endmodule

module SPRAM2_vfb_b_inst ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, 
    ADDRESS9, ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, 
    ADDRESS2, ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, 
    DATAIN11, DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, 
    DATAIN3, DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, 
    MASKWREN0, WREN, CHIPSELECT, CLOCK, POWEROFF_N, output DATAOUT15, 
    DATAOUT14, DATAOUT13, DATAOUT12, DATAOUT11, DATAOUT10, DATAOUT9, DATAOUT8, 
    DATAOUT7, DATAOUT6, DATAOUT5, DATAOUT4, DATAOUT3, DATAOUT2, DATAOUT1, 
    DATAOUT0 );
  wire   GNDI, ADDRESS13_dly, CLOCK_dly, ADDRESS12_dly, ADDRESS11_dly, 
         ADDRESS10_dly, ADDRESS9_dly, ADDRESS8_dly, ADDRESS7_dly, ADDRESS6_dly, 
         ADDRESS5_dly, ADDRESS4_dly, ADDRESS3_dly, ADDRESS2_dly, ADDRESS1_dly, 
         ADDRESS0_dly, DATAIN15_dly, DATAIN14_dly, DATAIN13_dly, DATAIN12_dly, 
         DATAIN11_dly, DATAIN10_dly, DATAIN9_dly, DATAIN8_dly, DATAIN7_dly, 
         DATAIN6_dly, DATAIN5_dly, DATAIN4_dly, DATAIN3_dly, DATAIN2_dly, 
         DATAIN1_dly, DATAIN0_dly, MASKWREN3_dly, MASKWREN2_dly, MASKWREN1_dly, 
         MASKWREN0_dly, WREN_dly, CHIPSELECT_dly, POWEROFF_N_dly;

  VFB_B_B \SPRAM2.vfb_b_inst ( .ADDRESS13(ADDRESS13_dly), 
    .ADDRESS12(ADDRESS12_dly), .ADDRESS11(ADDRESS11_dly), 
    .ADDRESS10(ADDRESS10_dly), .ADDRESS9(ADDRESS9_dly), 
    .ADDRESS8(ADDRESS8_dly), .ADDRESS7(ADDRESS7_dly), .ADDRESS6(ADDRESS6_dly), 
    .ADDRESS5(ADDRESS5_dly), .ADDRESS4(ADDRESS4_dly), .ADDRESS3(ADDRESS3_dly), 
    .ADDRESS2(ADDRESS2_dly), .ADDRESS1(ADDRESS1_dly), .ADDRESS0(ADDRESS0_dly), 
    .DATAIN15(DATAIN15_dly), .DATAIN14(DATAIN14_dly), .DATAIN13(DATAIN13_dly), 
    .DATAIN12(DATAIN12_dly), .DATAIN11(DATAIN11_dly), .DATAIN10(DATAIN10_dly), 
    .DATAIN9(DATAIN9_dly), .DATAIN8(DATAIN8_dly), .DATAIN7(DATAIN7_dly), 
    .DATAIN6(DATAIN6_dly), .DATAIN5(DATAIN5_dly), .DATAIN4(DATAIN4_dly), 
    .DATAIN3(DATAIN3_dly), .DATAIN2(DATAIN2_dly), .DATAIN1(DATAIN1_dly), 
    .DATAIN0(DATAIN0_dly), .MASKWREN3(MASKWREN3_dly), 
    .MASKWREN2(MASKWREN2_dly), .MASKWREN1(MASKWREN1_dly), 
    .MASKWREN0(MASKWREN0_dly), .WREN(WREN_dly), .CHIPSELECT(CHIPSELECT_dly), 
    .CLOCK(CLOCK_dly), .RDMARGINEN(GNDI), .RDMARGIN3(GNDI), .RDMARGIN2(GNDI), 
    .RDMARGIN1(GNDI), .RDMARGIN0(GNDI), .STANDBY(GNDI), .SLEEP(GNDI), 
    .POWEROFF_N(POWEROFF_N_dly), .TEST(GNDI), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(DATAOUT13), .DATAOUT12(DATAOUT12), 
    .DATAOUT11(DATAOUT11), .DATAOUT10(DATAOUT10), .DATAOUT9(DATAOUT9), 
    .DATAOUT8(DATAOUT8), .DATAOUT7(DATAOUT7), .DATAOUT6(DATAOUT6), 
    .DATAOUT5(DATAOUT5), .DATAOUT4(DATAOUT4), .DATAOUT3(DATAOUT3), 
    .DATAOUT2(DATAOUT2), .DATAOUT1(DATAOUT1), .DATAOUT0(DATAOUT0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLOCK => DATAOUT15) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT14) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT13) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT12) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT11) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT10) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT9) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT8) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT7) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT6) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT5) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT4) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT3) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT2) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT1) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT0) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT15) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT14) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT13) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT12) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT11) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT10) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT9) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT8) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT7) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT6) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT5) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT4) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT3) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT2) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT1) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT0) = (0:0:0,0:0:0);
    $setuphold 
      (posedge CLOCK, ADDRESS13, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS13_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS12, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS12_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS11, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS11_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS10, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS10_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS9, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS9_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS8, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS8_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS7, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS7_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS6, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS6_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS5, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS5_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS4, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS4_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS3, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS3_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS2, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS2_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS1, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS1_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS0, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS0_dly);
    $setuphold 
      (posedge CLOCK, DATAIN15, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN15_dly);
    $setuphold 
      (posedge CLOCK, DATAIN14, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN14_dly);
    $setuphold 
      (posedge CLOCK, DATAIN13, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN13_dly);
    $setuphold 
      (posedge CLOCK, DATAIN12, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN12_dly);
    $setuphold 
      (posedge CLOCK, DATAIN11, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN11_dly);
    $setuphold 
      (posedge CLOCK, DATAIN10, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN10_dly);
    $setuphold 
      (posedge CLOCK, DATAIN9, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN9_dly);
    $setuphold 
      (posedge CLOCK, DATAIN8, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN8_dly);
    $setuphold 
      (posedge CLOCK, DATAIN7, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN7_dly);
    $setuphold 
      (posedge CLOCK, DATAIN6, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN6_dly);
    $setuphold 
      (posedge CLOCK, DATAIN5, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN5_dly);
    $setuphold 
      (posedge CLOCK, DATAIN4, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN4_dly);
    $setuphold 
      (posedge CLOCK, DATAIN3, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN3_dly);
    $setuphold 
      (posedge CLOCK, DATAIN2, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN2_dly);
    $setuphold 
      (posedge CLOCK, DATAIN1, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN1_dly);
    $setuphold 
      (posedge CLOCK, DATAIN0, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN0_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN3, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN3_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN2, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN2_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN1, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN1_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN0, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN0_dly);
    $setuphold (posedge CLOCK, WREN, 0:0:0, 0:0:0,,,, CLOCK_dly, WREN_dly);
    $setuphold 
      (posedge CLOCK, CHIPSELECT, 0:0:0, 0:0:0,,,, CLOCK_dly, CHIPSELECT_dly);
    $setuphold 
      (posedge CLOCK, POWEROFF_N, 0:0:0, 0:0:0,,,, CLOCK_dly, POWEROFF_N_dly);
    $width (posedge CLOCK, 0:0:0);
    $width (negedge CLOCK, 0:0:0);
  endspecify

endmodule

module VFB_B_B ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, ADDRESS9, 
    ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, ADDRESS2, 
    ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, DATAIN11, 
    DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, DATAIN3, 
    DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, MASKWREN0, 
    WREN, CHIPSELECT, CLOCK, RDMARGINEN, RDMARGIN3, RDMARGIN2, RDMARGIN1, 
    RDMARGIN0, STANDBY, SLEEP, POWEROFF_N, TEST, output DATAOUT15, DATAOUT14, 
    DATAOUT13, DATAOUT12, DATAOUT11, DATAOUT10, DATAOUT9, DATAOUT8, DATAOUT7, 
    DATAOUT6, DATAOUT5, DATAOUT4, DATAOUT3, DATAOUT2, DATAOUT1, DATAOUT0 );

  VFB_B INST10( .ADDRESS13(ADDRESS13), .ADDRESS12(ADDRESS12), 
    .ADDRESS11(ADDRESS11), .ADDRESS10(ADDRESS10), .ADDRESS9(ADDRESS9), 
    .ADDRESS8(ADDRESS8), .ADDRESS7(ADDRESS7), .ADDRESS6(ADDRESS6), 
    .ADDRESS5(ADDRESS5), .ADDRESS4(ADDRESS4), .ADDRESS3(ADDRESS3), 
    .ADDRESS2(ADDRESS2), .ADDRESS1(ADDRESS1), .ADDRESS0(ADDRESS0), 
    .DATAIN15(DATAIN15), .DATAIN14(DATAIN14), .DATAIN13(DATAIN13), 
    .DATAIN12(DATAIN12), .DATAIN11(DATAIN11), .DATAIN10(DATAIN10), 
    .DATAIN9(DATAIN9), .DATAIN8(DATAIN8), .DATAIN7(DATAIN7), .DATAIN6(DATAIN6), 
    .DATAIN5(DATAIN5), .DATAIN4(DATAIN4), .DATAIN3(DATAIN3), .DATAIN2(DATAIN2), 
    .DATAIN1(DATAIN1), .DATAIN0(DATAIN0), .MASKWREN3(MASKWREN3), 
    .MASKWREN2(MASKWREN2), .MASKWREN1(MASKWREN1), .MASKWREN0(MASKWREN0), 
    .WREN(WREN), .CHIPSELECT(CHIPSELECT), .CLOCK(CLOCK), 
    .RDMARGINEN(RDMARGINEN), .RDMARGIN3(RDMARGIN3), .RDMARGIN2(RDMARGIN2), 
    .RDMARGIN1(RDMARGIN1), .RDMARGIN0(RDMARGIN0), .STANDBY(STANDBY), 
    .SLEEP(SLEEP), .POWEROFF_N(POWEROFF_N), .TEST(TEST), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(DATAOUT13), .DATAOUT12(DATAOUT12), 
    .DATAOUT11(DATAOUT11), .DATAOUT10(DATAOUT10), .DATAOUT9(DATAOUT9), 
    .DATAOUT8(DATAOUT8), .DATAOUT7(DATAOUT7), .DATAOUT6(DATAOUT6), 
    .DATAOUT5(DATAOUT5), .DATAOUT4(DATAOUT4), .DATAOUT3(DATAOUT3), 
    .DATAOUT2(DATAOUT2), .DATAOUT1(DATAOUT1), .DATAOUT0(DATAOUT0));
endmodule

module SPRAM1_vfb_b_inst ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, 
    ADDRESS9, ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, 
    ADDRESS2, ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, 
    DATAIN11, DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, 
    DATAIN3, DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, 
    MASKWREN0, WREN, CHIPSELECT, CLOCK, POWEROFF_N, output DATAOUT15, 
    DATAOUT14, DATAOUT13, DATAOUT12, DATAOUT11, DATAOUT10, DATAOUT9, DATAOUT8, 
    DATAOUT7, DATAOUT6, DATAOUT5, DATAOUT4, DATAOUT3, DATAOUT2, DATAOUT1, 
    DATAOUT0 );
  wire   GNDI, ADDRESS13_dly, CLOCK_dly, ADDRESS12_dly, ADDRESS11_dly, 
         ADDRESS10_dly, ADDRESS9_dly, ADDRESS8_dly, ADDRESS7_dly, ADDRESS6_dly, 
         ADDRESS5_dly, ADDRESS4_dly, ADDRESS3_dly, ADDRESS2_dly, ADDRESS1_dly, 
         ADDRESS0_dly, DATAIN15_dly, DATAIN14_dly, DATAIN13_dly, DATAIN12_dly, 
         DATAIN11_dly, DATAIN10_dly, DATAIN9_dly, DATAIN8_dly, DATAIN7_dly, 
         DATAIN6_dly, DATAIN5_dly, DATAIN4_dly, DATAIN3_dly, DATAIN2_dly, 
         DATAIN1_dly, DATAIN0_dly, MASKWREN3_dly, MASKWREN2_dly, MASKWREN1_dly, 
         MASKWREN0_dly, WREN_dly, CHIPSELECT_dly, POWEROFF_N_dly;

  VFB_B_B \SPRAM1.vfb_b_inst ( .ADDRESS13(ADDRESS13_dly), 
    .ADDRESS12(ADDRESS12_dly), .ADDRESS11(ADDRESS11_dly), 
    .ADDRESS10(ADDRESS10_dly), .ADDRESS9(ADDRESS9_dly), 
    .ADDRESS8(ADDRESS8_dly), .ADDRESS7(ADDRESS7_dly), .ADDRESS6(ADDRESS6_dly), 
    .ADDRESS5(ADDRESS5_dly), .ADDRESS4(ADDRESS4_dly), .ADDRESS3(ADDRESS3_dly), 
    .ADDRESS2(ADDRESS2_dly), .ADDRESS1(ADDRESS1_dly), .ADDRESS0(ADDRESS0_dly), 
    .DATAIN15(DATAIN15_dly), .DATAIN14(DATAIN14_dly), .DATAIN13(DATAIN13_dly), 
    .DATAIN12(DATAIN12_dly), .DATAIN11(DATAIN11_dly), .DATAIN10(DATAIN10_dly), 
    .DATAIN9(DATAIN9_dly), .DATAIN8(DATAIN8_dly), .DATAIN7(DATAIN7_dly), 
    .DATAIN6(DATAIN6_dly), .DATAIN5(DATAIN5_dly), .DATAIN4(DATAIN4_dly), 
    .DATAIN3(DATAIN3_dly), .DATAIN2(DATAIN2_dly), .DATAIN1(DATAIN1_dly), 
    .DATAIN0(DATAIN0_dly), .MASKWREN3(MASKWREN3_dly), 
    .MASKWREN2(MASKWREN2_dly), .MASKWREN1(MASKWREN1_dly), 
    .MASKWREN0(MASKWREN0_dly), .WREN(WREN_dly), .CHIPSELECT(CHIPSELECT_dly), 
    .CLOCK(CLOCK_dly), .RDMARGINEN(GNDI), .RDMARGIN3(GNDI), .RDMARGIN2(GNDI), 
    .RDMARGIN1(GNDI), .RDMARGIN0(GNDI), .STANDBY(GNDI), .SLEEP(GNDI), 
    .POWEROFF_N(POWEROFF_N_dly), .TEST(GNDI), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(DATAOUT13), .DATAOUT12(DATAOUT12), 
    .DATAOUT11(DATAOUT11), .DATAOUT10(DATAOUT10), .DATAOUT9(DATAOUT9), 
    .DATAOUT8(DATAOUT8), .DATAOUT7(DATAOUT7), .DATAOUT6(DATAOUT6), 
    .DATAOUT5(DATAOUT5), .DATAOUT4(DATAOUT4), .DATAOUT3(DATAOUT3), 
    .DATAOUT2(DATAOUT2), .DATAOUT1(DATAOUT1), .DATAOUT0(DATAOUT0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLOCK => DATAOUT15) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT14) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT13) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT12) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT11) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT10) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT9) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT8) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT7) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT6) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT5) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT4) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT3) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT2) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT1) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT0) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT15) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT14) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT13) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT12) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT11) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT10) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT9) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT8) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT7) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT6) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT5) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT4) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT3) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT2) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT1) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT0) = (0:0:0,0:0:0);
    $setuphold 
      (posedge CLOCK, ADDRESS13, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS13_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS12, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS12_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS11, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS11_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS10, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS10_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS9, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS9_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS8, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS8_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS7, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS7_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS6, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS6_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS5, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS5_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS4, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS4_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS3, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS3_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS2, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS2_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS1, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS1_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS0, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS0_dly);
    $setuphold 
      (posedge CLOCK, DATAIN15, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN15_dly);
    $setuphold 
      (posedge CLOCK, DATAIN14, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN14_dly);
    $setuphold 
      (posedge CLOCK, DATAIN13, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN13_dly);
    $setuphold 
      (posedge CLOCK, DATAIN12, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN12_dly);
    $setuphold 
      (posedge CLOCK, DATAIN11, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN11_dly);
    $setuphold 
      (posedge CLOCK, DATAIN10, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN10_dly);
    $setuphold 
      (posedge CLOCK, DATAIN9, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN9_dly);
    $setuphold 
      (posedge CLOCK, DATAIN8, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN8_dly);
    $setuphold 
      (posedge CLOCK, DATAIN7, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN7_dly);
    $setuphold 
      (posedge CLOCK, DATAIN6, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN6_dly);
    $setuphold 
      (posedge CLOCK, DATAIN5, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN5_dly);
    $setuphold 
      (posedge CLOCK, DATAIN4, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN4_dly);
    $setuphold 
      (posedge CLOCK, DATAIN3, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN3_dly);
    $setuphold 
      (posedge CLOCK, DATAIN2, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN2_dly);
    $setuphold 
      (posedge CLOCK, DATAIN1, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN1_dly);
    $setuphold 
      (posedge CLOCK, DATAIN0, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN0_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN3, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN3_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN2, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN2_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN1, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN1_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN0, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN0_dly);
    $setuphold (posedge CLOCK, WREN, 0:0:0, 0:0:0,,,, CLOCK_dly, WREN_dly);
    $setuphold 
      (posedge CLOCK, CHIPSELECT, 0:0:0, 0:0:0,,,, CLOCK_dly, CHIPSELECT_dly);
    $setuphold 
      (posedge CLOCK, POWEROFF_N, 0:0:0, 0:0:0,,,, CLOCK_dly, POWEROFF_N_dly);
    $width (posedge CLOCK, 0:0:0);
    $width (negedge CLOCK, 0:0:0);
  endspecify

endmodule

module SPRAM0_vfb_b_inst ( input ADDRESS13, ADDRESS12, ADDRESS11, ADDRESS10, 
    ADDRESS9, ADDRESS8, ADDRESS7, ADDRESS6, ADDRESS5, ADDRESS4, ADDRESS3, 
    ADDRESS2, ADDRESS1, ADDRESS0, DATAIN15, DATAIN14, DATAIN13, DATAIN12, 
    DATAIN11, DATAIN10, DATAIN9, DATAIN8, DATAIN7, DATAIN6, DATAIN5, DATAIN4, 
    DATAIN3, DATAIN2, DATAIN1, DATAIN0, MASKWREN3, MASKWREN2, MASKWREN1, 
    MASKWREN0, WREN, CHIPSELECT, CLOCK, POWEROFF_N, output DATAOUT15, 
    DATAOUT14, DATAOUT13, DATAOUT12, DATAOUT11, DATAOUT10, DATAOUT9, DATAOUT8, 
    DATAOUT7, DATAOUT6, DATAOUT5, DATAOUT4, DATAOUT3, DATAOUT2, DATAOUT1, 
    DATAOUT0 );
  wire   GNDI, ADDRESS13_dly, CLOCK_dly, ADDRESS12_dly, ADDRESS11_dly, 
         ADDRESS10_dly, ADDRESS9_dly, ADDRESS8_dly, ADDRESS7_dly, ADDRESS6_dly, 
         ADDRESS5_dly, ADDRESS4_dly, ADDRESS3_dly, ADDRESS2_dly, ADDRESS1_dly, 
         ADDRESS0_dly, DATAIN15_dly, DATAIN14_dly, DATAIN13_dly, DATAIN12_dly, 
         DATAIN11_dly, DATAIN10_dly, DATAIN9_dly, DATAIN8_dly, DATAIN7_dly, 
         DATAIN6_dly, DATAIN5_dly, DATAIN4_dly, DATAIN3_dly, DATAIN2_dly, 
         DATAIN1_dly, DATAIN0_dly, MASKWREN3_dly, MASKWREN2_dly, MASKWREN1_dly, 
         MASKWREN0_dly, WREN_dly, CHIPSELECT_dly, POWEROFF_N_dly;

  VFB_B_B \SPRAM0.vfb_b_inst ( .ADDRESS13(ADDRESS13_dly), 
    .ADDRESS12(ADDRESS12_dly), .ADDRESS11(ADDRESS11_dly), 
    .ADDRESS10(ADDRESS10_dly), .ADDRESS9(ADDRESS9_dly), 
    .ADDRESS8(ADDRESS8_dly), .ADDRESS7(ADDRESS7_dly), .ADDRESS6(ADDRESS6_dly), 
    .ADDRESS5(ADDRESS5_dly), .ADDRESS4(ADDRESS4_dly), .ADDRESS3(ADDRESS3_dly), 
    .ADDRESS2(ADDRESS2_dly), .ADDRESS1(ADDRESS1_dly), .ADDRESS0(ADDRESS0_dly), 
    .DATAIN15(DATAIN15_dly), .DATAIN14(DATAIN14_dly), .DATAIN13(DATAIN13_dly), 
    .DATAIN12(DATAIN12_dly), .DATAIN11(DATAIN11_dly), .DATAIN10(DATAIN10_dly), 
    .DATAIN9(DATAIN9_dly), .DATAIN8(DATAIN8_dly), .DATAIN7(DATAIN7_dly), 
    .DATAIN6(DATAIN6_dly), .DATAIN5(DATAIN5_dly), .DATAIN4(DATAIN4_dly), 
    .DATAIN3(DATAIN3_dly), .DATAIN2(DATAIN2_dly), .DATAIN1(DATAIN1_dly), 
    .DATAIN0(DATAIN0_dly), .MASKWREN3(MASKWREN3_dly), 
    .MASKWREN2(MASKWREN2_dly), .MASKWREN1(MASKWREN1_dly), 
    .MASKWREN0(MASKWREN0_dly), .WREN(WREN_dly), .CHIPSELECT(CHIPSELECT_dly), 
    .CLOCK(CLOCK_dly), .RDMARGINEN(GNDI), .RDMARGIN3(GNDI), .RDMARGIN2(GNDI), 
    .RDMARGIN1(GNDI), .RDMARGIN0(GNDI), .STANDBY(GNDI), .SLEEP(GNDI), 
    .POWEROFF_N(POWEROFF_N_dly), .TEST(GNDI), .DATAOUT15(DATAOUT15), 
    .DATAOUT14(DATAOUT14), .DATAOUT13(DATAOUT13), .DATAOUT12(DATAOUT12), 
    .DATAOUT11(DATAOUT11), .DATAOUT10(DATAOUT10), .DATAOUT9(DATAOUT9), 
    .DATAOUT8(DATAOUT8), .DATAOUT7(DATAOUT7), .DATAOUT6(DATAOUT6), 
    .DATAOUT5(DATAOUT5), .DATAOUT4(DATAOUT4), .DATAOUT3(DATAOUT3), 
    .DATAOUT2(DATAOUT2), .DATAOUT1(DATAOUT1), .DATAOUT0(DATAOUT0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLOCK => DATAOUT15) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT14) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT13) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT12) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT11) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT10) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT9) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT8) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT7) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT6) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT5) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT4) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT3) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT2) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT1) = (0:0:0,0:0:0);
    (CLOCK => DATAOUT0) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT15) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT14) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT13) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT12) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT11) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT10) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT9) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT8) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT7) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT6) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT5) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT4) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT3) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT2) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT1) = (0:0:0,0:0:0);
    (POWEROFF_N => DATAOUT0) = (0:0:0,0:0:0);
    $setuphold 
      (posedge CLOCK, ADDRESS13, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS13_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS12, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS12_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS11, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS11_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS10, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS10_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS9, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS9_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS8, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS8_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS7, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS7_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS6, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS6_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS5, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS5_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS4, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS4_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS3, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS3_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS2, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS2_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS1, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS1_dly);
    $setuphold 
      (posedge CLOCK, ADDRESS0, 0:0:0, 0:0:0,,,, CLOCK_dly, ADDRESS0_dly);
    $setuphold 
      (posedge CLOCK, DATAIN15, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN15_dly);
    $setuphold 
      (posedge CLOCK, DATAIN14, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN14_dly);
    $setuphold 
      (posedge CLOCK, DATAIN13, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN13_dly);
    $setuphold 
      (posedge CLOCK, DATAIN12, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN12_dly);
    $setuphold 
      (posedge CLOCK, DATAIN11, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN11_dly);
    $setuphold 
      (posedge CLOCK, DATAIN10, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN10_dly);
    $setuphold 
      (posedge CLOCK, DATAIN9, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN9_dly);
    $setuphold 
      (posedge CLOCK, DATAIN8, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN8_dly);
    $setuphold 
      (posedge CLOCK, DATAIN7, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN7_dly);
    $setuphold 
      (posedge CLOCK, DATAIN6, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN6_dly);
    $setuphold 
      (posedge CLOCK, DATAIN5, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN5_dly);
    $setuphold 
      (posedge CLOCK, DATAIN4, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN4_dly);
    $setuphold 
      (posedge CLOCK, DATAIN3, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN3_dly);
    $setuphold 
      (posedge CLOCK, DATAIN2, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN2_dly);
    $setuphold 
      (posedge CLOCK, DATAIN1, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN1_dly);
    $setuphold 
      (posedge CLOCK, DATAIN0, 0:0:0, 0:0:0,,,, CLOCK_dly, DATAIN0_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN3, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN3_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN2, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN2_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN1, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN1_dly);
    $setuphold 
      (posedge CLOCK, MASKWREN0, 0:0:0, 0:0:0,,,, CLOCK_dly, MASKWREN0_dly);
    $setuphold (posedge CLOCK, WREN, 0:0:0, 0:0:0,,,, CLOCK_dly, WREN_dly);
    $setuphold 
      (posedge CLOCK, CHIPSELECT, 0:0:0, 0:0:0,,,, CLOCK_dly, CHIPSELECT_dly);
    $setuphold 
      (posedge CLOCK, POWEROFF_N, 0:0:0, 0:0:0,,,, CLOCK_dly, POWEROFF_N_dly);
    $width (posedge CLOCK, 0:0:0);
    $width (negedge CLOCK, 0:0:0);
  endspecify

endmodule
